import java.awt.*;
import java.awt.event.*;
import java.io.BufferedInputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.URL;
import java.net.URLConnection;
import java.text.DecimalFormat;
import java.util.Locale;
import java.util.TreeMap;

import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

import org.apache.commons.lang.ObjectUtils;
import org.apache.commons.lang.math.NumberUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;





public class Index extends JFrame {  // 實作WindowStateListener介面

  public static void main(String[] args) {
		  
	  new Index();
  }

  ClassLoader cl = this.getClass().getClassLoader();
  private JButton Index = new JButton("<html><font face=標楷體   size=5  color=#000000>首頁</font><html>");
  private JButton Sub = new JButton("<html><font face=標楷體   size=5  color=#000000>科目指南</font><html>");
  private JButton Cal = new JButton("<html><font face=標楷體   size=5  color=#000000>關鍵指標</font><html>");
  private JButton Com = new JButton("<html><font face=標楷體   size=5  color=#000000>單項評比</font><html>");
  private JButton Chart = new JButton("<html><font face=標楷體   size=5  color=#000000>走勢圖</font><html>");
  private JButton Appr = new JButton("<html><font face=標楷體   size=5  color=#000000>綜合評比</font><html>");
  
  private JButton jbtn = new JButton();
  public  final Boolean TRUE = new Boolean(true); 
  public  final Boolean FALSE = new Boolean(false); 
  
  JPanel[] panels = new JPanel[6];
  String[] titles = new String[]{"首頁","科目指南","關鍵指標","單項評比","走勢圖","綜合評比"};
  final JTabbedPane tp = new JTabbedPane(JTabbedPane.TOP); //BOTTOM往下 //RIGHT往右
  public JLabel cloud = new JLabel(new ImageIcon(cl.getResource("image/修圖.png"))); 
  public JPanel backpan = new JPanel();
  public JPanel background = new JPanel();
  public JLabel backbtn = new JLabel(new ImageIcon(cl.getResource("image/分隔上1.png")));
  public JLabel backline = new JLabel(new ImageIcon(cl.getResource("image/分隔右1.png")));
  public JLabel backbtn1 = new JLabel(new ImageIcon(cl.getResource("image/首頁9.png")));
  public JLabel backbtn2 = new JLabel(new ImageIcon(cl.getResource("image/會計科目指南10.png")));
  public JLabel backbtn3 = new JLabel(new ImageIcon(cl.getResource("image/比率解析7.png")));
  public JLabel backbtn4 = new JLabel(new ImageIcon(cl.getResource("image/單項評比7.png")));
  public JLabel backbtn5 = new JLabel(new ImageIcon(cl.getResource("image/走勢圖8.png")));
  public JLabel backbtn6 = new JLabel(new ImageIcon(cl.getResource("image/綜合評比6.png")));
  
  public JLabel  Iindex = new JLabel(new ImageIcon(cl.getResource("image/首頁圖1.png")));
  public JLabel  Iindex1 = new JLabel(new ImageIcon(cl.getResource("image/首頁素材1之2.png")));
  public JLabel  Iindex2 = new JLabel(new ImageIcon(cl.getResource("image/首頁素材2之2.png")));
  public JLabel  Iindex3 = new JLabel(new ImageIcon(cl.getResource("image/首頁素材3之2.png")));
  public JLabel  Iindex4 = new JLabel(new ImageIcon(cl.getResource("image/首頁素材4之2.png")));
  public JLabel  Iindex5 = new JLabel(new ImageIcon(cl.getResource("image/首頁素材5之2.png")));
  
  public JLabel  Iindex6 = new JLabel(new ImageIcon(cl.getResource("image/彈出1.png")));
  public JLabel  Iindex7 = new JLabel(new ImageIcon(cl.getResource("image/彈出2.png")));
  public JLabel  Iindex8 = new JLabel(new ImageIcon(cl.getResource("image/彈出3.png")));
  public JLabel  Iindex9 = new JLabel(new ImageIcon(cl.getResource("image/彈出4.png")));
  public JLabel  Iindex10 = new JLabel(new ImageIcon(cl.getResource("image/彈出5.png")));
 
  
//------------------------------------------------Sub------------------------
  
  public JButton subt[] = new JButton[5];
  public JPanel Span = new JPanel();
  public JPanel Span1 = new JPanel();
  public JPanel Span2 = new JPanel();
  public JPanel Span3 = new JPanel();
  JButton Sbtn[] = new JButton[62];
  public JLabel Subl = new JLabel();
  
//----------------------------------------------End Sub------------------------
  
  
//------------------------------------------------Cal------------------------
  
  private JPanel Lpan2,Lpan3,Lpan4 ;
  private JButton fo[] = new JButton[10];
  private JLabel  Ltotal , ans , par,par1,exp;
  private JLabel oa[] = new JLabel[6];
  private JLabel back = new JLabel();
  public int Cals = -1;
  private JButton Calb = new JButton();
  private JLabel Ex1 = new JLabel();
  private JLabel Ex2 = new JLabel();
  private JLabel Ex3 = new JLabel();
//------------------------------------------------Emd Cal------------------------

//------------------------------------------------Com------------------------
  

  private JComboBox<String> Ccbo ,Ccom,Ccom1,Ccom2;
  private JLabel Ctitle;
  private JButton btn[] = new JButton[4];
  private JButton input = new JButton("Excel");

	  private	String[] comm11 = {"請選擇","1201 味全公司","1216 統一","1217 愛之味","1233 天仁","1234 黑松"};
	  private	String[] comm22 = {"請選擇","2201 裕隆汽車","2204 中華","2206 三陽工業","2207 和泰汽車"};
	  private	String[] comm33 = {"請選擇","2315 神腦","2353 宏碁","2356 英業達","2357 華碩","2377 微星"};
	  private JPanel Cpan2,Cpan3,Cpan4,Cpan8;
	  
	  public  String[] aas = new String[10];
	  public JLabel jp[] = new JLabel[10];
	  public JLabel jp1[] = new JLabel[10];
	  public JLabel jp2[] = new JLabel[10];
	  public JCheckBox jcheckbox[] = new JCheckBox[10];
	  float aa0,aa1,aa2,aa3,aa4,aa5,aa6,aa7,aa8,aa9;
	  	ChartPanel panel,panell;
	  	public float q[]= new float[10];
	  	public String w[] = new String[10];
	  	public float qq[]= new float[5];
	  	public String ww[] = new String[5];
	  	public float c[] = new float[6];
	  	public float c1[] = new float[6];
	  	public float c2[] = new float[6];
	  	public float c3[] = new float[6];
	  	public float c4[] = new float[6];
	  	public float c5[] = new float[6];
	  	public float c6[] = new float[6];
	  	public float c7[] = new float[6];
	  	public float c8[] = new float[6];
	  		  	
	  	public int[] comma ={1201,1217,1234,2201,2206,2207,2315,2353,2357};
	  	
	  	public JSeparator Cjs[] = new JSeparator[3];
	  	public JSeparator Cjsh[] = new JSeparator[11];
	  	
	  	public JLabel Cex1 = new JLabel("關鍵指標");
	  	public JLabel Cex2 = new JLabel("公司一");
	  	public JLabel Cex3 = new JLabel("公司二");
	  	public JLabel Cex4 = new JLabel("公司三");
	  	
//---------------------------------------------End Com------------------------
  
//------------------------------------------------Chart------------------------
   private JPanel pan2,pan3,pan4;
  private JComboBox<String> cbo,sea,rat,com,com1,com2;
  private JButton start = new JButton("開始");
  private JButton reload = new JButton("清除");
  private String[] instance = {"產業","食品工業","汽車工業","電子通路業"};
  private String[] Cdata = {"年度","99  年度","100  年度"};
  private String ima[] = {"比率","ROE","ROA","純益率","毛利率","流動比率","負債比率","每股淨值","存貨週轉率","資本週轉率", "應收帳款週轉率"};
  private	String[] comm1 = {"公司","1201 味全公司","1216 統一","1217 愛之味","1233 天仁","1234 黑松"};
  private	String[] comm2 = {"公司","2201 裕隆汽車","2204 中華","2206 三陽工業","2207 和泰汽車"};
  private	String[] comm3 = {"公司","2315 神腦","2353 宏碁","2356 英業達","2357 華碩","2377 微星"};
  private JButton Explanation = new JButton("說明");
  public  float[] aa = new float[10];
  float a,a1,a2,a3,a4,a5,a6,a7,a8,a9;
  public DecimalFormat df=new DecimalFormat("#.####");
  private	int[] n99 = {39,37,37,34};
  private	int[] h100 = {31,25,21,14};
   public float[] ra = new float[8];
   public float[] ra1 = new float[8];
   public float[] ra2 = new float[8];
   DefaultCategoryDataset dataset = new DefaultCategoryDataset();
   DefaultCategoryDataset dataset1 = new DefaultCategoryDataset();
  
  JLabel raa= new JLabel("燈號分數");
 
  
//----------------------------------------------End Chart----------------------

//----------------------------------------------Appr----------------------
  private JPanel Apan1,Apan2 ;
  public JSlider jslider[] = new JSlider[10];
  public JLabel im[] = new JLabel[10];
  public JButton Astart = new JButton("Start");
  public JButton Bub = new JButton("泡泡圖");
  public JButton Bar = new JButton("長條圖");
  public JButton Areload = new JButton("Reload");
  public JButton Astatic = new JButton("說明");
  public JButton Astatic1 = new JButton("風險型");
  public JButton Astatic2 = new JButton("保守型");
  public JButton Astatic3 = new JButton("資訊輸出");
  public JSeparator js ,js1;
  private	String[] Acomm1 = {"1201 味全公司","1216 統一","1217 愛之味","1233 天仁","1234 黑松","2201 裕隆汽車","2204 中華","2206 三陽工業","2207 和泰汽車","2315 神腦","2353 宏碁","2356 英業達","2357 華碩","2377 微星",""};
  private	String[] Acomm2 = {"2201 裕隆汽車","2204 中華","2206 三陽工業","2207 和泰汽車"};
  private	String[] Acomm3 = {"2315 神腦","2353 宏碁","2356 英業達","2357 華碩","2377 微星"};
  public Integer[] Acom1 = new Integer[15];
//  public Integer[] com1 = new Integer[4];
//  public Integer[] com1 = new Integer[5];
  public Integer co1[] = new Integer[5];
  public Integer co2[] = new Integer[4];
  public Integer co3[] = new Integer[5];
  public float f1201[] = new float[10],f1216[]= new float[10],f1217[]= new float[10],f1233[]= new float[10],f1234[]= new float[10],car2201[]= new float[10],car2204[]= new float[10],car2206[]= new float[10],car2207[]= new float[10],co2315[]= new float[10],co2353[]= new float[10],co2356[]= new float[10],co2357[]= new float[10],co2377[]= new float[10];
  public float b1201[] = new float[10],b1216[]= new float[10],b1217[]= new float[10],b1233[]= new float[10],b1234[]= new float[10],b2201[]= new float[10],b2204[]= new float[10],b2206[]= new float[10],b2207[]= new float[10],b2315[]= new float[10],b2353[]= new float[10],b2356[]= new float[10],b2357[]= new float[10],b2377[]= new float[10];
  public float Aa,Aa1,Aa2,Aa3,Aa4,Aa5,Aa6,Aa7,Aa8,Aa9;
  public String Ab,Ac,Ad,Ae,Af,Ag,Ah,Ai,Aj,Ak;
  public float food0=0,food1=0,food2=0,food3=0,food4=0,coo0=0,coo1=0,coo2=0,coo3=0,coo4=0,car0=0,car1=0,car2=0,car3=0;
  public float [] sou = new float[14];
  public String  [] name = new String[14] ;
  
  public JTable table;
  public JScrollPane pane;
  public TableModel model;
  public Object[][] data =new Object[14][2];
  public static BufferedWriter bt = null;
  public JLabel score[] = new JLabel[6];
  
	public TreeMap<Float,String> tmap = new TreeMap<>();
	public float tmouth[] = new float[14];
	public String tname[] = new String[14];
  
  
//----------------------------------------------End Appr----------------------
  
  
  public Index() {
   
    final ClassLoader cl = this.getClass().getClassLoader();
    //這串是去跑資料夾內所有檔案
    setResizable(FALSE);
	setTitle("R.H.J.B");
	setSize(1200, 720);
	setLayout(null);



//--------------------------------分頁功能分頁功能---------------------------------	
	
	for(int x = 0; x < panels.length; x++)
	{
	panels[x] = new JPanel();
	panels[x].setLayout(null);
	tp.addTab(titles[x],null,panels[x],titles[x]+"*");
	}
	  
//	  tp.setBounds(200, 110, 950, 570);
	  tp.setBounds(225, 110, 950, 570);
	  add(tp,null);
	
	  add(cloud);
	  cloud.setBounds(0, 0, 1200, 100);


	    
	  
	  Border lineI = BorderFactory.createLineBorder(getBackground().black);
//	  backpan.setBorder(BorderFactory.createTitledBorder(lineI));
	  backpan.setBorder(null);
	  backpan.setBounds(0, 100, 200, 900);
	  backpan.setLayout(null);
	  add(backpan);
	  
	  Index.setBounds(77, 70, 100, 40);
		Sub.setBounds(77, 160, 100, 40);
		Cal.setBounds(77, 250, 100, 40);
		Com.setBounds(77, 340, 100, 40);
		Chart.setBounds(77, 430, 100, 40);
	    Appr.setBounds(77, 510, 100, 40);
	  
	  backbtn.setBounds(0, 0, 200, 40);
	  backpan.add(backbtn);
	  
	  backline.setBounds(195, 40, 5, 700);
	  backpan.add(backline);
	
	  backbtn1.setBounds(15, 60, 50, 60);
	  backpan.add(backbtn1);
	  
	  backbtn2.setBounds(15, 150, 50, 60);
	  backpan.add(backbtn2);
	  
	  backbtn3.setBounds(15, 240, 50, 60);
	  backpan.add(backbtn3);
	  
	  backbtn4.setBounds(15, 330, 50, 60);
	  backpan.add(backbtn4);
	  
	  backbtn5.setBounds(15, 420, 50, 60);
	  backpan.add(backbtn5);
	  
	  backbtn6.setBounds(15, 500, 50, 60);
	  backpan.add(backbtn6);
	  
//	  background.setBounds(0,0,1200,700);
//	  background.setBackground(Color.white);
//	  add(background);

	  Iindex.setBounds(0, 0, 950, 570);
	  Iindex1.setBounds(16, 317, 187, 157);
	  Iindex2.setBounds(216, 317, 187, 157);
	  Iindex3.setBounds(414, 317, 187, 157);
	  Iindex4.setBounds(610, 317, 187, 157);
	  Iindex5.setBounds(810, 317, 187, 157);
	  
	  
	  
	  panels[0].add(Iindex6);
	  panels[0].add(Iindex7);
	  panels[0].add(Iindex8);
	  panels[0].add(Iindex9);
	  panels[0].add(Iindex10);
	  
	  
	  panels[0].add(Iindex);
	  panels[0].add(Iindex1);
	  panels[0].add(Iindex2);
	  panels[0].add(Iindex3);
	  panels[0].add(Iindex4);
	  panels[0].add(Iindex5);
	  
	  
	  
	  Iindex6.setBounds(153, 40, 650, 390);
	  Iindex7.setBounds(153, 40, 650, 390);
	  Iindex8.setBounds(153, 40, 650, 390);
	  Iindex9.setBounds(153, 40, 650, 390);
	  Iindex10.setBounds(153, 40, 650, 390);
	  
	  Iindex6.setVisible(FALSE);
	  Iindex7.setVisible(FALSE);
	  Iindex8.setVisible(FALSE);
	  Iindex9.setVisible(FALSE);
	  Iindex10.setVisible(FALSE);
	  
	  Iindex1.addMouseListener(new MouseAdapter(){
	         public void mouseEntered(MouseEvent e){  //當滑鼠游標進入物件範圍

	          Iindex6.setVisible(TRUE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(FALSE);
	       	  
	        	 
	         }
	      });
	  
	  Iindex2.addMouseListener(new MouseAdapter(){
	         public void mouseEntered(MouseEvent e){  //當滑鼠游標進入物件範圍
	                       
	        	 Iindex6.setVisible(FALSE);
		       	  Iindex7.setVisible(TRUE);
		       	  Iindex8.setVisible(FALSE);
		       	  Iindex9.setVisible(FALSE);
		       	  Iindex10.setVisible(FALSE);
	         }
	      });
	  
	  Iindex3.addMouseListener(new MouseAdapter(){
	         public void mouseEntered(MouseEvent e){  //當滑鼠游標進入物件範圍
	  
	             
	        	  Iindex6.setVisible(FALSE);
		       	  Iindex7.setVisible(FALSE);
		       	  Iindex8.setVisible(TRUE);
		       	  Iindex9.setVisible(FALSE);
		       	  Iindex10.setVisible(FALSE);
	  
		       	  
	         }
	      });
	  
	  Iindex4.addMouseListener(new MouseAdapter(){
	         public void mouseEntered(MouseEvent e){  //當滑鼠游標進入物件範圍
	                       
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(TRUE);
	       	  Iindex10.setVisible(FALSE);
  
	         }
	      });
	  
	  Iindex5.addMouseListener(new MouseAdapter(){
	         public void mouseEntered(MouseEvent e){  //當滑鼠游標進入物件範圍
	                       
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(TRUE);
  
	         }
	      });
//-----------------------------------------滑鼠離開
	  Iindex1.addMouseListener(new MouseAdapter(){
	         public void mouseExited(MouseEvent e){   //當滑鼠游標進入物件範圍
	            
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(FALSE);
  
	         }
	      });
	  
	  Iindex2.addMouseListener(new MouseAdapter(){
	         public void mouseExited(MouseEvent e){   //當滑鼠游標進入物件範圍
	
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(FALSE);
  
	         }
	      });
	  
	  Iindex3.addMouseListener(new MouseAdapter(){
	         public void mouseExited(MouseEvent e){   //當滑鼠游標進入物件範圍
	
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(FALSE);
  
	         }
	      });
	  
	  Iindex4.addMouseListener(new MouseAdapter(){
	         public void mouseExited(MouseEvent e){   //當滑鼠游標進入物件範圍
	
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(FALSE);
  
	         }
	      });
	  
	  Iindex5.addMouseListener(new MouseAdapter(){
	         public void mouseExited(MouseEvent e){   //當滑鼠游標進入物件範圍
	
	       	  Iindex6.setVisible(FALSE);
	       	  Iindex7.setVisible(FALSE);
	       	  Iindex8.setVisible(FALSE);
	       	  Iindex9.setVisible(FALSE);
	       	  Iindex10.setVisible(FALSE);
  
	         }
	      });
	  
//-------------------------------------滑鼠點擊	
	  Iindex1.addMouseListener(new MouseAdapter(){
	         public void mousePressed(MouseEvent e){  //實做滑鼠的點擊事件
	        	 tp.getModel().setSelectedIndex(1);
	        	 
	         }
	      });
	  
	  Iindex2.addMouseListener(new MouseAdapter(){
	         public void mousePressed(MouseEvent e){  //實做滑鼠的點擊事件
	        	 tp.getModel().setSelectedIndex(2);
	        	 
	         }
	      });
	  
	  Iindex3.addMouseListener(new MouseAdapter(){
	         public void mousePressed(MouseEvent e){  //實做滑鼠的點擊事件
	        	 tp.getModel().setSelectedIndex(3);
	        	 
	         }
	      });
	  
	  Iindex4.addMouseListener(new MouseAdapter(){
	         public void mousePressed(MouseEvent e){  //實做滑鼠的點擊事件
	        	 tp.getModel().setSelectedIndex(4);
	        	 
	         }
	      });
	  
	  Iindex5.addMouseListener(new MouseAdapter(){
	         public void mousePressed(MouseEvent e){  //實做滑鼠的點擊事件
	        	 tp.getModel().setSelectedIndex(5);
	        	 
	         }
	      });
	  
//-----------------------------End  分頁功能分頁功能-------------------------------

	  
//------------------------------------------------Sub 程式碼------------------------

	    subt[0] = new JButton(new ImageIcon(cl.getResource("image/資產.png")));
		subt[1] = new JButton(new ImageIcon(cl.getResource("image/負債.png")));
		subt[2] = new JButton(new ImageIcon(cl.getResource("image/業主權益.png")));
		subt[3] = new JButton(new ImageIcon(cl.getResource("image/收益.png")));
		subt[4] = new JButton(new ImageIcon(cl.getResource("image/費損.png")));
		
		subt[0].setBounds(30, 30, 60, 45);
		subt[1].setBounds(30, 100, 60, 45);
		subt[2].setBounds(30, 170, 120, 45);
		subt[3].setBounds(30, 240, 60, 45);
		subt[4].setBounds(30, 310, 60, 45);
		
		for(int i=0;i<subt.length;i++){
			subt[i].setContentAreaFilled(FALSE);
			subt[i].setBorder(null);
			subt[i].setCursor(new Cursor(Cursor.HAND_CURSOR));
			panels[1].add(subt[i]);
		}
		
		
//		String St[] = {"現金","交易目的的融資","應收票據","應收帳款","備抵呆帳","其他應收款","存貨","用品盤存","預付費用","土地","建築物","累計折舊-建築物","運輸設備","累計折舊-運輸設備","辦公設備","累計折舊-辦公設備","專利權","累計攤銷-專利權","代付款","暫存款","存出保證金",
//				"銀行透資","短期借款","應付票據","應付帳款","其他應付款","預收收入","抵押借款","代收款","暫收款","存入保證金",
//				"業主資本","業主往來","本期損益",
//				"銷貨收入","銷貨退回","銷貨折讓","服務收入","傭金收入","租金收入","利息收入","出售資產利得",
//				"進貨","進貨退出","進貨折讓","薪資費用","租金費用","文具用品","差旅費","郵電費","修繕費","廣告費","水電費","保險費","交際費","稅捐","壞帳費用","折舊費用","傭金費用","開辦費用","利息費用","出售資產損失"};

		
//		String St[] = {"現金","交易目的的融資","應收票據","應收帳款","備抵呆帳","其他應收款","存貨","用品盤存","預付費用","土地","建築物","累計折舊-建築物","運輸設備","累計折舊-運輸設備","辦公設備","累計折舊-辦公設備","專利權","累計攤銷-專利權","代付款","暫存款","存出保證金"};
//		
//						0		1				2		3			4		5		6		7			8		9	10			11			 12				13			14			15			  16		17			18		19		20
		
//		"進貨","進貨退出","進貨折讓","薪資費用","租金費用","文具用品","差旅費","郵電費","修繕費","廣告費","水電費","保險費","交際費","稅捐","壞帳費用","折舊費用","傭金費用","開辦費用","利息費用","出售資產損失"};
//		
//		  42	43			44		45		46			47		48		49		50		51		52		53		54		55		56		57		58			59		60			61
//		
		
		
		
		String St[] = {"現金","存貨","土地","建築物","專利權","代付款","暫存款","應收票據","應收帳款","備抵呆帳","用品盤存","預付費用","運輸設備","辦公設備","其他應收款","存出保證金","交易目的的融資","累計折舊-建築物","累計攤銷-專利權","累計折舊-運輸設備","累計折舊-辦公設備",
		"代收款","暫收款","銀行透資","短期借款","應付票據","應付帳款","預收收入","抵押借款","存入保證金","其他應付款",
		"業主資本","業主往來","本期損益",
		"銷貨收入","銷貨退回","銷貨折讓","服務收入","傭金收入","租金收入","利息收入","出售資產利得",
		  "進貨","稅捐","差旅費","郵電費","修繕費","廣告費","水電費","保險費","交際費","進貨退出","進貨折讓","薪資費用","租金費用","文具用品","壞帳費用","折舊費用","傭金費用","開辦費用","利息費用","出售資產損失"};				
						
		for(int i=0;i<Sbtn.length;i++){
			Sbtn[i] = new JButton(St[i]);
			Sbtn[i].setCursor(new Cursor(Cursor.HAND_CURSOR));
			Sbtn[i].setVisible(FALSE);
			Span.add(Sbtn[i]);
		}
	  
		panels[1].add(Span);
		Span.setBounds(10, 370, 925, 160);
		Border lineC = BorderFactory.createLineBorder(Color.black);
		Span.setBorder(BorderFactory.createTitledBorder(lineC,"科目"));
		Span.setLayout(null);
		
		panels[1].add(Span1);
		Span1.setBounds(200 , 35 , 733 , 315);
		Span1.setBorder(BorderFactory.createTitledBorder(lineC,"解釋"));
		Span1.setLayout(null);
		
//		Span2.setBounds(100, 40, 730, 110);
//		Span2.setBorder(null);
//		Span2.setLayout(null);
//		Span.add(Span2);
//		
		Span3.setBounds(60, 40, 600, 230);
		Span3.setBorder(null);
		Span3.setLayout(null);
		Span1.add(Span3);
		
		Subl = new JLabel("<html><font face=標楷體 size=6 color=#3937FF>請點選左方　５　個以產生說明。</font><html>");
		Subl.setBounds(0,0, 600,230 );
		Span3.add(Subl);
		
		
		
		int l=152;
		
		for(int i =0;i<=5;i++){
			if(i==0){
				Sbtn[0].setBounds(10, 17, 143, 25);
				
			}else{
			
			Sbtn[i].setBounds((10+l), 17, 143, 25);
		
			l=l+152;
			}
		}
		
		l=152;
		
		for(int i =6;i<=11;i++){
			if(i==6){
			
				Sbtn[6].setBounds(10, 54, 143, 25);
			
			}else{

				Sbtn[i].setBounds((10+l), 54, 143, 25);
			
				l=l+152;
				}
			
		}
		
		l=152;
		
		for(int i =12;i<=17;i++){
			if(i==12){
				Sbtn[12].setBounds(10, 91, 143, 25);
			
			}else{
			
			Sbtn[i].setBounds((10+l), 91, 143, 25);
			
			l=l+152;
			}
			
		}
		
		l=152;
		
		for(int i =18;i<=20;i++){
			if(i==18){
				Sbtn[18].setBounds(10, 128, 143, 25);
			
			}else{
			
			Sbtn[i].setBounds((10+l), 128, 143, 25);
			
			l=l+152;
			}
			
		}

		l=152;
		
		for(int i =21;i<=26;i++){
			if(i==21){
				Sbtn[21].setBounds(10, 17, 143, 25);
				
			}else{
			
			Sbtn[i].setBounds((10+l), 17, 143, 25);
		
			l=l+152;
			}
		}
			
		l=152;
		
		for(int i =27;i<=30;i++){
			if(i==27){
			
				Sbtn[27].setBounds(10, 54, 143, 25);
			
			}else{

				Sbtn[i].setBounds((10+l), 54, 143, 25);
			
				l=l+152;
				}
			
		}
		
		l=152;
		
		for(int i =31;i<=33;i++){
			if(i==31){
				Sbtn[31].setBounds(10, 17, 143, 25);
				
			}else{
			
			Sbtn[i].setBounds((10+l), 17, 143, 25);
		
			l=l+152;
			}
		}
		
		l=152;
		
		for(int i =34;i<=39;i++){
			if(i==34){
				Sbtn[34].setBounds(10, 17, 143, 25);
				
			}else{
			
			Sbtn[i].setBounds((10+l), 17, 143, 25);
		
			l=l+152;
			}
		}



		l=152;
		
		for(int i =40;i<=41;i++){
			if(i==40){
			
				Sbtn[40].setBounds(10, 54, 143, 25);
			
			}else{

				Sbtn[i].setBounds((10+l), 54, 143, 25);
			
				l=l+152;
				}
			
		}

		
		
		 l=152;
		
		for(int i =42;i<=47;i++){
			if(i==42){
				Sbtn[42].setBounds(10, 17, 143, 25);
				
			}else{
			
			Sbtn[i].setBounds((10+l), 17, 143, 25);
		
			l=l+152;
			}
		}
		
		l=152;
		
		for(int i =48;i<=53;i++){
			if(i==48){
			
				Sbtn[48].setBounds(10, 54, 143, 25);
			
			}else{

				Sbtn[i].setBounds((10+l), 54, 143, 25);
			
				l=l+152;
				}
			
		}
		
		l=152;
		
		for(int i =54;i<=59;i++){
			if(i==54){
				Sbtn[54].setBounds(10, 91, 143, 25);
			
			}else{
			
			Sbtn[i].setBounds((10+l), 91, 143, 25);
			
			l=l+152;
			}
			
		}
		
		
		l=152;
		
		for(int i =60;i<=61;i++){
			if(i==60){
				Sbtn[60].setBounds(10, 128, 143, 25);
			
			}else{
			
			Sbtn[i].setBounds((10+l), 128, 143, 25);
			
			l=l+152;
			}
			
		}

		

		subt[0].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font  face=標楷體 size=5 color=#3937FF>資產指企業的經濟資源，能以貨幣衡量，該資源在經營的過程中，能發揮經濟效益者。</font></html>");
				
				
			for(int i=0;i<Sbtn.length;i++){
				Sbtn[i].setVisible(TRUE);
			}
			
			for(int i=21;i<=30;i++){
				Sbtn[i].setVisible(FALSE);
			}
			
			for(int i=31;i<=33;i++){
				Sbtn[i].setVisible(FALSE);
			}
			
			for(int i=34;i<=41;i++){
				Sbtn[i].setVisible(FALSE);
			}
			
			for(int i=42;i<=61;i++){
				Sbtn[i].setVisible(FALSE);
			}
		
			}
		}
		);
		
		
		subt[1].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font  face=標楷體 size=5 color=#3937FF>負債指企業所積欠的債務，能以貨幣衡量，將來有義務使用經濟資源以償付者。</font><html>");
				
				
				for(int i=0;i<Sbtn.length;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=21;i<=30;i++){
					Sbtn[i].setVisible(TRUE);
				}
				
				for(int i=31;i<=33;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=34;i<=41;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=42;i<=61;i++){
					Sbtn[i].setVisible(FALSE);
				}
			
			}
		}
		);
		
		subt[2].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font  face=標楷體 size=5 color=#3937FF>業主權益指業主對企業使用資產償還負債後之剩餘財產的請求權，該請求權是屬業主的權益。</font><html>");
				
				

				for(int i=0;i<Sbtn.length;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=21;i<=30;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=31;i<=33;i++){
					Sbtn[i].setVisible(TRUE);
				}
				
				for(int i=34;i<=41;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=42;i<=61;i++){
					Sbtn[i].setVisible(FALSE);
				}
		
			}
		}
		);
		
		subt[3].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font  face=標楷體 size=5 color=#3937FF>收益指企業在一定期間因主要或中心業務而交付或生產貨物、提供勞務、或其他活動，所產生的資產流入或其他增益等等。</font><html>");
				
				

				for(int i=0;i<Sbtn.length;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=21;i<=30;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=31;i<=33;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=34;i<=41;i++){
					Sbtn[i].setVisible(TRUE);
				}
				
				for(int i=42;i<=61;i++){
					Sbtn[i].setVisible(FALSE);
				}
		
			}
		}
		);
		
		subt[4].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=標楷體 size=5 color=#3937FF>費損指企業在一定期間因主要或中心業務而交付或生產貨物、提供勞務、或其他活動，所產生的資產流出或其他消耗等等。</font><html>");
				
				

				for(int i=0;i<Sbtn.length;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=21;i<=30;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=31;i<=33;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=34;i<=41;i++){
					Sbtn[i].setVisible(FALSE);
				}
				
				for(int i=42;i<=61;i++){
					Sbtn[i].setVisible(TRUE);
				}
		
			}
		}
		);

		
		Sbtn[0].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡紙幣、硬幣、營行活期存款、定期存款或銀行可視為存款而加以接受支票據均稱之為現今。此處現金只廣義之現金，包含庫存現金以及銀行存款，若現金只庫存現金時，則需另一個銀行存款(Cash in Bank)之會計科目，以分別列式存放於商店及銀行之現金分別為若干。</font><html>");
			}
		}
		);


	    Sbtn[1].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>企業所有，供銷售為目的、期末尚未出售的貨品。</font><html>");
			}
		}
		);

	    
	    Sbtn[2].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡企業所購買供營業用之土地及稱之為土地，體地雖然與房屋分不開，但於會計之記錄須加以分開，主要原因乃是土地無論使用多久均沒有損壞之問題，而房屋會隨使用時間愈久而損壞越大，因此其價值會遞減。</font><html>");
			}
		}
		);



	    Sbtn[3].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>指土地上之定著物，其購買係用以供營業所使用者，稱之為建築物。</font><html>"); 
			}
		}
		);


	    Sbtn[4].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>政府授以之專有製造或銷售專利品之權利。</font><html>");
			}
		}
		);
	    

	    Sbtn[5].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>代他人墊付之款。</font><html>");
			}
		}
		);

	    Sbtn[6].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>用途或金額尚未確定而支付之款項。</font><html>");
			}
		}
		);

	 
	 Sbtn[7].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡賒銷商品或勞務，而取得客戶所開具之匯票、本票及遠期支票等書面憑證稱之為應收票據。</font><html>");

		}
	}
	);

	 Sbtn[8].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡信用賒銷商品或勞務所產生之求償權及稱之為應收帳款；當賒銷產生時，應收帳款增加，而客戶還款時，應收帳款即行減少。</font><html>");
			}
		}
		);


	 Sbtn[9].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>應收款項中，包含應收票據以及應收帳款，估計收不回的帳款，即稱之為備抵呆帳(備抵壞帳),此項會計科目列於資產類，但因其性質為應收票據及應收帳款之加減項，故此帳戶一般有貸餘產生。</font><html>");

		}
	}
	);
	 
	    Sbtn[10].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>企業買入之用品，例如，文具用品，清潔用品等消耗用品，在尚未使用前稱之為用品盤存。</font><html>");
			}
		}
		);


	    Sbtn[11].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>收到被提供之勞務前，預先支付該項勞務之款項，稱之為預付費用，例如，租用房屋，尚未使用房屋時即預先付三個月房租，此項預先支付之費用即稱之為預付租金。預付費用常包含預付租金，預付保險費等。</font><html>");
			}
		}
		);


	    Sbtn[12].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡購買供營業所使用之小客車、小貨車或大客車、大貨車等均稱為運輸設備。</font><html>");
			}
		}
		);

	    
	    Sbtn[13].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡購買企業所須使用之桌椅、櫃子、沙發、電腦設備等，均屬於辦公設備，又稱為生財器具。</font><html>");
			}
		}
		);

	 
	 Sbtn[14].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF><<<除了賒售商品或勞務外，其他產生應收取之款項即稱之為其他應收款。例如，員工借支，賒售企業之設備等所產生之應收款項。</font><html>");
			}
		}
		);


	    
	    Sbtn[15].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>本店寄放於他人作為保證金或押金者。</font><html>");
			}
		}
		);


		 Sbtn[16].addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e){
					Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>係指取得的目的係在短期內再出售，以賺取差價為目的的股票或債券投資,即可歸類交易目的金融資產。</font><html>");

			}
		}
		);

		 



	    Sbtn[17].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>隨著房屋之使用而銷耗掉之成本即稱之為累計折舊-建築物；為建築物之減項。</font><html>");
			}
		}
		);


	    Sbtn[18].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>隨著專利權之使用而消耗掉之成本稱之累計攤銷-專利權，為專利權之減項。</font><html>");
			}
		}
		);

	    

	    Sbtn[19].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>隨著運輸設備之使用而消耗掉之成本即成之為累計折舊-運輸設備；為運輸設備之減項。</font><html>");


			}
		}
		);




	    Sbtn[20].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>隨著辦公設備之使用而消耗掉之成本稱之為累計折舊-辦公設備，為辦公設備之減項。</font><html>");
			}
		}
		);





	    
	    //　↑資產類

	    Sbtn[21].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>代他人收取之款項。</font><html>");
			}
		}
		);

	    Sbtn[22].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>用途或金而尚未確定而暫時收取之款項。</font><html>");
			}
		}
		);


	    Sbtn[23].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>若與銀行訂有透支契約，當企業開出支票存款不足時，由銀行予以暫時墊付之款項稱之為銀行透支。</font><html>");
			}
		}
		);



	    Sbtn[24].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡向金融機構或他人貸得一年內到期之款項即稱之為短期借款。</font><html>");
			}
		}
		);



	    Sbtn[25].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>此項剛好與應收票據相反，凡賒購商品、勞務或融資而開立之匯票、本票或遠期資票等書面憑證稱之為應付票據。</font><html>");
			}
		}
		);

	    
	    
	    Sbtn[26].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>此科目剛好與應收帳款相反，凡信用賒購商品、用品或勞務所應付之款項。</font><html>");
			}
		}
		);




	    Sbtn[27].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡是預先首取款項而尚未提供才貸或勞務者，期屬尚未賺取之收入，稱之為預收收入。</font><html>");
			}
		}
		);


	    Sbtn[28].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡以不動產等為抵押品，向金融機構或其他人貸得知款項，通常期間均超過一年者，稱之為抵押借款。</font><html>");
			}
		}
		);


	    Sbtn[29].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡他人存放於本店做為保證金或押金者。</font><html>");
			}
		}
		);

	    
	    Sbtn[30].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>除了賒購商品、用品及勞務外所應支付而未支付之款項譏稱之為其他應付款，例如，購買營業用之土地以及房屋之應付而未付之款項即為應付房地款，另外此項亦可包含應付費用，例如，應付之房租、薪資、利息或其他費用而尚未支付者，稱之為應付費用，可歸入其他應付款中。</font><html>");
			}
		}
		);


      //  21 ~ 30
	    
	    Sbtn[31].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>獨資企業之業主於創業時投入之資本，以及開業後所增加的資本。可用「業主資本」或「某某人資本」。</font><html>");
			}
		}
		);


	    Sbtn[32].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText( "<html><font face=微軟正黑體  size=5  color=#3937FF>獨資企業之業主與企業之間零時往來的事項，如業主從企業提取現金或商品，或業主為企業所做之墊款。可用「業主往來」或「某某人往來」。</font><html>");
			}
		}
		);



	    Sbtn[33].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>將收益及費損類科目之最後於而彙集於一個帳戶，以求得當期之淨利或淨損，此科目即稱之為損議會總。所有之收益類科目彙集於本科目之貸方，而所有之費損類科目彙集於本科目之借方，當本科目有貸餘時，表示收益大於費損，則產生淨利；而當本科目友借餘時，表示費損大於收益，則產生淨損。本科目之貸餘會造成業主成本增加(因有淨利發生) 本科目之借餘會造成業主成本減少(因有淨損發生)。");
			}
		}
		);

	    // 31 ~ 33
	    
	    Sbtn[34].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>銷售商品所得的價款。</font><html>");
			}
		}
		);

	    Sbtn[35].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>被顧客退回之商品，屬於銷貨收入之減項。</font><html>");
			}
		}
		);

	    Sbtn[36].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>鼓勵客戶提早還款給予的現金折扣，屬於銷貨收入之減項。</font><html>");
			}
		}
		);


	    Sbtn[37].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>企業提供資勞務所獲取之報酬成之為服務收入。服務業之主要業務即在提供服務，因此服務收入為其營業之收入。</font><html>");
			}
		}
		);


	    Sbtn[38].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>媒介生意所獲取之收入稱之為佣金收入，若企業係以媒介房屋為主要之行業，此時其所獲取之佣金收入即為其他服務收入，亦即主要之營業收入。</font><html>");
			}
		}
		);


	    Sbtn[39].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>出租資產所獲取之報酬稱之為租金收入。對於以出租資產為業之租賃企業而言，租金收入為營業收入；對於非以出租資產為業之企業而言，租金收入即為營業外收益。</font><html>");
			}
		}
		);


	    Sbtn[40].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>貸方資金所獲取之報酬稱之為利息收入。對於銀行業等金融機構或以貸放資金為業者而言，利息收入為其營業收入；而非以貸放資金為業者而言則為營業外收益；例如，一般企業所獲取之利息收入則為營業外收益。</font><html>");
			}
		}
		);



	    Sbtn[41].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>因出售或交換資產等行為所產生的利益，屬於營業外收益。</font><html>");
			}
		}
		);

	    // 34 ~ 41

	    Sbtn[42].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>購進待銷之商品的進價。</font><html>");
			}
		}
		);

	    


	    Sbtn[43].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡企業之資產所應負擔之地價、房屋稅、牌照稅、燃料費等稅捐支出即稱之為稅捐費用。</font><html>");
			}
		}
		);


	    Sbtn[44].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡為企業洽談公事出差所支付之費用及稱之為差旅費用。</font><html>");
			}
		}
		);


	    Sbtn[45].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡支付郵資、營業用電話費、電報費等開銷均稱之為郵電費。</font><html>");
			}
		}
		);


	    Sbtn[46].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡對企業之資產做列行性之維修保養之出即稱之為修繕費用。</font><html>");
			}
		}
		);



	    Sbtn[47].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡是推銷產品或勞務所做宣傳之開銷，即稱之為廣告費。</font><html>");
			}
		}
		);

	    Sbtn[48].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡是支付營業用之水費及電費均稱之為水電費。</font><html>");
			}
		}
		);

	    Sbtn[49].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>對於企業之資產所投保之火險、意外險等，其所支付之保費即稱之為保險費用。</font><html>");
			}
		}
		);


	    Sbtn[50].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>獲取客戶之來源而贈送客戶禮品或招待客戶宴餐等支出即成之為交際費用。</font><html>");
			}
		}
		);


	    Sbtn[51].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>指所購進之商品，因損壞或其他原因退還給原供應商。</font><html>");
			}
		}
		);

	    Sbtn[52].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>供應商處所獲得之商品貸款的減讓。</font><html>");
			}
		}
		);

	    Sbtn[53].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>支付企業員工之酬勞稱之為薪資費用。</font><html>");
			}
		}
		);

	    Sbtn[54].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡租賃資產以供營業所使用而支付之租金稱之為租金支付。</font><html>");
			}
		}
		);


	    Sbtn[55].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡營業用之筆、墨、紙張及帳冊等文具稱之為文具用品。當企業購入文具用品尚未使用時，因該項支出可以提供企業未來經濟利益，顧可以列為資產，稱之為用品盤存，而當企業之員工領取文具加以使用時，該項文具產生了經濟效益，此時領用之文具用品費用即屬於費用類，此乃資產及費用劃分之例子。</font><html>");
			}
		}
		);



	    Sbtn[56].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡是收不回來之帳款即稱之為壞帳費用，一稱為「呆帳費用」。</font><html>");
			}
		}
		);

	    Sbtn[57].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>凡是企業所使用之房屋及各項設備，於該會計期間內所消耗掉之成本，即稱之為折舊費用。</font><html>");
			}
		}
		);


	    Sbtn[58].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>企業支付他人媒介生意之金額，即稱之為佣金費用。</font><html>");
			}
		}
		);

	    Sbtn[59].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>企業於成立前籌備時間，為籌組該企業所發生之必要支出，例如發起人報酬、律師與會計師公費、設立登記之規費、發起人會或創立會之規費及其他設立直接相關支出，均稱之為開辦費用。開辦費用之支出雖使企業得以成立並營業，惟其未來未能明確辦認，故宜做為當其費用。</font><html>");
			}
		}
		);

	    Sbtn[60].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>向銀金融機構或他人等貸款供營業使用，所支付之利息及稱之為利息費用，屬於營業外費損。</font><html>");
			}
		}
		);

	    Sbtn[61].addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Subl.setText("<html><font face=微軟正黑體  size=5  color=#3937FF>因出售或交換資產等行為產生的損失，屬於營業外損失。</font><html>");
			}
		}
		);

		
//------------------------------------------------End Sub 程式碼------------------------
	  
	  
//------------------------------------------------Cal 程式碼------------------------
	  
	  {
//		  1,4,5,6,10,13,14,17

//
			String Laa[] = {"流動比率","","股東權益報酬率(ROE)","總資產報酬率(ROA)","","","","純益率","存貨週轉率",
					  "應收帳款週轉率","","資本週轉率","毛利率","","",
					  "負債比率","每股淨值",""};
			
			String La[] = {"純益率","毛利率","流動比率","負債比率","每股淨值",
					"存貨週轉率","資本週轉率","應收帳款週轉率","總資產報酬率(ROA)","股東權益報酬率(ROE)"
					  
					  
			};
		
		
				
		
				final JPanel Lpan1 = new JPanel();
				panels[2].add(Lpan1);
				Border lineA = BorderFactory.createLineBorder(getBackground().black);
				Lpan1.setBorder(BorderFactory.createTitledBorder(lineA,"項目"));
				
				Lpan1.setLayout(null);
				Lpan1.setBounds(12, 360, 920,163);
			
			
	//說明--------------------------------------------------------------------------------------------------------------------------------
			Lpan2 = new JPanel();
			panels[2].add(Lpan2);
			Lpan2.setBorder(BorderFactory.createTitledBorder(lineA,"解析"));
			
			Lpan2.setLayout(null);
			Lpan2.setBounds(12,20 , 600,320);
		
		
			exp = new JLabel("OK");
			Lpan2.add(exp);
		    exp.setVisible(FALSE);
			

		    
		    Lpan3 = new JPanel();
			panels[2].add(Lpan3);
			Lpan3.setBorder(BorderFactory.createTitledBorder(lineA,"操作說明"));
			
			Lpan3.setLayout(null);
			Lpan3.setBounds(630,20 ,300,320);
			Calb.setText("計算功能");
			Calb.setBounds(180, 260, 100, 30);
			Lpan3.add(Calb);
			//宣告總共有18個按鈕
			Lpan3.add(Ex1);
			Lpan3.add(Ex2);
			Lpan3.add(Ex3);
			Ex1.setBounds(10, 50, 300, 50);
			Ex2.setBounds(10, 110, 300, 50);
			Ex3.setBounds(10, 170, 300, 50);
			Ex1.setText("<html><font face=粗體   size=4  color=#ff0000>1.請先選擇項目內想了解的關鍵指標。</font><html>");
			Ex2.setText("<html><font face=粗體   size=4  color=#ff0000>2.接著框框裡會產生此指標之詳細說明。</font><html>");
			Ex3.setText("<html><font face=粗體   size=4  color=#ff0000>3.若有需簡易計算，可點擊計算功能按鈕。</font><html>");

//			panels[2].setBackground(Color.white);
//			Lpan2.setBackground(Color.white);
//			Lpan1.setBackground(Color.white);
			
			
			int Lcount = 190;
	
			for(int j=0 ;j<La.length;j++){
				fo[j]=new JButton(La[j]);
			}
	
			for(int i=0;i<=4;i++){
				if(i==0){
					fo[0].setBounds(15, 40, 170, 30);
					Lpan1.add(fo[0]);
				}else{
					fo[i].setBounds((5+Lcount), 40, 170, 30);
					Lcount=Lcount+180;
					Lpan1.add(fo[i]);
				}
			}
			Lcount=190;
			for(int i=5;i<=9;i++){
				if(i==5){
					fo[5].setBounds(15, 100, 170, 30);
					Lpan1.add(fo[5]);
				}else{
					fo[i].setBounds((5+Lcount), 100, 170, 30);
					Lcount=Lcount+180;
					Lpan1.add(fo[i]);
				}
			}
			
		     
			
		    
			
			/*	
			fo[0].addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e){
					a1.setText("靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠靠");
					a1.setBounds(45, 90, 400,400);
				}
			}
			);
			
		 */	
			
			
			
	//計算式------------------------------------------------------------------------------------------------------------------------------------		
		

			Calb.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e){
				try{	

					if(Cals==0){
						String aaa = JOptionPane.showInputDialog("稅後淨利：");
						String bbb = JOptionPane.showInputDialog("銷貨淨額：");
						 double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else if(Cals==1){
						String aaa = JOptionPane.showInputDialog("銷貨毛利：");
						String bbb = JOptionPane.showInputDialog("銷貨淨額：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else if(Cals==2){
						String aaa = JOptionPane.showInputDialog("流動資產：");
						String bbb = JOptionPane.showInputDialog("流動負債：");
						 double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else if(Cals==3){
						String aaa = JOptionPane.showInputDialog("負債總額：");
						String bbb = JOptionPane.showInputDialog("資產總額：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else if(Cals==4){
						String aaa = JOptionPane.showInputDialog("資產總額：");
						String bbb = JOptionPane.showInputDialog("負債總額：");
						String eee = JOptionPane.showInputDialog("發行股數：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double ee1 = Double.valueOf(eee).doubleValue();
						 double TTT = (ddd-ccc)/ee1;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
						 
						
					}else if(Cals==5){
						String aaa = JOptionPane.showInputDialog("銷貨成本：");
						String bbb = JOptionPane.showInputDialog("平均存貨：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else if(Cals==6){
						String aaa = JOptionPane.showInputDialog("銷貨淨額：");
						String bbb = JOptionPane.showInputDialog("總資本：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
						 
					}else if(Cals==7){
						String aaa = JOptionPane.showInputDialog("銷貨淨額：");
						String bbb = JOptionPane.showInputDialog("平均應收帳款：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else if(Cals==8){
						String aaa = JOptionPane.showInputDialog("稅後淨利：");
						String bbb = JOptionPane.showInputDialog("利息費用：");
						String eee = JOptionPane.showInputDialog("平均總資產：");
						 double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double fff = Double.valueOf(eee).doubleValue();
						 double TTT = (ddd+ccc)/fff;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
						
					}else if(Cals==9){
						
						String aaa = JOptionPane.showInputDialog("稅後淨利：");
						String bbb = JOptionPane.showInputDialog("平均股東權益總額：");
						double ddd = Double.valueOf(aaa).doubleValue();
						 double ccc = Double.valueOf(bbb).doubleValue();
						 double TTT = ddd/ccc;
						 JOptionPane.showMessageDialog(null,"您的"+fo[Cals].getText()+"為： "+TTT);
					}else{
						
					}
				
				} 
				catch(Exception e1){
				     }	
				
					}
				}
			);

			
			
			
			
				  fo[0].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
						try{	

							exp.setVisible(FALSE);
							
							exp.setText("<html><font face=粗體   size=5  color=#0000ff>純益率＝稅後淨利÷銷貨淨額。</font><br><br>純益率用來表示企業每$1的售價中，可賺取的淨利數額，故此比率愈<br><br>高，代表企業獲利能力愈大，為分析獲利能力的重要指標。<html>");
							exp.setBounds(43, -35, 550, 400);
							exp.setVisible(TRUE);
							exp.setFont(new Font("標楷體", Font.BOLD, 16));
							Cals = 0;
							 System.out.println(Cals);
						} 
						catch(Exception e1){
						     }	
						
							}
						}
					);
				 
				  
				  fo[1].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
						try{
						
							Cals = 1;
						    exp.setVisible(FALSE);
						     
						    exp.setBounds(43, -35, 550, 400);
							exp.setText("<html><font face=粗體   size=5  color=#0000ff>毛利率＝銷貨毛利÷銷貨淨額。</font><br><br>毛利率表示企業每$1的售價中，可賺取的毛利數額，故此比率愈高，<br><br>代表企業「經營本業」的獲利能力愈大。「毛利率愈高，不代表純益<br><br>率愈高」，因為毛利率僅是扣除進貨成本，未扣除營業費用，有些企<br><br>業經營本業的能力很強，但從事副業卻產生很大的虧損，故毛利率愈<br><br>高，不代表此企業的純益愈高。<html>");
							exp.setVisible(TRUE);
							exp.setFont(new Font("標楷體", Font.BOLD, 16));
						    
						} 
						catch(Exception e1){
						     }	
						
							}
						}
					);
				  
					fo[2].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
						try{				
							
							Cals = 2;
							 exp.setVisible(FALSE);
						     
						 
								exp.setText( "<html><font face=粗體   size=5  color=#0000ff>流動比率＝流動資產÷流動負債。</font><br><br>流動比率又稱營運資金比率，為短期償債能力的代表性指標，比率<br><br>高者，代表短期償債能力強，高、低標準視企業情況及同業標準而<br><br>定，一般應大於1為宜。<html>");
								exp.setBounds(43, -35, 550, 400);
								exp.setVisible(TRUE);
								exp.setFont(new Font("標楷體", Font.BOLD, 16));
							
							
						 } 
						catch(Exception e1){
						     }	
						
							}
						}
					);

				  
				  fo[3].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
						try{
							
							Cals = 3;
						    exp.setVisible(FALSE);
						     
						    
						    
							exp.setText("<html><font face=粗體   size=5  color=#0000ff>負債比率＝負債總額÷資產總額。</font><br><br>要了解公司的負債情形要看「負債比率」，負債比率是指公司對外<br><br>欠的錢占公司總資產的比率。負債比率愈高，代表公司的財務狀況<br><br>比較吃緊；負債比率愈低，代表公司的財務狀況良好。讀者可以在<br><br>資產負債表中，找到負債總額、資產總額兩項數字，然後計算出負<br><br>債比率。<html>");
							exp.setBounds(43, -35, 550, 400);
							exp.setVisible(TRUE);
							exp.setFont(new Font("標楷體", Font.BOLD, 16));
						     
						     
							} 
						catch(Exception e1){
						     }	
						
							}
						}
					);
				  
				  fo[4].addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent e){
						try{
							
							Cals = 4;
						    exp.setVisible(FALSE);
						     
							exp.setText("<html><font face=粗體   size=5  color=#0000ff>每股淨值＝（資產總額－負債總額）÷發行股數。</font><br><br><font color=#ff0000>1.淨值÷股價＞1</font><br><br>表示股價跌破淨值，投資人可以買進，但是要儘量選擇負債比率低、純益率高、產業<br><br>遠景佳、老闆正派經營的個股。<br><br><font color=#ff0000>2.淨值÷股價＝1</font><br><br>表示股價與每股淨值相當，但是有跌破淨值的疑慮，投資人還要多多觀察。<br><br><font color=#ff0000>3.淨值÷股價＜1</font><br><br>表示股價高於每股淨值，大部分獲利不錯的個股都是如此，投資人可以從上述的財報<br><br>指標一一檢視，做為選股的依據。<html>");
							exp.setBounds(43, -35, 550, 400);
							exp.setVisible(TRUE);
							exp.setFont(new Font("標楷體", Font.BOLD, 12));
						    } 
						catch(Exception e1){
						     }	
						
							}
						}
					);

				  fo[5].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
						try{	

							Cals = 5;
							exp.setVisible(FALSE);
				
							exp.setText("<html><font face=粗體   size=5  color=#0000ff>存貨週轉率＝銷貨成本÷平均存貨。</font><br><br>存貨週轉率代表一年期內，存貨出售的次數，次數愈高愈有利，<br><br>代表商品出售速度快，存貨愈不易被囤積。<html>");
							exp.setBounds(43, -35, 550, 400);
							exp.setVisible(TRUE);
							exp.setFont(new Font("標楷體", Font.BOLD, 16));
							
							
						} 
						catch(Exception e1){
						     }	
						
							}
						}
					);

				  fo[6].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
						try{
						
							Cals = 6;
						    exp.setVisible(FALSE);
						     
						    
							exp.setText("<html><font face=粗體   size=5  color=#0000ff>資本週轉率＝銷貨淨額÷總資本。</font><br><br>資本週轉率是用來衡量企業投入之資本的運用情形，須與同業相比，<br><br>數額愈大，代表資本利用率愈高。<html>");
							exp.setBounds(43, -35, 550, 400);
							exp.setVisible(TRUE);
							exp.setFont(new Font("標楷體", Font.BOLD, 16)); 
						    
						    
						} 
						catch(Exception e1){
						     }	
						
							}
						}
					);

			
					  
					  fo[7].addActionListener(new ActionListener(){
							public void actionPerformed(ActionEvent e){
							try{

								Cals = 7;
							    exp.setVisible(FALSE);

							    exp.setText("<html><font face=粗體   size=5  color=#0000ff>應收帳款週轉率 ＝ 銷貨淨額÷平均應收帳款。</font><br><br>應收帳款週轉率為一年期內，應收帳款收現次數，次數愈高愈有利，<br><br>代表企業收帳能力愈強，資金運用成效高。<html>");
							    exp.setBounds(43, -35, 550, 400);
								exp.setVisible(TRUE);
								exp.setFont(new Font("標楷體", Font.BOLD, 16));
							} 
							catch(Exception e1){
							     }	
							
								}
							}
						);

					  fo[8].addActionListener(new ActionListener(){
							public void actionPerformed(ActionEvent e){
							try{	

								Cals = 8;
								exp.setVisible(FALSE);
								
								exp.setText( "<html><font face=粗體   size=5  color=#0000ff>總資產報酬率(ROA)＝(稅後淨利＋利息費用)÷平均總資產。</font><br><br>總資產報酬率(ROA)用於衡量企業投入資產後，一年內所產生的效益<br><br>。數額愈大，代表企業之資產的效益愈大。加入利息費用的原因，乃<br><br>是因企業是否向外借款，與企業營運績效並無關聯，但利息費用卻會<br><br>減少淨利，讓投資者誤以為企業經營績效差，因此利息費用應加回。<html>");
							    exp.setBounds(43, -35, 550, 400);
								exp.setVisible(TRUE);
								exp.setFont(new Font("標楷體", Font.BOLD, 16));
								
				
							} 
							catch(Exception e1){
							     }	
							
								}
							}
						);
					  
					  fo[9].addActionListener(new ActionListener(){
							public void actionPerformed(ActionEvent e){
							try{	

								Cals = 9;
								exp.setVisible(FALSE);

								exp.setText("<html><font face=粗體   size=5  color=#0000ff>股東權益報酬率(ROE)＝稅後淨利÷平均股東權益總額。</font><br><br>股東權益報酬率(ROE)用於衡量股東所投入之資本，於一年內所產<br><br>生的效益。此比率愈大愈佳，代表股東可分得利潤愈高。<html>");
								exp.setBounds(43, -35, 550, 400);
								exp.setVisible(TRUE);
								exp.setFont(new Font("標楷體", Font.BOLD, 16));
								
								} 
							catch(Exception e1){
							     }	
							
								}
							}
						);

				  
					for(int i=0;i<9;i++){
						fo[i].setCursor(new Cursor(Cursor.HAND_CURSOR));
						
					}

		  
	  }
	  
//------------------------------------------------Emd Cal 程式碼------------------------

	  
	  
//-------------------------------------------------Com 程式碼------------------------	  
	  {
		  
	  
	  String ima[] = {"ROE：","ROA：","純益率：","毛利率：","流動比率：","負債比率：","每股淨值：",
				"存貨週轉率：","資本週轉率：", "應收帳款週轉率："};
		
		String jjj[] ={"11111","22222","33333","44444","55555","66666","77777","88888","99999","10000"};
		
		String jj[] ={"","","","","","","","","",""};
		
		String btnv[] = {"確認","更換比率","確認","重選"};
	
		

		Ctitle = new JLabel("公司名稱");
		//Ctitle.setBounds(650, 80, 300, 100);
		//Ctitle.setVisible(TRUE);
		Ctitle.setFont(new Font("標楷體", Font.BOLD, 16));			
		panels[3].add(Ctitle);
		
		
		
	
		Ccbo = new JComboBox<>(instance);		
		Ccbo.setSelectedIndex(0);
		Ccom = new JComboBox<>();
		Ccom1 = new JComboBox<>();
		Ccom2 = new JComboBox<>();
		
		
		
		
		Cpan2 = new JPanel();
		panels[3].add(Cpan2);
		Border lineA = BorderFactory.createLineBorder(Color.black);
		Cpan2.setBorder(BorderFactory.createTitledBorder(lineA,"產業、公司"));
		Cpan2.setLayout(null);
		Cpan2.setBounds(400, 25,530,80);
		Ccbo.setBounds(35, 35, 100, 20);   //產業
		Ccom.setBounds(155,35,100,20);	 //公司1
		Ccom1.setBounds(275,35,100,20);	 //公司2
		Ccom2.setBounds(395,35,100,20);	 //公司3
		Cpan2.add(Ccbo);
		Cpan2.add(Ccom);
		Cpan2.add(Ccom1);
		Cpan2.add(Ccom2);


		
		Cpan3 = new JPanel();
		panels[3].add(Cpan3);
		Cpan3.setBorder(BorderFactory.createTitledBorder(lineA,"資訊"));
		Cpan3.setLayout(null);
//		Cpan3.setBackground(Color.WHITE);
		Cpan3.setBounds(20, 25, 365, 490); 
		
		Cex1.setBounds(40, 40, 100, 20);
		Cex2.setBounds(155, 40, 100, 20);
		Cex3.setBounds(224, 40, 100, 20);
		Cex4.setBounds(292, 40, 100, 20);
		
		
		Cpan3.add(Cex1);
		Cpan3.add(Cex2);
		Cpan3.add(Cex3);
		Cpan3.add(Cex4);
		
		for(int i =0;i<Cjs.length;i++){
			Cjs[i] = new JSeparator(JSeparator.VERTICAL);
			Cpan3.add(Cjs[i]);
		}
		
		for(int i =0;i<Cjsh.length;i++){
			Cjsh[i] = new JSeparator();
			Cpan3.add(Cjsh[i]);
		}
		
		Cjs[0].setBounds(155, 70, 1, 368);
		Cjs[1].setBounds(223, 70, 1, 368);
		Cjs[2].setBounds(291, 70, 1, 368);

		Cjsh[10].setBounds(2,70, 361, 1);
		Cjsh[0].setBounds(2, 105, 361, 1);
		Cjsh[1].setBounds(2, 142, 361, 1);
		Cjsh[2].setBounds(2, 179, 361, 1);
		Cjsh[3].setBounds(2, 216, 361, 1);
		Cjsh[4].setBounds(2, 253, 361, 1);
		Cjsh[5].setBounds(2, 290, 361, 1);
		Cjsh[6].setBounds(2, 327, 361, 1);
		Cjsh[7].setBounds(2, 364, 361, 1);
		Cjsh[8].setBounds(2, 401, 361, 1);
		Cjsh[9].setBounds(2, 437, 361, 1);
		
//		final JLabel jlabel = new JLabel("", new ImageIcon(cl.getResource("image/單項評比左上2.png")), JLabel.LEADING);
//		jlabel.setBounds(0, 0, 320, 69);
//		Cpan4.add(jlabel);
		
		
		//--------------------------------------圖------------------------------------
		
	
		
		try{	
			
	
				DefaultCategoryDataset  dataset = new DefaultCategoryDataset();
				dataset.setValue(50,"","預設一");  
				dataset.setValue(100,"","預設二");  
				dataset.setValue(150,"","預設三");
				JFreeChart chart = ChartFactory.createBarChart("長條圖", "", "", dataset, PlotOrientation.VERTICAL, false, true, false);
    			//將font設定為細明體
    			Font CHART_FONT = new Font("細明體", 12, 15);
    			chart.getTitle().setFont(CHART_FONT);
    			CategoryPlot plot = chart.getCategoryPlot();
    			CategoryAxis domainAxis = plot.getDomainAxis();   //橫軸
    			ValueAxis rangeAxis = plot.getRangeAxis();        //縱軸
    			domainAxis.setLabelFont(CHART_FONT);
    			domainAxis.setTickLabelFont(CHART_FONT);
    			rangeAxis.setLabelFont(CHART_FONT);
    			rangeAxis.setTickLabelFont(CHART_FONT);
    			 
    			
    			Cpan8  =	new JPanel();
    			panels[3].add(Cpan8);
    			Cpan8.setLayout(null);
    			Cpan8.setBounds(403, 120, 525,390 );
    			Ctitle.setVisible(TRUE);
    			Cpan8.setVisible(TRUE);
    			
    			ChartPanel panel = new ChartPanel(chart,200,1,200,70,600,395, TRUE,TRUE,TRUE,TRUE,TRUE,TRUE);
    			panel.setBounds(0, 0, 525, 390);
    			Cpan8.add(panel);
			
    			
    			
		}catch(Exception A){
			//	System.out.println("mistake");
			}	
		
//--------------------------------------圖------------------------------------
		
		
		for(int i=0;i<btn.length;i++){
			btn[i] = new JButton(btnv[i]);
		}
		
		for(int i=0;i<btn.length;i++){
			if(i==0){
				btn[i].setBounds(75, 455, 100, 20);
				btn[i].setCursor(new Cursor(Cursor.HAND_CURSOR));
			Cpan3.add(btn[i]);
			}
			
		/*	else if(i==1){
				btn[i].setBounds(175, 410, 85, 20);
				Cpan3.add(btn[i]);
			}
		*/
			
		/*	else if(i==2){
				btn[i].setBounds(590, 35, 70, 20);
				Cpan2.add(btn[i]);
			}
		*/
			else if(i==3){
				btn[i].setBounds(185, 455, 100, 20);
				btn[i].setCursor(new Cursor(Cursor.HAND_CURSOR));
				Cpan3.add(btn[i]);
			}
		
		
		}
		
		
		
		
		//panels[3].add(input);
		//input.setBounds(1100, 610, 70, 30);

	
		
		try{
			
			
			int cou = 37;
		
			
			for(int i=0;i<ima.length;i++){
				if(i==0){
					
					
				jcheckbox[i] = new JCheckBox(ima[0], new ImageIcon(cl.getResource("image/check.gif")));
				// 設定標籤字串相對於圖像的水平位置
				jcheckbox[i].setHorizontalTextPosition(SwingConstants.RIGHT);
				// 設定標籤字串相對於圖像的垂直位置
				jcheckbox[i].setVerticalTextPosition(SwingConstants.CENTER);
				// 設定按下時的圖像
				jcheckbox[i].setSelectedIcon(new ImageIcon(cl.getResource("image/checkselected.gif")));
				jcheckbox[i].setBounds(20, 72, 70, 30);
				Cpan3.add(jcheckbox[i]);
				
				jp[i] = new JLabel(jj[i]);
				jp[i].setBounds(160, 61, 300, 50);
				Cpan3.add(jp[i]);
				
				jp1[i] = new JLabel(jj[i]);
				jp1[i].setBounds(227, 61, 300, 50);
				Cpan3.add(jp1[i]);
				
				jp2[i] = new JLabel(jj[i]);
				jp2[i].setBounds(295, 61, 300, 50);
				Cpan3.add(jp2[i]);
				
				
				
				}else if(i==1){
				
					jcheckbox[i] = new JCheckBox(ima[i], new ImageIcon(cl.getResource("image/check.gif")));
					// 設定標籤字串相對於圖像的水平位置
					jcheckbox[i].setHorizontalTextPosition(SwingConstants.RIGHT);
					// 設定標籤字串相對於圖像的垂直位置
					jcheckbox[i].setVerticalTextPosition(SwingConstants.CENTER);
					// 設定按下時的圖像
					jcheckbox[i].setSelectedIcon(new ImageIcon(cl.getResource("image/checkselected.gif")));
					jcheckbox[i].setBounds(20, (72+cou), 70, 30);
					Cpan3.add(jcheckbox[i]);
					
					
					jp[i] = new JLabel(jj[i]);
					jp[i].setBounds(160, (61+cou), 300, 50);
					Cpan3.add(jp[i]);
					
					jp1[i] = new JLabel(jj[i]);
					jp1[i].setBounds(227, (61+cou), 300, 50);
					Cpan3.add(jp1[i]);
					
				
					jp2[i] = new JLabel(jj[i]);
					jp2[i].setBounds(295, (61+cou), 300, 50);
					Cpan3.add(jp2[i]);
					
					cou+=37;
					
					}else if(i==2|i==3){
				
					jcheckbox[i] = new JCheckBox(ima[i], new ImageIcon(cl.getResource("image/check.gif")));
					// 設定標籤字串相對於圖像的水平位置
					jcheckbox[i].setHorizontalTextPosition(SwingConstants.RIGHT);
					// 設定標籤字串相對於圖像的垂直位置
					jcheckbox[i].setVerticalTextPosition(SwingConstants.CENTER);
					// 設定按下時的圖像
					jcheckbox[i].setSelectedIcon(new ImageIcon(cl.getResource("image/checkselected.gif")));
					jcheckbox[i].setBounds(20, (72+cou), 80, 30);
					Cpan3.add(jcheckbox[i]);
					
					
					jp[i] = new JLabel(jj[i]);
					jp[i].setBounds(160, (61+cou), 300, 50);
					Cpan3.add(jp[i]);
					
					jp1[i] = new JLabel(jj[i]);
					jp1[i].setBounds(227, (61+cou), 300, 50);
					Cpan3.add(jp1[i]);
					
				
					jp2[i] = new JLabel(jj[i]);
					jp2[i].setBounds(295, (61+cou), 300, 50);
					Cpan3.add(jp2[i]);
					
					
					
					cou+=37;
					
					}else if(i==4|i==5|i==6){
				
					jcheckbox[i] = new JCheckBox(ima[i], new ImageIcon(cl.getResource("image/check.gif")));
					// 設定標籤字串相對於圖像的水平位置
					jcheckbox[i].setHorizontalTextPosition(SwingConstants.RIGHT);
					// 設定標籤字串相對於圖像的垂直位置
					jcheckbox[i].setVerticalTextPosition(SwingConstants.CENTER);
					// 設定按下時的圖像
					jcheckbox[i].setSelectedIcon(new ImageIcon(cl.getResource("image/checkselected.gif")));
					jcheckbox[i].setBounds(20, (72+cou), 93, 30);
					Cpan3.add(jcheckbox[i]);	
					
					jp[i] = new JLabel(jj[i]);
					jp[i].setBounds(160, (61+cou), 300, 50);
					Cpan3.add(jp[i]);
					
					jp1[i] = new JLabel(jj[i]);
					jp1[i].setBounds(227, (61+cou), 300, 50);
					Cpan3.add(jp1[i]);
					
				
					jp2[i] = new JLabel(jj[i]);
					jp2[i].setBounds(295, (61+cou), 300, 50);
					Cpan3.add(jp2[i]);
				
					
					cou+=37;
					
					
					
					}else if(i==7|i==8){
				
					jcheckbox[i] = new JCheckBox(ima[i], new ImageIcon(cl.getResource("image/check.gif")));
					// 設定標籤字串相對於圖像的水平位置
					jcheckbox[i].setHorizontalTextPosition(SwingConstants.RIGHT);
					// 設定標籤字串相對於圖像的垂直位置
					jcheckbox[i].setVerticalTextPosition(SwingConstants.CENTER);
					// 設定按下時的圖像
					jcheckbox[i].setSelectedIcon(new ImageIcon(cl.getResource("image/checkselected.gif")));
					jcheckbox[i].setBounds(20, (72+cou), 107, 30);
					Cpan3.add(jcheckbox[i]);	
					
					jp[i] = new JLabel(jj[i]);
					jp[i].setBounds(160, (61+cou), 300, 50);
					Cpan3.add(jp[i]);
					
					jp1[i] = new JLabel(jj[i]);
					jp1[i].setBounds(227, (61+cou), 300, 50);
					Cpan3.add(jp1[i]);
					
				
					jp2[i] = new JLabel(jj[i]);
					jp2[i].setBounds(295, (61+cou), 300, 50);
					Cpan3.add(jp2[i]);
				
					
					cou+=37;
					
			
				}else {
					jcheckbox[i] = new JCheckBox(ima[i], new ImageIcon(cl.getResource("image/check.gif")));
					// 設定標籤字串相對於圖像的水平位置
					jcheckbox[i].setHorizontalTextPosition(SwingConstants.RIGHT);
					// 設定標籤字串相對於圖像的垂直位置
					jcheckbox[i].setVerticalTextPosition(SwingConstants.CENTER);
					// 設定按下時的圖像
					jcheckbox[i].setSelectedIcon(new ImageIcon(cl.getResource("image/checkselected.gif")));
					jcheckbox[i].setBounds(20, (72+cou), 132, 30);
					Cpan3.add(jcheckbox[i]);	
					
					jp[i] = new JLabel(jj[i]);
					jp[i].setBounds(160, (61+cou), 300, 50);
					Cpan3.add(jp[i]);
					
					jp1[i] = new JLabel(jj[i]);
					jp1[i].setBounds(227, (61+cou), 300, 50);
					Cpan3.add(jp1[i]);
					
				
					jp2[i] = new JLabel(jj[i]);
					jp2[i].setBounds(297, (61+cou), 300, 50);
					Cpan3.add(jp2[i]);
				
					
					
					cou+=37;
					
					
				}
			}
			
					}catch(Exception e1){
						}	
			
			
			
			
			
			
		
		
		
		
		
			
			
			
			
				try {
						DocumentBuilderFactory factory = 
			    		DocumentBuilderFactory.newInstance();
		 	   			DocumentBuilder builder =
			    		factory.newDocumentBuilder();
			    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
			    		Document doc = builder.parse(f);
			    			 	System.out.println(f);
						}catch(Exception e){
							System.out.println("mistake");
						}

		
				//------------------------------------Ccbo----------------------------------------------------------------
				 
			 	Ccbo.addItemListener(new ItemListener(){
				public void itemStateChanged(ItemEvent e){
				if(e.getStateChange() == ItemEvent.SELECTED){
					
					
					for(int aa0=0;aa0<jcheckbox.length;aa0++){
						jcheckbox[aa0].setEnabled(TRUE);
						jcheckbox[aa0].setSelected(FALSE);
					}
					
					
					if(Ccbo.getSelectedIndex()==1){
						
						Cex2.setText("公司一");
						Cex3.setText("公司二");
						Cex4.setText("公司三");
						
						Ccom.removeAllItems();
						Ccom1.removeAllItems();
						Ccom2.removeAllItems();
						
						
					for(int i=0 ; i<comm11.length;i++){
						
						Ccom.addItem(comm11[i]);
						Ccom1.addItem(comm11[i]);
						Ccom2.addItem(comm11[i]);
						
					}
					for(int aa0=0;aa0<jcheckbox.length;aa0++){
						
						jcheckbox[aa0].setSelected(FALSE);
					
					}
					for(int aa0=0;aa0<jp.length;aa0++){
						
						jp[aa0].setText("");
						jp1[aa0].setText("");
						jp2[aa0].setText("");
						
					
					}
				
					}
					
					
					
					else if(Ccbo.getSelectedIndex()==2){
						
						
						Ccom.removeAllItems();
						Ccom1.removeAllItems();
						Ccom2.removeAllItems();
						
						Cex2.setText("公司一");
						Cex3.setText("公司二");
						Cex4.setText("公司三");
						
					
					for(int i=0 ; i<comm22.length;i++){
						Ccom.addItem(comm22[i]);
						Ccom1.addItem(comm22[i]);
						Ccom2.addItem(comm22[i]);
						}
					for(int aa0=0;aa0<jcheckbox.length;aa0++){
						
						jcheckbox[aa0].setSelected(FALSE);
					
					}
					for(int aa0=0;aa0<jp.length;aa0++){
						
						jp[aa0].setText("");
						jp1[aa0].setText("");
						jp2[aa0].setText("");
					
						}	
					}
					else if(Ccbo.getSelectedIndex()==3){
					
						
						Ccom.removeAllItems();
						Ccom1.removeAllItems();
						Ccom2.removeAllItems();
					
						Cex2.setText("公司一");
						Cex3.setText("公司二");
						Cex4.setText("公司三");
						
						
					for(int i=0 ; i<comm33.length;i++){
						Ccom.addItem(comm33[i]);
						Ccom1.addItem(comm33[i]);
						Ccom2.addItem(comm33[i]);
						
						}
					for(int aa0=0;aa0<jcheckbox.length;aa0++){
		
						jcheckbox[aa0].setSelected(FALSE);
					
					}for(int aa0=0;aa0<jp.length;aa0++){
						
						jp[aa0].setText("");
						jp1[aa0].setText("");
						jp2[aa0].setText("");
					
					}
					}else{
						
						
						Ccom.removeAllItems();
						Ccom1.removeAllItems();
						Ccom2.removeAllItems();

						Cex2.setText("公司一");
						Cex3.setText("公司二");
						Cex4.setText("公司三");
						
						
						for(int aa0=0;aa0<jcheckbox.length;aa0++){
							
							jcheckbox[aa0].setSelected(FALSE);
						
						}for(int aa0=0;aa0<jp.length;aa0++){
							
							jp[aa0].setText("");
							jp1[aa0].setText("");
							jp2[aa0].setText("");
							
						}
						
						
						
						}
					
					}
					
				}	
			 	});
			 
	//------------------------------------Ccom-----------------------------------------------------------------------
			 	
			
			 	
			 	Ccom.addItemListener(new ItemListener(){
					public void itemStateChanged(ItemEvent e){
						
						if(e.getStateChange() == ItemEvent.SELECTED){
							
							 DecimalFormat df=new DecimalFormat("#.####");
							 for(int aa0=0;aa0<jcheckbox.length;aa0++){
									jcheckbox[aa0].setEnabled(TRUE);
									jcheckbox[aa0].setSelected(FALSE);
								}
							 
							 
							if(Ccbo.getSelectedIndex()==0){
								
								
								
							}else if(Ccbo.getSelectedIndex()==1){
								
								if(Ccom.getSelectedIndex()==0){
									
									try{
										
										jp[0].setText("");
										jp[1].setText("");
										jp[2].setText("");
										jp[3].setText("");
										jp[4].setText("");
										jp[5].setText("");
										jp[6].setText("");
										jp[7].setText("");
										jp[8].setText("");
										jp[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
										
								}else if(Ccom.getSelectedIndex()==1){
								
									try{
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		   String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		  String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		   
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		  
														    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    	
													 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
									
								}else if(Ccom.getSelectedIndex()==2){
									//-------------------------------------1216--------------------------------------------------
									
									try{
									
									
									DocumentBuilderFactory factory = 
								    		DocumentBuilderFactory.newInstance();
							    	   		DocumentBuilder builder =
								    		factory.newDocumentBuilder();
								    		File f = new File(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
								    		Document doc = builder.parse(f);
								    		
								//------------------------------------Roe----------------------------------------------------------------------
								    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
								    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
								    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
								    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
								    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

								    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
								    		 String roeS = Float.toString(aa0);
								    		 aas[0]=roeS;

								//------------------------------------Roa----------------------------------------------------------------------    		
								    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
								    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
								    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
								    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
								    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
								    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
								    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
								    		 String roS = Float.toString(aa1);
								    		 aas[1]=roS;
								    		 
								    		 
								//------------------------------------純益率----------------------------------------------------------------------    		 
								    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
									    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
									    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
									    		  aa2 = (noo1-noo2)/noo3;
									    		 String noS = Float.toString(aa2);
									    		 aas[2]=noS;
									    		 
									    		
									    		 
								//------------------------------------毛益率---------------------------------------------------------------------- 
									    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
										    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
										    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
										    		  aa3 =goo1/goo2;
										    		 String goS = Float.toString(aa3);
										    		 aas[3]=goS;
										    		 
										    		
										    		 
								//------------------------------------流動比率----------------------------------------------------------------------
										    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
											    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
											    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
											    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
											    		  aa4 =cour1/cour2;
											    		 String cuS = Float.toString(aa4);
											    		 aas[4]=cuS;
										    		 
											    		 
										    		 
										    		 
								//------------------------------------負債比率----------------------------------------------------------------------
										    		 
											    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
												    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
												    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
												    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
												    		  aa5 = geo1/geo2;
												    		 String geoS = Float.toString(aa5);
												    		 aas[5]=geoS;
										    		 
												    		
												    	
										    		 
								//------------------------------------每股淨值---------------------------------------------------------------------- 
										    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
											    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
											    		  aa6 =boo1;
											    		 String boS = Float.toString(aa6);
											    		 aas[6]=boS;
											    		 
											    		
									    		 
											    		 
								//------------------------------------存貨週轉率----------------------------------------------------------------------
											    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
												    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
												    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
												    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
												    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
												    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
												    		 String lnvS = Float.toString(aa7);
												    		 aas[7]=lnvS;
											    		 
											    		 

											    		 
											    		 
								//------------------------------------資本週轉率----------------------------------------------------------------------
												    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
													    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

													    		  aa8 = capo1/capo2;
													    		 String capS = Float.toString(aa8);
													    		 aas[8]=capS;
												    		  
											    		 
											    		 
													    		
											    		 
											    		 
											    		 
											    		 
								//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
											    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
												    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
												    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
												    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
												    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
												    		 aa9 = (aoo1/((aoo2+aoo3)/2));
												    		 String aoS = Float.toString(aa9);
												    		 aas[9]=aoS;
												    		 aas[0]=df.format(aa0);  
												    		 aas[1]=df.format(aa1); 
												    		 aas[2]=df.format(aa2); 
												    		 aas[3]=df.format(aa3);  
												    		 aas[4]=df.format(aa4); 
												    		 aas[5]=df.format(aa5); 
												    		 aas[6]=df.format(aa6);  
												    		 aas[7]=df.format(aa7);  
												    		 aas[8]=df.format(aa8); 
												    		 aas[9]=df.format(aa9); 
									    		 
												    		   
												    		 
												    	
									 }catch(Exception aa0){
											System.out.println("mistake");
											}	
								
								jp[0].setText(aas[0]);
								jp[1].setText(aas[1]);
								jp[2].setText(aas[2]);
								jp[3].setText(aas[3]);
								jp[4].setText(aas[4]);
								jp[5].setText(aas[5]);
								jp[6].setText(aas[6]);
								jp[7].setText(aas[7]);
								jp[8].setText(aas[8]);
								jp[9].setText(aas[9]);
								
								String Ces1 =  Ccom.getSelectedItem().toString();
								int Ce1 = Ccom.getSelectedItem().toString().length();
						
								Cex2.setText(Ces1.substring(4,Ce1));
								
								
								}else if(Ccom.getSelectedIndex()==3){
									
									try{DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File f = new File(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
						    		Document doc = builder.parse(f);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		  c1[1]=aa0;
						    		 String roeS = Float.toString(aa0);
						    		 aas[0]=roeS;
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		  c1[2]=aa1;
						    		 String roS = Float.toString(aa1);
						    		 aas[1]=roS;
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  aa2 = (noo1-noo2)/noo3;
							    		  c1[3]=aa2;
							    		 String noS = Float.toString(aa2);
							    		 aas[2]=noS;
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  aa3 =goo1/goo2;
								    		  c1[4]=aa3;
								    		 String goS = Float.toString(aa3);
								    		 aas[3]=goS;
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  aa4 =cour1/cour2;
									    		 String cuS = Float.toString(aa4);
									    		 aas[4]=cuS;
								    		 c1[5]=aa4;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  aa5 = geo1/geo2;
										    		 String geoS = Float.toString(aa5);
										    		 aas[5]=geoS;
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  aa6 =boo1;
									    		 String boS = Float.toString(aa6);
									    		 aas[6]=boS;
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 String lnvS = Float.toString(aa7);
										    		 aas[7]=lnvS;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  aa8 = capo1/capo2;
											    		 String capS = Float.toString(aa8);
											    		 aas[8]=capS;
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 String aoS = Float.toString(aa9);
										    		 aas[9]=aoS;
										    		 
										    		 
										    		 aas[0]=df.format(aa0);  
										    		 aas[1]=df.format(aa1); 
										    		 aas[2]=df.format(aa2); 
										    		 aas[3]=df.format(aa3);  
										    		 aas[4]=df.format(aa4); 
										    		 aas[5]=df.format(aa5); 
										    		 aas[6]=df.format(aa6);  
										    		 aas[7]=df.format(aa7);  
										    		 aas[8]=df.format(aa8); 
										    		 aas[9]=df.format(aa9); 
							    		 
										    		   
										    		 
										    	
							 }catch(Exception aa0){
									System.out.println("mistake");
									}	
						
						jp[0].setText(aas[0]);
						jp[1].setText(aas[1]);
						jp[2].setText(aas[2]);
						jp[3].setText(aas[3]);
						jp[4].setText(aas[4]);
						jp[5].setText(aas[5]);
						jp[6].setText(aas[6]);
						jp[7].setText(aas[7]);
						jp[8].setText(aas[8]);
						jp[9].setText(aas[9]);
						
							
						String Ces1 =  Ccom.getSelectedItem().toString();
						int Ce1 = Ccom.getSelectedItem().toString().length();
				
						Cex2.setText(Ces1.substring(4,Ce1));
						
									
								}else if(Ccom.getSelectedIndex()==4){
									
									//-------------------------------------1233--------------------------------------------------		
									
									
									try{
										
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;

									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
									    		 
									    		 
									//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
										    		 
										    		
										    		 
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
												    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
													    		
													    	
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		
										    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 

												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
														    		
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
								
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else{
									
									try{
										DocumentBuilderFactory factory = 
									
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File f = new File(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
						    		Document doc = builder.parse(f);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 String roeS = Float.toString(aa0);
						    		 aas[0]=roeS;
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 String roS = Float.toString(aa1);
						    		 aas[1]=roS;
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  aa2 = (noo1-noo2)/noo3;
							    		 String noS = Float.toString(aa2);
							    		 aas[2]=noS;
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  aa3 =goo1/goo2;
								    		 String goS = Float.toString(aa3);
								    		 aas[3]=goS;
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  aa4 =cour1/cour2;
									    		 String cuS = Float.toString(aa4);
									    		 aas[4]=cuS;
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  aa5 = geo1/geo2;
										    		 String geoS = Float.toString(aa5);
										    		 aas[5]=geoS;
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  aa6 =boo1;
									    		 String boS = Float.toString(aa6);
									    		 aas[6]=boS;
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 String lnvS = Float.toString(aa7);
										    		 aas[7]=lnvS;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  aa8 = capo1/capo2;
											    		 String capS = Float.toString(aa8);
											    		 aas[8]=capS;
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 String aoS = Float.toString(aa9);
										    		 aas[9]=aoS;
										    		 
										    		 aas[0]=df.format(aa0);  
										    		 aas[1]=df.format(aa1); 
										    		 aas[2]=df.format(aa2); 
										    		 aas[3]=df.format(aa3);  
										    		 aas[4]=df.format(aa4); 
										    		 aas[5]=df.format(aa5); 
										    		 aas[6]=df.format(aa6);  
										    		 aas[7]=df.format(aa7);  
										    		 aas[8]=df.format(aa8); 
										    		 aas[9]=df.format(aa9); 
							    		 
										    		   
										    		 
										    	
							 }catch(Exception aa0){
									System.out.println("mistake");
									}	
						
						jp[0].setText(aas[0]);
						jp[1].setText(aas[1]);
						jp[2].setText(aas[2]);
						jp[3].setText(aas[3]);
						jp[4].setText(aas[4]);
						jp[5].setText(aas[5]);
						jp[6].setText(aas[6]);
						jp[7].setText(aas[7]);
						jp[8].setText(aas[8]);
						jp[9].setText(aas[9]);
						
						String Ces1 =  Ccom.getSelectedItem().toString();
						int Ce1 = Ccom.getSelectedItem().toString().length();
				
						Cex2.setText(Ces1.substring(4,Ce1));
						
						
								}
						
						
								
							}else if(Ccbo.getSelectedIndex()==2){
								
								if(Ccom.getSelectedIndex()==0){
									
									try{
										
										jp[0].setText("");
										jp[1].setText("");
										jp[2].setText("");
										jp[3].setText("");
										jp[4].setText("");
										jp[5].setText("");
										jp[6].setText("");
										jp[7].setText("");
										jp[8].setText("");
										jp[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
								
								}else if(Ccom.getSelectedIndex()==1){
									
									try{
									
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetNotesReceivableRelatedParties");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else if(Ccom.getSelectedIndex()==2){
									
									//-------------------------------------2204--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
									//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else if(Ccom.getSelectedIndex()==3){
									
									try{
									DocumentBuilderFactory factory = 
								    		DocumentBuilderFactory.newInstance();
							    	   		DocumentBuilder builder =
								    		factory.newDocumentBuilder();
								    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
								    		Document doc = builder.parse(f);
								    		
								//------------------------------------Roe----------------------------------------------------------------------
								    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
								    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
								    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
								    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
								    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

								    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
								    		 String roeS = Float.toString(aa0);
								    		 aas[0]=roeS;
								    		
								    		
								    		
								//------------------------------------Roa----------------------------------------------------------------------    		
								    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
								    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
								    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
								    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
								    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
								    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
								    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
								    		 String roS = Float.toString(aa1);
								    		 aas[1]=roS;
					    		//------------------------------------純益率----------------------------------------------------------------------    		 
								    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
									    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
									    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
									    		  aa2 = (noo1-noo2)/noo3;
									    		 String noS = Float.toString(aa2);
									    		 aas[2]=noS;
								//------------------------------------毛益率---------------------------------------------------------------------- 
									    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
										    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
										    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
										    		  aa3 =goo1/goo2;
										    		 String goS = Float.toString(aa3);
										    		 aas[3]=goS;
										    		 
										    		 
								//------------------------------------流動比率----------------------------------------------------------------------
										    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
											    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
											    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
											    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
											    		  aa4 =cour1/cour2;
											    		 String cuS = Float.toString(aa4);
											    		 aas[4]=cuS;
										    		 
										    		 
										    		 
										    		 
										    		 
								//------------------------------------負債比率----------------------------------------------------------------------
										    		 
											    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
												    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
												    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
												    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
												    		  aa5 = geo1/geo2;
												    		 String geoS = Float.toString(aa5);
												    		 aas[5]=geoS;
										    		 
										    		 
										    		 
								//------------------------------------每股淨值---------------------------------------------------------------------- 
										    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
											    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
											    		  aa6 =boo1;
											    		 String boS = Float.toString(aa6);
											    		 aas[6]=boS;
											    		 
											    		 
											    		 
								//------------------------------------存貨週轉率----------------------------------------------------------------------
											    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
												    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
												    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
												    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
												    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
												    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
												    		 String lnvS = Float.toString(aa7);
												    		 aas[7]=lnvS;
											    		 
											    		 
											    		 
											    		 
											    		 
								//------------------------------------資本週轉率----------------------------------------------------------------------
												    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
													    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

													    		  aa8 = capo1/capo2;
													    		 String capS = Float.toString(aa8);
													    		 aas[8]=capS;
												    		  
											    		 
											    		 
											    		 
											    		 
											    		 
											    		 
								//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
											    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
												    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
												    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
												    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
												    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
												    		 aa9 = (aoo1/((aoo2+aoo3)/2));
												    		 String aoS = Float.toString(aa9);
												    		 aas[9]=aoS;
												    		 
												    		 aas[0]=df.format(aa0);  
												    		 aas[1]=df.format(aa1); 
												    		 aas[2]=df.format(aa2); 
												    		 aas[3]=df.format(aa3);  
												    		 aas[4]=df.format(aa4); 
												    		 aas[5]=df.format(aa5); 
												    		 aas[6]=df.format(aa6);  
												    		 aas[7]=df.format(aa7);  
												    		 aas[8]=df.format(aa8); 
												    		 aas[9]=df.format(aa9); 
									    		 
												    		   
												    		 
												    	
									 }catch(Exception aa0){
											System.out.println("mistake");
											}	
								
								jp[0].setText(aas[0]);
								jp[1].setText(aas[1]);
								jp[2].setText(aas[2]);
								jp[3].setText(aas[3]);
								jp[4].setText(aas[4]);
								jp[5].setText(aas[5]);
								jp[6].setText(aas[6]);
								jp[7].setText(aas[7]);
								jp[8].setText(aas[8]);
								jp[9].setText(aas[9]);
						
								String Ces1 =  Ccom.getSelectedItem().toString();
								int Ce1 = Ccom.getSelectedItem().toString().length();
						
								Cex2.setText(Ces1.substring(4,Ce1));
								
									
								}else{
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
									}
									
									
								
							
							}else {
								
								if(Ccom.getSelectedIndex()==0){
								
										try{
										
										jp[0].setText("");
										jp[1].setText("");
										jp[2].setText("");
										jp[3].setText("");
										jp[4].setText("");
										jp[5].setText("");
										jp[6].setText("");
										jp[7].setText("");
										jp[8].setText("");
										jp[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
								
								}else if(Ccom.getSelectedIndex()==1){
								
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
								
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else if(Ccom.getSelectedIndex()==2){
								
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else if(Ccom.getSelectedIndex()==3){
								
									//-------------------------------------2356--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		 
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else if(Ccom.getSelectedIndex()==4){
							
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
									
									
								}else{
								
									//-------------------------------------2377--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		 
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp[0].setText(aas[0]);
									jp[1].setText(aas[1]);
									jp[2].setText(aas[2]);
									jp[3].setText(aas[3]);
									jp[4].setText(aas[4]);
									jp[5].setText(aas[5]);
									jp[6].setText(aas[6]);
									jp[7].setText(aas[7]);
									jp[8].setText(aas[8]);
									jp[9].setText(aas[9]);
							
									String Ces1 =  Ccom.getSelectedItem().toString();
									int Ce1 = Ccom.getSelectedItem().toString().length();
							
									Cex2.setText(Ces1.substring(4,Ce1));
										
							
									
								}
							}
						}
					}
			 	});
			 	

			 	
	//------------------------------------Ccom1-----------------------------------------------------------------------
			 	
			
			 	
			 	Ccom1.addItemListener(new ItemListener(){
					public void itemStateChanged(ItemEvent e){
						
						if(e.getStateChange() == ItemEvent.SELECTED){
							
							 DecimalFormat df=new DecimalFormat("#.####");
							 for(int aa0=0;aa0<jcheckbox.length;aa0++){
									jcheckbox[aa0].setEnabled(TRUE);
									jcheckbox[aa0].setSelected(FALSE);
								}
							 
							if(Ccbo.getSelectedIndex()==0){
								
								
								
							}else if(Ccbo.getSelectedIndex()==1){
								
								if(Ccom1.getSelectedIndex()==0){
									
									try{
										
										jp1[0].setText("");
										jp1[1].setText("");
										jp1[2].setText("");
										jp1[3].setText("");
										jp1[4].setText("");
										jp1[5].setText("");
										jp1[6].setText("");
										jp1[7].setText("");
										jp1[8].setText("");
										jp1[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
										
								}else if(Ccom1.getSelectedIndex()==1){
								
									try{
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		   String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		  String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		   
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		  
														    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    	
													 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
									
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
							
									
									
								}else if(Ccom1.getSelectedIndex()==2){
									//-------------------------------------1216--------------------------------------------------
									
									try{
									
									
									DocumentBuilderFactory factory = 
								    		DocumentBuilderFactory.newInstance();
							    	   		DocumentBuilder builder =
								    		factory.newDocumentBuilder();
								    		File f = new File(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
								    		Document doc = builder.parse(f);
								    		
								//------------------------------------Roe----------------------------------------------------------------------
								    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
								    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
								    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
								    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
								    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

								    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
								    		 String roeS = Float.toString(aa0);
								    		 aas[0]=roeS;

								//------------------------------------Roa----------------------------------------------------------------------    		
								    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
								    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
								    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
								    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
								    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
								    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
								    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
								    		 String roS = Float.toString(aa1);
								    		 aas[1]=roS;
								    		 
								    		 
								//------------------------------------純益率----------------------------------------------------------------------    		 
								    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
									    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
									    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
									    		  aa2 = (noo1-noo2)/noo3;
									    		 String noS = Float.toString(aa2);
									    		 aas[2]=noS;
									    		 
									    		
									    		 
								//------------------------------------毛益率---------------------------------------------------------------------- 
									    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
										    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
										    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
										    		  aa3 =goo1/goo2;
										    		 String goS = Float.toString(aa3);
										    		 aas[3]=goS;
										    		 
										    		
										    		 
								//------------------------------------流動比率----------------------------------------------------------------------
										    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
											    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
											    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
											    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
											    		  aa4 =cour1/cour2;
											    		 String cuS = Float.toString(aa4);
											    		 aas[4]=cuS;
										    		 
											    		 
										    		 
										    		 
								//------------------------------------負債比率----------------------------------------------------------------------
										    		 
											    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
												    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
												    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
												    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
												    		  aa5 = geo1/geo2;
												    		 String geoS = Float.toString(aa5);
												    		 aas[5]=geoS;
										    		 
												    		
												    	
										    		 
								//------------------------------------每股淨值---------------------------------------------------------------------- 
										    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
											    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
											    		  aa6 =boo1;
											    		 String boS = Float.toString(aa6);
											    		 aas[6]=boS;
											    		 
											    		
									    		 
											    		 
								//------------------------------------存貨週轉率----------------------------------------------------------------------
											    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
												    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
												    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
												    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
												    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
												    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
												    		 String lnvS = Float.toString(aa7);
												    		 aas[7]=lnvS;
											    		 
											    		 

											    		 
											    		 
								//------------------------------------資本週轉率----------------------------------------------------------------------
												    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
													    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

													    		  aa8 = capo1/capo2;
													    		 String capS = Float.toString(aa8);
													    		 aas[8]=capS;
												    		  
											    		 
											    		 
													    		
											    		 
											    		 
											    		 
											    		 
								//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
											    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
												    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
												    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
												    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
												    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
												    		 aa9 = (aoo1/((aoo2+aoo3)/2));
												    		 String aoS = Float.toString(aa9);
												    		 aas[9]=aoS;
												    		 aas[0]=df.format(aa0);  
												    		 aas[1]=df.format(aa1); 
												    		 aas[2]=df.format(aa2); 
												    		 aas[3]=df.format(aa3);  
												    		 aas[4]=df.format(aa4); 
												    		 aas[5]=df.format(aa5); 
												    		 aas[6]=df.format(aa6);  
												    		 aas[7]=df.format(aa7);  
												    		 aas[8]=df.format(aa8); 
												    		 aas[9]=df.format(aa9); 
									    		 
												    		   
												    		 
												    	
									 }catch(Exception aa0){
											System.out.println("mistake");
											}	
								
								jp1[0].setText(aas[0]);
								jp1[1].setText(aas[1]);
								jp1[2].setText(aas[2]);
								jp1[3].setText(aas[3]);
								jp1[4].setText(aas[4]);
								jp1[5].setText(aas[5]);
								jp1[6].setText(aas[6]);
								jp1[7].setText(aas[7]);
								jp1[8].setText(aas[8]);
								jp1[9].setText(aas[9]);
								
								String Ces2 =  Ccom1.getSelectedItem().toString();
								int Ce2 = Ccom1.getSelectedItem().toString().length();
						
								Cex3.setText(Ces2.substring(4,Ce2));
								
								
								}else if(Ccom1.getSelectedIndex()==3){
									
									try{DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File f = new File(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
						    		Document doc = builder.parse(f);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		  c1[1]=aa0;
						    		 String roeS = Float.toString(aa0);
						    		 aas[0]=roeS;
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		  c1[2]=aa1;
						    		 String roS = Float.toString(aa1);
						    		 aas[1]=roS;
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  aa2 = (noo1-noo2)/noo3;
							    		  c1[3]=aa2;
							    		 String noS = Float.toString(aa2);
							    		 aas[2]=noS;
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  aa3 =goo1/goo2;
								    		  c1[4]=aa3;
								    		 String goS = Float.toString(aa3);
								    		 aas[3]=goS;
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  aa4 =cour1/cour2;
									    		 String cuS = Float.toString(aa4);
									    		 aas[4]=cuS;
								    		 c1[5]=aa4;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  aa5 = geo1/geo2;
										    		 String geoS = Float.toString(aa5);
										    		 aas[5]=geoS;
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  aa6 =boo1;
									    		 String boS = Float.toString(aa6);
									    		 aas[6]=boS;
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 String lnvS = Float.toString(aa7);
										    		 aas[7]=lnvS;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  aa8 = capo1/capo2;
											    		 String capS = Float.toString(aa8);
											    		 aas[8]=capS;
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 String aoS = Float.toString(aa9);
										    		 aas[9]=aoS;
										    		 
										    		 
										    		 aas[0]=df.format(aa0);  
										    		 aas[1]=df.format(aa1); 
										    		 aas[2]=df.format(aa2); 
										    		 aas[3]=df.format(aa3);  
										    		 aas[4]=df.format(aa4); 
										    		 aas[5]=df.format(aa5); 
										    		 aas[6]=df.format(aa6);  
										    		 aas[7]=df.format(aa7);  
										    		 aas[8]=df.format(aa8); 
										    		 aas[9]=df.format(aa9); 
							    		 
										    		   
										    		 
										    	
							 }catch(Exception aa0){
									System.out.println("mistake");
									}	
						
						jp1[0].setText(aas[0]);
						jp1[1].setText(aas[1]);
						jp1[2].setText(aas[2]);
						jp1[3].setText(aas[3]);
						jp1[4].setText(aas[4]);
						jp1[5].setText(aas[5]);
						jp1[6].setText(aas[6]);
						jp1[7].setText(aas[7]);
						jp1[8].setText(aas[8]);
						jp1[9].setText(aas[9]);
						
							
						String Ces2 =  Ccom1.getSelectedItem().toString();
						int Ce2 = Ccom1.getSelectedItem().toString().length();
				
						Cex3.setText(Ces2.substring(4,Ce2));
						
									
								}else if(Ccom1.getSelectedIndex()==4){
									
									//-------------------------------------1233--------------------------------------------------		
									
									
									try{
										
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;

									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
									    		 
									    		 
									//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
										    		 
										    		
										    		 
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
												    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
													    		
													    	
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		
										    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 

												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
														    		
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
									
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									
								}else{
									
									try{
										DocumentBuilderFactory factory = 
									
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File f = new File(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
						    		Document doc = builder.parse(f);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 String roeS = Float.toString(aa0);
						    		 aas[0]=roeS;
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 String roS = Float.toString(aa1);
						    		 aas[1]=roS;
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  aa2 = (noo1-noo2)/noo3;
							    		 String noS = Float.toString(aa2);
							    		 aas[2]=noS;
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  aa3 =goo1/goo2;
								    		 String goS = Float.toString(aa3);
								    		 aas[3]=goS;
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  aa4 =cour1/cour2;
									    		 String cuS = Float.toString(aa4);
									    		 aas[4]=cuS;
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  aa5 = geo1/geo2;
										    		 String geoS = Float.toString(aa5);
										    		 aas[5]=geoS;
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  aa6 =boo1;
									    		 String boS = Float.toString(aa6);
									    		 aas[6]=boS;
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 String lnvS = Float.toString(aa7);
										    		 aas[7]=lnvS;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  aa8 = capo1/capo2;
											    		 String capS = Float.toString(aa8);
											    		 aas[8]=capS;
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 String aoS = Float.toString(aa9);
										    		 aas[9]=aoS;
										    		 
										    		 aas[0]=df.format(aa0);  
										    		 aas[1]=df.format(aa1); 
										    		 aas[2]=df.format(aa2); 
										    		 aas[3]=df.format(aa3);  
										    		 aas[4]=df.format(aa4); 
										    		 aas[5]=df.format(aa5); 
										    		 aas[6]=df.format(aa6);  
										    		 aas[7]=df.format(aa7);  
										    		 aas[8]=df.format(aa8); 
										    		 aas[9]=df.format(aa9); 
							    		 
										    		   
										    		 
										    	
							 }catch(Exception aa0){
									System.out.println("mistake");
									}	
						
						jp1[0].setText(aas[0]);
						jp1[1].setText(aas[1]);
						jp1[2].setText(aas[2]);
						jp1[3].setText(aas[3]);
						jp1[4].setText(aas[4]);
						jp1[5].setText(aas[5]);
						jp1[6].setText(aas[6]);
						jp1[7].setText(aas[7]);
						jp1[8].setText(aas[8]);
						jp1[9].setText(aas[9]);
						
						String Ces2 =  Ccom1.getSelectedItem().toString();
						int Ce2 = Ccom1.getSelectedItem().toString().length();
				
						Cex3.setText(Ces2.substring(4,Ce2));
						
								}
						
						
								
							}else if(Ccbo.getSelectedIndex()==2){
								
								if(Ccom1.getSelectedIndex()==0){
									
									try{
										
										jp1[0].setText("");
										jp1[1].setText("");
										jp1[2].setText("");
										jp1[3].setText("");
										jp1[4].setText("");
										jp1[5].setText("");
										jp1[6].setText("");
										jp1[7].setText("");
										jp1[8].setText("");
										jp1[9].setText("");
							
										
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
							
								
								}else if(Ccom1.getSelectedIndex()==1){
									
									try{
									
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetNotesReceivableRelatedParties");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									
								}else if(Ccom1.getSelectedIndex()==2){
									
									//-------------------------------------2204--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
									//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									
								}else if(Ccom1.getSelectedIndex()==3){
									
									try{
									DocumentBuilderFactory factory = 
								    		DocumentBuilderFactory.newInstance();
							    	   		DocumentBuilder builder =
								    		factory.newDocumentBuilder();
								    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
								    		Document doc = builder.parse(f);
								    		
								//------------------------------------Roe----------------------------------------------------------------------
								    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
								    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
								    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
								    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
								    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

								    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
								    		 String roeS = Float.toString(aa0);
								    		 aas[0]=roeS;
								    		
								    		
								    		
								//------------------------------------Roa----------------------------------------------------------------------    		
								    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
								    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
								    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
								    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
								    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
								    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
								    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
								    		 String roS = Float.toString(aa1);
								    		 aas[1]=roS;
					    		//------------------------------------純益率----------------------------------------------------------------------    		 
								    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
									    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
									    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
									    		  aa2 = (noo1-noo2)/noo3;
									    		 String noS = Float.toString(aa2);
									    		 aas[2]=noS;
								//------------------------------------毛益率---------------------------------------------------------------------- 
									    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
										    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
										    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
										    		  aa3 =goo1/goo2;
										    		 String goS = Float.toString(aa3);
										    		 aas[3]=goS;
										    		 
										    		 
								//------------------------------------流動比率----------------------------------------------------------------------
										    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
											    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
											    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
											    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
											    		  aa4 =cour1/cour2;
											    		 String cuS = Float.toString(aa4);
											    		 aas[4]=cuS;
										    		 
										    		 
										    		 
										    		 
										    		 
								//------------------------------------負債比率----------------------------------------------------------------------
										    		 
											    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
												    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
												    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
												    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
												    		  aa5 = geo1/geo2;
												    		 String geoS = Float.toString(aa5);
												    		 aas[5]=geoS;
										    		 
										    		 
										    		 
								//------------------------------------每股淨值---------------------------------------------------------------------- 
										    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
											    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
											    		  aa6 =boo1;
											    		 String boS = Float.toString(aa6);
											    		 aas[6]=boS;
											    		 
											    		 
											    		 
								//------------------------------------存貨週轉率----------------------------------------------------------------------
											    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
												    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
												    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
												    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
												    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
												    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
												    		 String lnvS = Float.toString(aa7);
												    		 aas[7]=lnvS;
											    		 
											    		 
											    		 
											    		 
											    		 
								//------------------------------------資本週轉率----------------------------------------------------------------------
												    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
													    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

													    		  aa8 = capo1/capo2;
													    		 String capS = Float.toString(aa8);
													    		 aas[8]=capS;
												    		  
											    		 
											    		 
											    		 
											    		 
											    		 
											    		 
								//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
											    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
												    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
												    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
												    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
												    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
												    		 aa9 = (aoo1/((aoo2+aoo3)/2));
												    		 String aoS = Float.toString(aa9);
												    		 aas[9]=aoS;
												    		 
												    		 aas[0]=df.format(aa0);  
												    		 aas[1]=df.format(aa1); 
												    		 aas[2]=df.format(aa2); 
												    		 aas[3]=df.format(aa3);  
												    		 aas[4]=df.format(aa4); 
												    		 aas[5]=df.format(aa5); 
												    		 aas[6]=df.format(aa6);  
												    		 aas[7]=df.format(aa7);  
												    		 aas[8]=df.format(aa8); 
												    		 aas[9]=df.format(aa9); 
									    		 
												    		   
												    		 
												    	
									 }catch(Exception aa0){
											System.out.println("mistake");
											}	
								
								jp1[0].setText(aas[0]);
								jp1[1].setText(aas[1]);
								jp1[2].setText(aas[2]);
								jp1[3].setText(aas[3]);
								jp1[4].setText(aas[4]);
								jp1[5].setText(aas[5]);
								jp1[6].setText(aas[6]);
								jp1[7].setText(aas[7]);
								jp1[8].setText(aas[8]);
								jp1[9].setText(aas[9]);
						
								String Ces2 =  Ccom1.getSelectedItem().toString();
								int Ce2 = Ccom1.getSelectedItem().toString().length();
						
								Cex3.setText(Ces2.substring(4,Ce2));
								
									
								}else{
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									}
									
									
								
							
							}else {
								
								if(Ccom1.getSelectedIndex()==0){
								
									try{
										
										jp1[0].setText("");
										jp1[1].setText("");
										jp1[2].setText("");
										jp1[3].setText("");
										jp1[4].setText("");
										jp1[5].setText("");
										jp1[6].setText("");
										jp1[7].setText("");
										jp1[8].setText("");
										jp1[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
							
								
								}else if(Ccom1.getSelectedIndex()==1){
								
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									
								}else if(Ccom1.getSelectedIndex()==2){
								
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									
								}else if(Ccom1.getSelectedIndex()==3){
								
									//-------------------------------------2356--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		 
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
									
								}else if(Ccom1.getSelectedIndex()==4){
							
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
								}else{
								
									//-------------------------------------2377--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		 
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp1[0].setText(aas[0]);
									jp1[1].setText(aas[1]);
									jp1[2].setText(aas[2]);
									jp1[3].setText(aas[3]);
									jp1[4].setText(aas[4]);
									jp1[5].setText(aas[5]);
									jp1[6].setText(aas[6]);
									jp1[7].setText(aas[7]);
									jp1[8].setText(aas[8]);
									jp1[9].setText(aas[9]);
							
									String Ces2 =  Ccom1.getSelectedItem().toString();
									int Ce2 = Ccom1.getSelectedItem().toString().length();
							
									Cex3.setText(Ces2.substring(4,Ce2));
									
							
							
									
								}
							}
						}
					}
			 	});

				 
		
			 	
	//------------------------------------Ccom2-----------------------------------------------------------------------
			 	
			
			 	
			 	Ccom2.addItemListener(new ItemListener(){
					public void itemStateChanged(ItemEvent e){
						
						if(e.getStateChange() == ItemEvent.SELECTED){
							
							 DecimalFormat df=new DecimalFormat("#.####");
							 for(int aa0=0;aa0<jcheckbox.length;aa0++){
									jcheckbox[aa0].setEnabled(TRUE);
									jcheckbox[aa0].setSelected(FALSE);
								}
							
								
							 
							if(Ccbo.getSelectedIndex()==0){
								
								
								
							}else if(Ccbo.getSelectedIndex()==1){
								
								if(Ccom2.getSelectedIndex()==0){
									
									try{
										
										jp2[0].setText("");
										jp2[1].setText("");
										jp2[2].setText("");
										jp2[3].setText("");
										jp2[4].setText("");
										jp2[5].setText("");
										jp2[6].setText("");
										jp2[7].setText("");
										jp2[8].setText("");
										jp2[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
							
										
								}else if(Ccom2.getSelectedIndex()==1){
								
									try{
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		   String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		  String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		   
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		  
														    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    	
													 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
									
								}else if(Ccom2.getSelectedIndex()==2){
									//-------------------------------------1216--------------------------------------------------
									
									try{
									
									
									DocumentBuilderFactory factory = 
								    		DocumentBuilderFactory.newInstance();
							    	   		DocumentBuilder builder =
								    		factory.newDocumentBuilder();
								    		File f = new File(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
								    		Document doc = builder.parse(f);
								    		
								//------------------------------------Roe----------------------------------------------------------------------
								    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
								    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
								    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
								    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
								    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

								    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
								    		 String roeS = Float.toString(aa0);
								    		 aas[0]=roeS;

								//------------------------------------Roa----------------------------------------------------------------------    		
								    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
								    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
								    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
								    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
								    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
								    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
								    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
								    		 String roS = Float.toString(aa1);
								    		 aas[1]=roS;
								    		 
								    		 
								//------------------------------------純益率----------------------------------------------------------------------    		 
								    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
									    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
									    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
									    		  aa2 = (noo1-noo2)/noo3;
									    		 String noS = Float.toString(aa2);
									    		 aas[2]=noS;
									    		 
									    		
									    		 
								//------------------------------------毛益率---------------------------------------------------------------------- 
									    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
										    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
										    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
										    		  aa3 =goo1/goo2;
										    		 String goS = Float.toString(aa3);
										    		 aas[3]=goS;
										    		 
										    		
										    		 
								//------------------------------------流動比率----------------------------------------------------------------------
										    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
											    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
											    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
											    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
											    		  aa4 =cour1/cour2;
											    		 String cuS = Float.toString(aa4);
											    		 aas[4]=cuS;
										    		 
											    		 
										    		 
										    		 
								//------------------------------------負債比率----------------------------------------------------------------------
										    		 
											    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
												    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
												    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
												    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
												    		  aa5 = geo1/geo2;
												    		 String geoS = Float.toString(aa5);
												    		 aas[5]=geoS;
										    		 
												    		
												    	
										    		 
								//------------------------------------每股淨值---------------------------------------------------------------------- 
										    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
											    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
											    		  aa6 =boo1;
											    		 String boS = Float.toString(aa6);
											    		 aas[6]=boS;
											    		 
											    		
									    		 
											    		 
								//------------------------------------存貨週轉率----------------------------------------------------------------------
											    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
												    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
												    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
												    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
												    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
												    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
												    		 String lnvS = Float.toString(aa7);
												    		 aas[7]=lnvS;
											    		 
											    		 

											    		 
											    		 
								//------------------------------------資本週轉率----------------------------------------------------------------------
												    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
													    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

													    		  aa8 = capo1/capo2;
													    		 String capS = Float.toString(aa8);
													    		 aas[8]=capS;
												    		  
											    		 
											    		 
													    		
											    		 
											    		 
											    		 
											    		 
								//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
											    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
												    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
												    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
												    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
												    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
												    		 aa9 = (aoo1/((aoo2+aoo3)/2));
												    		 String aoS = Float.toString(aa9);
												    		 aas[9]=aoS;
												    		 aas[0]=df.format(aa0);  
												    		 aas[1]=df.format(aa1); 
												    		 aas[2]=df.format(aa2); 
												    		 aas[3]=df.format(aa3);  
												    		 aas[4]=df.format(aa4); 
												    		 aas[5]=df.format(aa5); 
												    		 aas[6]=df.format(aa6);  
												    		 aas[7]=df.format(aa7);  
												    		 aas[8]=df.format(aa8); 
												    		 aas[9]=df.format(aa9); 
									    		 
												    		   
												    		 
												    	
									 }catch(Exception aa0){
											System.out.println("mistake");
											}	
								
								jp2[0].setText(aas[0]);
								jp2[1].setText(aas[1]);
								jp2[2].setText(aas[2]);
								jp2[3].setText(aas[3]);
								jp2[4].setText(aas[4]);
								jp2[5].setText(aas[5]);
								jp2[6].setText(aas[6]);
								jp2[7].setText(aas[7]);
								jp2[8].setText(aas[8]);
								jp2[9].setText(aas[9]);
								
								String Ces3 =  Ccom2.getSelectedItem().toString();
								int Ce3 = Ccom2.getSelectedItem().toString().length();
						
								Cex4.setText(Ces3.substring(4,Ce3));
								
								}else if(Ccom2.getSelectedIndex()==3){
									
									try{DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File f = new File(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
						    		Document doc = builder.parse(f);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		  c1[1]=aa0;
						    		 String roeS = Float.toString(aa0);
						    		 aas[0]=roeS;
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		  c1[2]=aa1;
						    		 String roS = Float.toString(aa1);
						    		 aas[1]=roS;
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  aa2 = (noo1-noo2)/noo3;
							    		  c1[3]=aa2;
							    		 String noS = Float.toString(aa2);
							    		 aas[2]=noS;
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  aa3 =goo1/goo2;
								    		  c1[4]=aa3;
								    		 String goS = Float.toString(aa3);
								    		 aas[3]=goS;
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  aa4 =cour1/cour2;
									    		 String cuS = Float.toString(aa4);
									    		 aas[4]=cuS;
								    		 c1[5]=aa4;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  aa5 = geo1/geo2;
										    		 String geoS = Float.toString(aa5);
										    		 aas[5]=geoS;
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  aa6 =boo1;
									    		 String boS = Float.toString(aa6);
									    		 aas[6]=boS;
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 String lnvS = Float.toString(aa7);
										    		 aas[7]=lnvS;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  aa8 = capo1/capo2;
											    		 String capS = Float.toString(aa8);
											    		 aas[8]=capS;
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 String aoS = Float.toString(aa9);
										    		 aas[9]=aoS;
										    		 
										    		 
										    		 aas[0]=df.format(aa0);  
										    		 aas[1]=df.format(aa1); 
										    		 aas[2]=df.format(aa2); 
										    		 aas[3]=df.format(aa3);  
										    		 aas[4]=df.format(aa4); 
										    		 aas[5]=df.format(aa5); 
										    		 aas[6]=df.format(aa6);  
										    		 aas[7]=df.format(aa7);  
										    		 aas[8]=df.format(aa8); 
										    		 aas[9]=df.format(aa9); 
							    		 
										    		   
										    		 
										    	
							 }catch(Exception aa0){
									System.out.println("mistake");
									}	
						
						jp2[0].setText(aas[0]);
						jp2[1].setText(aas[1]);
						jp2[2].setText(aas[2]);
						jp2[3].setText(aas[3]);
						jp2[4].setText(aas[4]);
						jp2[5].setText(aas[5]);
						jp2[6].setText(aas[6]);
						jp2[7].setText(aas[7]);
						jp2[8].setText(aas[8]);
						jp2[9].setText(aas[9]);
						
						String Ces3 =  Ccom2.getSelectedItem().toString();
						int Ce3 = Ccom2.getSelectedItem().toString().length();
				
						Cex4.setText(Ces3.substring(4,Ce3));
						
									
								}else if(Ccom2.getSelectedIndex()==4){
									
									//-------------------------------------1233--------------------------------------------------		
									
									
									try{
										
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;

									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
									    		 
									    		 
									//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
										    		 
										    		
										    		 
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
												    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
													    		
													    	
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		
										    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 

												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
														    		
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
									
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
								}else{
									
									try{
										DocumentBuilderFactory factory = 
									
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File f = new File(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
						    		Document doc = builder.parse(f);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 String roeS = Float.toString(aa0);
						    		 aas[0]=roeS;
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 String roS = Float.toString(aa1);
						    		 aas[1]=roS;
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  aa2 = (noo1-noo2)/noo3;
							    		 String noS = Float.toString(aa2);
							    		 aas[2]=noS;
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  aa3 =goo1/goo2;
								    		 String goS = Float.toString(aa3);
								    		 aas[3]=goS;
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  aa4 =cour1/cour2;
									    		 String cuS = Float.toString(aa4);
									    		 aas[4]=cuS;
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  aa5 = geo1/geo2;
										    		 String geoS = Float.toString(aa5);
										    		 aas[5]=geoS;
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  aa6 =boo1;
									    		 String boS = Float.toString(aa6);
									    		 aas[6]=boS;
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 String lnvS = Float.toString(aa7);
										    		 aas[7]=lnvS;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  aa8 = capo1/capo2;
											    		 String capS = Float.toString(aa8);
											    		 aas[8]=capS;
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 String aoS = Float.toString(aa9);
										    		 aas[9]=aoS;
										    		 
										    		 aas[0]=df.format(aa0);  
										    		 aas[1]=df.format(aa1); 
										    		 aas[2]=df.format(aa2); 
										    		 aas[3]=df.format(aa3);  
										    		 aas[4]=df.format(aa4); 
										    		 aas[5]=df.format(aa5); 
										    		 aas[6]=df.format(aa6);  
										    		 aas[7]=df.format(aa7);  
										    		 aas[8]=df.format(aa8); 
										    		 aas[9]=df.format(aa9); 
							    		 
										    		   
										    		 
										    	
							 }catch(Exception aa0){
									System.out.println("mistake");
									}	
						
						jp2[0].setText(aas[0]);
						jp2[1].setText(aas[1]);
						jp2[2].setText(aas[2]);
						jp2[3].setText(aas[3]);
						jp2[4].setText(aas[4]);
						jp2[5].setText(aas[5]);
						jp2[6].setText(aas[6]);
						jp2[7].setText(aas[7]);
						jp2[8].setText(aas[8]);
						jp2[9].setText(aas[9]);
						
						String Ces3 =  Ccom2.getSelectedItem().toString();
						int Ce3 = Ccom2.getSelectedItem().toString().length();
				
						Cex4.setText(Ces3.substring(4,Ce3));
						
								}
						
						
								
							}else if(Ccbo.getSelectedIndex()==2){
								
								if(Ccom2.getSelectedIndex()==0){
							
									try{
										
										jp2[0].setText("");
										jp2[1].setText("");
										jp2[2].setText("");
										jp2[3].setText("");
										jp2[4].setText("");
										jp2[5].setText("");
										jp2[6].setText("");
										jp2[7].setText("");
										jp2[8].setText("");
										jp2[9].setText("");
							
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
							
								
								}else if(Ccom2.getSelectedIndex()==1){
									
									try{
									
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetNotesReceivableRelatedParties");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
								}else if(Ccom2.getSelectedIndex()==2){
									
									//-------------------------------------2204--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
									//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
								}else if(Ccom2.getSelectedIndex()==3){
									
									try{
									DocumentBuilderFactory factory = 
								    		DocumentBuilderFactory.newInstance();
							    	   		DocumentBuilder builder =
								    		factory.newDocumentBuilder();
								    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
								    		Document doc = builder.parse(f);
								    		
								//------------------------------------Roe----------------------------------------------------------------------
								    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
								    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
								    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
								    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
								    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

								    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
								    		 String roeS = Float.toString(aa0);
								    		 aas[0]=roeS;
								    		
								    		
								    		
								//------------------------------------Roa----------------------------------------------------------------------    		
								    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
								    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
								    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
								    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
								    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
								    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
								    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
								    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
								    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
								    		 String roS = Float.toString(aa1);
								    		 aas[1]=roS;
					    		//------------------------------------純益率----------------------------------------------------------------------    		 
								    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
									    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
									    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
									    		  aa2 = (noo1-noo2)/noo3;
									    		 String noS = Float.toString(aa2);
									    		 aas[2]=noS;
								//------------------------------------毛益率---------------------------------------------------------------------- 
									    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
										    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
										    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
										    		  aa3 =goo1/goo2;
										    		 String goS = Float.toString(aa3);
										    		 aas[3]=goS;
										    		 
										    		 
								//------------------------------------流動比率----------------------------------------------------------------------
										    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
											    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
											    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
											    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
											    		  aa4 =cour1/cour2;
											    		 String cuS = Float.toString(aa4);
											    		 aas[4]=cuS;
										    		 
										    		 
										    		 
										    		 
										    		 
								//------------------------------------負債比率----------------------------------------------------------------------
										    		 
											    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
												    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
												    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
												    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
												    		  aa5 = geo1/geo2;
												    		 String geoS = Float.toString(aa5);
												    		 aas[5]=geoS;
										    		 
										    		 
										    		 
								//------------------------------------每股淨值---------------------------------------------------------------------- 
										    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
											    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
											    		  aa6 =boo1;
											    		 String boS = Float.toString(aa6);
											    		 aas[6]=boS;
											    		 
											    		 
											    		 
								//------------------------------------存貨週轉率----------------------------------------------------------------------
											    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
												    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
												    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
												    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
												    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
												    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
												    		 String lnvS = Float.toString(aa7);
												    		 aas[7]=lnvS;
											    		 
											    		 
											    		 
											    		 
											    		 
								//------------------------------------資本週轉率----------------------------------------------------------------------
												    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
													    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

													    		  aa8 = capo1/capo2;
													    		 String capS = Float.toString(aa8);
													    		 aas[8]=capS;
												    		  
											    		 
											    		 
											    		 
											    		 
											    		 
											    		 
								//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
											    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
												    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
												    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
												    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
												    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
												    		 aa9 = (aoo1/((aoo2+aoo3)/2));
												    		 String aoS = Float.toString(aa9);
												    		 aas[9]=aoS;
												    		 
												    		 aas[0]=df.format(aa0);  
												    		 aas[1]=df.format(aa1); 
												    		 aas[2]=df.format(aa2); 
												    		 aas[3]=df.format(aa3);  
												    		 aas[4]=df.format(aa4); 
												    		 aas[5]=df.format(aa5); 
												    		 aas[6]=df.format(aa6);  
												    		 aas[7]=df.format(aa7);  
												    		 aas[8]=df.format(aa8); 
												    		 aas[9]=df.format(aa9); 
									    		 
												    		   
												    		 
												    	
									 }catch(Exception aa0){
											System.out.println("mistake");
											}	
								
								jp2[0].setText(aas[0]);
								jp2[1].setText(aas[1]);
								jp2[2].setText(aas[2]);
								jp2[3].setText(aas[3]);
								jp2[4].setText(aas[4]);
								jp2[5].setText(aas[5]);
								jp2[6].setText(aas[6]);
								jp2[7].setText(aas[7]);
								jp2[8].setText(aas[8]);
								jp2[9].setText(aas[9]);
						
								String Ces3 =  Ccom2.getSelectedItem().toString();
								int Ce3 = Ccom2.getSelectedItem().toString().length();
						
								Cex4.setText(Ces3.substring(4,Ce3));
									
								}else{
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
									}
									
									
								
							
							}else {
								
								if(Ccom2.getSelectedIndex()==0){
								
	try{
										
										jp2[0].setText("");
										jp2[1].setText("");
										jp2[2].setText("");
										jp2[3].setText("");
										jp2[4].setText("");
										jp2[5].setText("");
										jp2[6].setText("");
										jp2[7].setText("");
										jp2[8].setText("");
										jp2[9].setText("");
										
										String Ces3 =  Ccom2.getSelectedItem().toString();
										int Ce3 = Ccom2.getSelectedItem().toString().length();
								
										Cex4.setText(Ces3.substring(4,Ce3));
							
								
									}catch(Exception aa0){
										System.out.println("mistake");
										}	
							
								
								}else if(Ccom2.getSelectedIndex()==1){
								
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
									
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
							
									
								}else if(Ccom2.getSelectedIndex()==2){
								
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 String aoS = Float.toString(aa9);
													    		 aas[9]=aoS;
													    		 
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
									
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
							
									
								}else if(Ccom2.getSelectedIndex()==3){
								
									//-------------------------------------2356--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		 
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
								}else if(Ccom2.getSelectedIndex()==4){
							
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
									
								}else{
								
									//-------------------------------------2377--------------------------------------------------
									
									try{
										
										DocumentBuilderFactory factory = 
									    		DocumentBuilderFactory.newInstance();
								    	   		DocumentBuilder builder =
									    		factory.newDocumentBuilder();
									    		File f = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									    		Document doc = builder.parse(f);
									    		
									//------------------------------------Roe----------------------------------------------------------------------
									    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
									    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
									    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
									    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
									    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

									    		  aa0 = (rooe1-rooe2)/((rooe3+rooe4)/2);
									    		 String roeS = Float.toString(aa0);
									    		 aas[0]=roeS;
									    		
									    		 
									    		
									//------------------------------------Roa----------------------------------------------------------------------    		
									    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
									    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
									    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
									    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
									    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
									    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
									    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
									    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
									    		  aa1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
									    		 String roS = Float.toString(aa1);
									    		 aas[1]=roS;
						    		//------------------------------------純益率----------------------------------------------------------------------    		 
									    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
										    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
										    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
										    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
										    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
										    		  aa2 = (noo1-noo2)/noo3;
										    		 String noS = Float.toString(aa2);
										    		 aas[2]=noS;
									//------------------------------------毛益率---------------------------------------------------------------------- 
										    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
											    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
											    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
											    		  aa3 =goo1/goo2;
											    		 String goS = Float.toString(aa3);
											    		 aas[3]=goS;
											    		 
											    		 
									//------------------------------------流動比率----------------------------------------------------------------------
											    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
												    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
												    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
												    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
												    		  aa4 =cour1/cour2;
												    		 String cuS = Float.toString(aa4);
												    		 aas[4]=cuS;
											    		 
											    		 
											    		 
											    		 
											    		 
									//------------------------------------負債比率----------------------------------------------------------------------
											    		 
												    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
													    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
													    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
													    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
													    		  aa5 = geo1/geo2;
													    		 String geoS = Float.toString(aa5);
													    		 aas[5]=geoS;
											    		 
											    		 
											    		 
									//------------------------------------每股淨值---------------------------------------------------------------------- 
											    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
												    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
												    		  aa6 =boo1;
												    		 String boS = Float.toString(aa6);
												    		 aas[6]=boS;
												    		 
												    		 
												    		 
									//------------------------------------存貨週轉率----------------------------------------------------------------------
												    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
													    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
													    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
													    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
													    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
													    		  aa7 = (lnvo1/((lnvo2+lnvo3)/2));
													    		 String lnvS = Float.toString(aa7);
													    		 aas[7]=lnvS;
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------資本週轉率----------------------------------------------------------------------
													    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
														    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
														    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
														    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

														    		  aa8 = capo1/capo2;
														    		 String capS = Float.toString(aa8);
														    		 aas[8]=capS;
													    		  
												    		 
												    		 
												    		 
												    		 
												    		 
												    		 
									//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
												    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
													    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
													    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
													    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
													    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
													    		 aa9 = (aoo1/((aoo2+aoo3)/2));
													    		 aas[0]=df.format(aa0);  
													    		 aas[1]=df.format(aa1); 
													    		 aas[2]=df.format(aa2); 
													    		 aas[3]=df.format(aa3);  
													    		 aas[4]=df.format(aa4); 
													    		 aas[5]=df.format(aa5); 
													    		 aas[6]=df.format(aa6);  
													    		 aas[7]=df.format(aa7);  
													    		 aas[8]=df.format(aa8); 
													    		 aas[9]=df.format(aa9); 
										    		 
													    		   
													    		 
													    	
										 }catch(Exception aa0){
												System.out.println("mistake");
												}	
									
									jp2[0].setText(aas[0]);
									jp2[1].setText(aas[1]);
									jp2[2].setText(aas[2]);
									jp2[3].setText(aas[3]);
									jp2[4].setText(aas[4]);
									jp2[5].setText(aas[5]);
									jp2[6].setText(aas[6]);
									jp2[7].setText(aas[7]);
									jp2[8].setText(aas[8]);
									jp2[9].setText(aas[9]);
							
									String Ces3 =  Ccom2.getSelectedItem().toString();
									int Ce3 = Ccom2.getSelectedItem().toString().length();
							
									Cex4.setText(Ces3.substring(4,Ce3));
									
									
							
									
								}
							}
						}
					}
			 	});

				 
	//--------------------------------------右下重選按鈕------------------------------------------------------
			 	
			 	 btn[3].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
							
							Ccbo.setSelectedIndex(0);
							Ccom.removeAllItems();
							Ccom1.removeAllItems();
							Ccom2.removeAllItems();
							
							Cex2.setText("公司一");
							Cex3.setText("公司二");
							Cex4.setText("公司三");
							
							
							try{
								
								if(Cpan8.isVisible()==TRUE){
									Cpan8.setVisible(FALSE);
									}
								
								}catch(Exception A){
									//	System.out.println("mistake");
									}
							
						
						for(int aa0=0;aa0<jcheckbox.length;aa0++){
							
							jcheckbox[aa0].setSelected(FALSE);
						
						}
						for(int aa0=0;aa0<jp.length;aa0++){
							
							jp[aa0].setText("");
							
							jp1[aa0].setText("");
							jp2[aa0].setText("");
							
						
						}
						

						DefaultCategoryDataset  dataset = new DefaultCategoryDataset();
						dataset.setValue(50,"","預設一");  
						dataset.setValue(100,"","預設二");  
						dataset.setValue(150,"","預設三");
						JFreeChart chart = ChartFactory.createBarChart("長條圖", "", "", dataset, PlotOrientation.VERTICAL, false, true, false);
		    			//將font設定為細明體
		    			Font CHART_FONT = new Font("細明體", 12, 15);
		    			chart.getTitle().setFont(CHART_FONT);
		    			CategoryPlot plot = chart.getCategoryPlot();
		    			CategoryAxis domainAxis = plot.getDomainAxis();   //橫軸
		    			ValueAxis rangeAxis = plot.getRangeAxis();        //縱軸
		    			domainAxis.setLabelFont(CHART_FONT);
		    			domainAxis.setTickLabelFont(CHART_FONT);
		    			rangeAxis.setLabelFont(CHART_FONT);
		    			rangeAxis.setTickLabelFont(CHART_FONT);
		    			 
		    			
		    			Cpan8  =	new JPanel();
		    			panels[3].add(Cpan8);
		    			Cpan8.setLayout(null);
		    			Cpan8.setBounds(403, 120, 525,390 );
		    			Ctitle.setVisible(TRUE);
		    			Cpan8.setVisible(TRUE);
		    			
		    			ChartPanel panel = new ChartPanel(chart,200,53,200,70,600,395, TRUE,TRUE,TRUE,TRUE,TRUE,TRUE);
		    			panel.setBounds(0, 0, 525, 390);
		    			Cpan8.add(panel);
						
						}
					}
					);
			 	

	//--------------------------------------左下變更鈕------------------------------------------------------
				 	
			 	 btn[1].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
							
						for(int aa0=0;aa0<jcheckbox.length;aa0++){
							
							jcheckbox[aa0].setSelected(FALSE);
							jcheckbox[aa0].setEnabled(TRUE);
						}
						}
					}
					);
			 	

	//--------------------------------------左下確定鈕------------------------------------------------------
				 	
			 	 btn[0].addActionListener(new ActionListener(){
						public void actionPerformed(ActionEvent e){
							
							int m = 10;
						if(jp[0].getText()==""|jp1[0].getText()==""|jp2[0].getText()==""){
							try{
								
								if(Cpan8.isVisible()==TRUE){
									Cpan8.setVisible(FALSE);
									}
								
								}catch(Exception A){
									//	System.out.println("mistake");
									}
							

							DefaultCategoryDataset  dataset = new DefaultCategoryDataset();
							dataset.setValue(50,"","預設一");  
							dataset.setValue(100,"","預設二");  
							dataset.setValue(150,"","預設三");
							JFreeChart chart = ChartFactory.createBarChart("長條圖", "", "", dataset, PlotOrientation.VERTICAL, false, true, false);
			    			//將font設定為細明體
			    			Font CHART_FONT = new Font("細明體", 12, 15);
			    			chart.getTitle().setFont(CHART_FONT);
			    			CategoryPlot plot = chart.getCategoryPlot();
			    			CategoryAxis domainAxis = plot.getDomainAxis();   //橫軸
			    			ValueAxis rangeAxis = plot.getRangeAxis();        //縱軸
			    			domainAxis.setLabelFont(CHART_FONT);
			    			domainAxis.setTickLabelFont(CHART_FONT);
			    			rangeAxis.setLabelFont(CHART_FONT);
			    			rangeAxis.setTickLabelFont(CHART_FONT);
			    			 
			    			
			    			Cpan8  =	new JPanel();
			    			panels[3].add(Cpan8);
			    			Cpan8.setLayout(null);
			    			Cpan8.setBounds(403, 120, 525,390 );
			    			Ctitle.setVisible(TRUE);
			    			Cpan8.setVisible(TRUE);
			    			
			    			ChartPanel panel = new ChartPanel(chart,200,53,200,70,600,395, TRUE,TRUE,TRUE,TRUE,TRUE,TRUE);
			    			panel.setBounds(0, 0, 525, 390);
			    			Cpan8.add(panel);
				
							
							JOptionPane.showMessageDialog(null,"您未選滿三間公司。");
							
								
						}
						
						for(int aa0=0;aa0<jcheckbox.length;aa0++){
							if(jcheckbox[aa0].isSelected()==FALSE){
								m--;
							}
						}
						
						if(m>1|m==0){
							if(m==0){
								
								try{
									
									if(Cpan8.isVisible()==TRUE){
										Cpan8.setVisible(FALSE);
										}
									
									}catch(Exception A){
										//	System.out.println("mistake");
										}
								

								DefaultCategoryDataset  dataset = new DefaultCategoryDataset();
								dataset.setValue(50,"","預設一");  
								dataset.setValue(100,"","預設二");  
								dataset.setValue(150,"","預設三");
								JFreeChart chart = ChartFactory.createBarChart("長條圖", "", "", dataset, PlotOrientation.VERTICAL, false, true, false);
				    			//將font設定為細明體
				    			Font CHART_FONT = new Font("細明體", 12, 15);
				    			chart.getTitle().setFont(CHART_FONT);
				    			CategoryPlot plot = chart.getCategoryPlot();
				    			CategoryAxis domainAxis = plot.getDomainAxis();   //橫軸
				    			ValueAxis rangeAxis = plot.getRangeAxis();        //縱軸
				    			domainAxis.setLabelFont(CHART_FONT);
				    			domainAxis.setTickLabelFont(CHART_FONT);
				    			rangeAxis.setLabelFont(CHART_FONT);
				    			rangeAxis.setTickLabelFont(CHART_FONT);
				    			 
				    			
				    			Cpan8  =	new JPanel();
				    			panels[3].add(Cpan8);
				    			Cpan8.setLayout(null);
				    			Cpan8.setBounds(403, 120, 525,390 );
				    			Ctitle.setVisible(TRUE);
				    			Cpan8.setVisible(TRUE);
				    			
				    			ChartPanel panel = new ChartPanel(chart,200,53,200,70,600,395, TRUE,TRUE,TRUE,TRUE,TRUE,TRUE);
				    			panel.setBounds(0, 0, 525, 390);
				    			Cpan8.add(panel);
					
								
							JOptionPane.showMessageDialog(null,"您未勾選任一想比較之比率。並不會有圖產生。");
							
								
							}else if(jp[1].getText()==""||jp1[1].getText()==""||jp2[1].getText()==""||Ccbo.getSelectedItem().toString()==""||Ccom.getSelectedItem().toString()=="'"||Ccom1.getSelectedItem().toString()==""||Ccom2.getSelectedItem().toString()==""){
								try{
									
									if(Cpan8.isVisible()==TRUE){
										Cpan8.setVisible(FALSE);
										}
									
									}catch(Exception A){
										//	System.out.println("mistake");
										}	
								
							}else{
								try{
									
									if(Cpan8.isVisible()==TRUE){
										Cpan8.setVisible(FALSE);
										}
									
									}catch(Exception A){
										//	System.out.println("mistake");
										}	
								JOptionPane.showMessageDialog(null,"您勾選過多。只會顯示出優先被勾選的比較圖！");
								
							}
							
						}
						
						int n = 0;
					 	for(int aa0=0;aa0<jcheckbox.length;aa0++){
							if(jcheckbox[aa0].isSelected()==TRUE){
								n++;
										if(n==1){
											
											
											
											try{
												
											if(Cpan8.isVisible()==TRUE){
												Cpan8.setVisible(FALSE);
												}
											
											}catch(Exception A){
												//	System.out.println("mistake");
												}	
			//--------------------------------------圖------------------------------------
											
											jcheckbox[aa0].setEnabled(TRUE);
											
											try{	
												
											float foo = Float.valueOf(jp[aa0].getText()).floatValue();
											float foo1 = Float.valueOf(jp1[aa0].getText()).floatValue();
											float foo2 = Float.valueOf(jp2[aa0].getText()).floatValue();
											
											String vData   = jcheckbox[aa0].getText();
											int    getSubstringLen = jcheckbox[aa0].getText().length()-1;
											
													DefaultCategoryDataset dataset = new DefaultCategoryDataset();  
									    			dataset.setValue(foo, vData.substring(0, getSubstringLen),Ccom.getSelectedItem().toString());
									    			dataset.setValue(foo1, vData.substring(0, getSubstringLen),Ccom1.getSelectedItem().toString());  
									    			dataset.setValue(foo2, vData.substring(0, getSubstringLen),Ccom2.getSelectedItem().toString());  
									    			JFreeChart chart = ChartFactory.createBarChart(vData.substring(0, getSubstringLen),  
									    			"", "", dataset, PlotOrientation.VERTICAL,  
									    			FALSE, TRUE, FALSE);  
									    			//將font設定為細明體
									    			Font CHART_FONT = new Font("細明體", 12, 15);
									    			chart.getTitle().setFont(CHART_FONT);
									    			CategoryPlot plot = chart.getCategoryPlot();
									    			CategoryAxis domainAxis = plot.getDomainAxis();   //橫軸
									    			ValueAxis rangeAxis = plot.getRangeAxis();        //縱軸
									    			domainAxis.setLabelFont(CHART_FONT);
									    			domainAxis.setTickLabelFont(CHART_FONT);
									    			rangeAxis.setLabelFont(CHART_FONT);
									    			rangeAxis.setTickLabelFont(CHART_FONT);
									    			 
									    			
									    			Cpan8  =	new JPanel();
									    			panels[3].add(Cpan8);
									    			Cpan8.setLayout(null);
									    			Cpan8.setBounds(403, 120, 525,390 );
									    			Ctitle.setVisible(TRUE);
									    			Cpan8.setVisible(TRUE);
									    			
									    			ChartPanel panel = new ChartPanel(chart,200,53,200,70,600,395, TRUE,TRUE,TRUE,TRUE,TRUE,TRUE);
									    			panel.setBounds(0, 0, 525, 390);
									    			Cpan8.add(panel);
												
									    			
									    			
											}catch(Exception A){
												//	System.out.println("mistake");
												}	
											
			//--------------------------------------圖------------------------------------
			
											jcheckbox[aa0].setSelected(FALSE);
											
											continue;
										}else{
											
											jcheckbox[aa0].setSelected(FALSE);
											
											
											
										}
								
								}else{
									
									if(m>1|m==0){
										if(m==0||jp[aa0].getText()==""||jp1[aa0].getText()==""||jp2[aa0].getText()==""||Ccbo.getSelectedItem().toString()==""||Ccom.getSelectedItem().toString()=="'"||Ccom1.getSelectedItem().toString()==""||Ccom2.getSelectedItem().toString()==""){
										
											jcheckbox[aa0].setEnabled(TRUE);
											jcheckbox[aa0].setSelected(FALSE);
										}else if(m>1||jp[aa0].getText()==""||jp1[aa0].getText()==""||jp2[aa0].getText()==""||Ccbo.getSelectedItem().toString()==""||Ccom.getSelectedItem().toString()=="'"||Ccom1.getSelectedItem().toString()==""||Ccom2.getSelectedItem().toString()==""){
											jcheckbox[aa0].setEnabled(TRUE);
											jcheckbox[aa0].setSelected(FALSE);
										}
									}
								}
					 		}
						}
					}
					);		 
			 	 
			 	 
					

	  
	  
	  }
//---------------------------------------------End Com 程式碼------------------------
	  
//------------------------------------------------Chart 程式碼------------------------
	  {
		  
	  
		cbo = new JComboBox<>(instance);		
		cbo.setSelectedIndex(0);
		sea = new JComboBox<>(Cdata);
//		sea.setSelectedIndex(0);
		rat = new JComboBox<>(ima);
		com = new JComboBox<>();
		com1 = new JComboBox<>();
		com2 = new JComboBox<>();
		
		
		pan2 = new JPanel();
		panels[4].add(pan2);
		Border lineA = BorderFactory.createLineBorder(Color.black);
		pan2.setBorder(BorderFactory.createTitledBorder(lineA,"產業、公司"));
		pan2.setLayout(null);
		pan2.setBounds(750, 60,150,190);
		cbo.setBounds(26, 30, 100, 20);   //產業
//		rat.setBounds(26,95 , 100, 20);	//比率
		com.setBounds(26,70,100,20);	 //公司1
		com1.setBounds(26,110,100,20);	 //公司2
		com2.setBounds(26,150,100,20);	 //公司3

		pan2.add(cbo);
		pan2.add(sea);
		pan2.add(rat);
		pan2.add(com);
		pan2.add(com1);
		pan2.add(com2);

		
		
		pan3 = new JPanel();
		panels[4].add(pan3);
		pan3.setBorder(BorderFactory.createTitledBorder(lineA,"比率"));
		pan3.setBounds(750, 260,150,70);
		rat.setBounds(0, 10,100 ,20);
		pan3.add(rat);

		start.setBounds(750, 340, 150, 20);	//開始
		reload.setBounds(750, 380, 150, 20);	//從讀
		Explanation.setBounds(750, 420, 150, 20);//說明

		start.setCursor(new Cursor(Cursor.HAND_CURSOR));
		reload.setCursor(new Cursor(Cursor.HAND_CURSOR));
		Explanation.setCursor(new Cursor(Cursor.HAND_CURSOR));
		
		panels[4].add(Explanation);
		panels[4].add(start);
		panels[4].add(reload);
		
		
		pan4 = new JPanel();
		
	
		for(int i=0;i<ra.length;i++){
			ra[i]=(float) 0.0;
			ra1[i]=(float) 0.0;
			ra2[i]=(float) 0.0;
		}
		
	
		raa.setBounds(330, 14, 300, 35);
		  //設定顯示文字之字型及大小
	     raa.setFont(new Font("標楷體", Font.BOLD, 32));
	     
		panels[4].add(raa);
		
		try{
			int a=-100;
			setdata("預設一","預設二","預設三",a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a);
		}catch(Exception e){
			System.out.println("mistake");
			}	
		

		//--------------------------------cbo---------------------------------------------

		 cbo.addItemListener(new ItemListener(){
				public void itemStateChanged(ItemEvent e){
				if(e.getStateChange() == ItemEvent.SELECTED){
					
				
					
					
					if(cbo.getSelectedIndex()==1){
						
						com.removeAllItems();
						com1.removeAllItems();
						com2.removeAllItems();
						sea.setSelectedIndex(0);
						rat.setSelectedIndex(0);
						
					for(int i=0 ; i<comm1.length;i++){
						
						com.addItem(comm1[i]);
						com1.addItem(comm1[i]);
						com2.addItem(comm1[i]);
						
					}
				
					}else if(cbo.getSelectedIndex()==2){
						
						
						com.removeAllItems();
						com1.removeAllItems();
						com2.removeAllItems();
						sea.setSelectedIndex(0);
						rat.setSelectedIndex(0);
						
					for(int i=0 ; i<comm2.length;i++){
						com.addItem(comm2[i]);
						com1.addItem(comm2[i]);
						com2.addItem(comm2[i]);
						}
				
					}else if(cbo.getSelectedIndex()==3){
					
						
						com.removeAllItems();
						com1.removeAllItems();
						com2.removeAllItems();
						sea.setSelectedIndex(0);
						rat.setSelectedIndex(0);
					
					for(int i=0 ; i<comm3.length;i++){
						com.addItem(comm3[i]);
						com1.addItem(comm3[i]);
						com2.addItem(comm3[i]);
						
						}
					}else{
						
						rat.setSelectedIndex(0);
						sea.setSelectedIndex(0);
						com.removeAllItems();
						com1.removeAllItems();
						com2.removeAllItems();

							
						
						
						}
					
					}
					
				}	
			 	});

//--------------------------------------start------------------------------------------------------
		 	
	 	 start.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent p){
					

					for(int i=0;i<ra.length;i++){
						ra[i]=(float) 0.0;
						ra1[i]=(float) 0.0;
						ra2[i]=(float) 0.0;
					}
					
					if(cbo.getSelectedIndex()==0  || rat.getSelectedIndex()==0 || com.getSelectedIndex()==0 || com1.getSelectedIndex()==0 ||com2.getSelectedIndex()==0 ){
						JOptionPane.showMessageDialog(null,"您有未選取欄位。");
					}else if(!(com.getSelectedIndex()==0)){
						
						if(cbo.getSelectedIndex()==1){
						
							if(com.getSelectedIndex()==1){
								
								if(rat.getSelectedIndex()==1){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[0];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[1];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[2];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[3];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[4];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[5];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[6];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[7];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[8];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
									ra[0]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
									ra[1]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
									ra[2]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
									ra[3]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
									ra[4]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
									ra[5]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
									ra[6]=aa[9];
									C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
								
							}else if(com.getSelectedIndex()==2){
								if(rat.getSelectedIndex()==1){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[0];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[1];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[2];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[3];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[4];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[5];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[6];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[7];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[8];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
									ra[0]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
									ra[1]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
									ra[2]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
									ra[3]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
									ra[4]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
									ra[5]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
									ra[6]=aa[9];
									C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}else if(com.getSelectedIndex()==3){
								if(rat.getSelectedIndex()==1){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[0];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[1];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[2];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[3];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[4];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[5];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[6];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[7];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[8];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
									ra[0]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
									ra[1]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
									ra[2]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
									ra[3]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
									ra[4]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
									ra[5]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
									ra[6]=aa[9];
									C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}else if(com.getSelectedIndex()==4){
								if(rat.getSelectedIndex()==1){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[0];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[1];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[2];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[3];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[4];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[5];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[6];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[7];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[8];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
									ra[0]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
									ra[1]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
									ra[2]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
									ra[3]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
									ra[4]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
									ra[5]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
									ra[6]=aa[9];
									C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
									ra[7]=aa[9];
								}
								
									
							}else if(com.getSelectedIndex()==5){
								if(rat.getSelectedIndex()==1){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[0];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[1];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[2];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[3];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[4];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[5];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[6];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[7];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[8];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
									ra[0]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
									ra[1]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
									ra[2]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
									ra[3]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
									ra[4]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
									ra[5]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
									ra[6]=aa[9];
									C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
									ra[7]=aa[9];
								}	
							}
							
							
						}else if(cbo.getSelectedIndex()==2){
							
							if(com.getSelectedIndex()==1){
									
									if(rat.getSelectedIndex()==1){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[0];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[0];
									}else if(rat.getSelectedIndex()==2){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[1];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[1];
									}else if(rat.getSelectedIndex()==3){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[2];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[2];
									}else if(rat.getSelectedIndex()==4){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[3];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[3];
									}else if(rat.getSelectedIndex()==5){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[4];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[4];
									}else if(rat.getSelectedIndex()==6){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[5];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[5];
									}else if(rat.getSelectedIndex()==7){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[6];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[6];
									}else if(rat.getSelectedIndex()==8){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[7];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[7];
									}else if(rat.getSelectedIndex()==9){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[8];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[8];
									}else if(rat.getSelectedIndex()==10){
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
										ra[0]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
										ra[1]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
										ra[2]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
										ra[3]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
										ra[4]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
										ra[5]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
										ra[6]=aa[9];
										C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
										ra[7]=aa[9];			
									}
							}else if(com.getSelectedIndex()==2){
								if(rat.getSelectedIndex()==1){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[0];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[1];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[2];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[3];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[4];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[5];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[6];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[7];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[8];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
									ra[0]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
									ra[1]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
									ra[2]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
									ra[3]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
									ra[4]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
									ra[5]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
									ra[6]=aa[9];
									C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}else if(com.getSelectedIndex()==3){
								if(rat.getSelectedIndex()==1){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[0];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[1];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[2];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[3];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[4];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[5];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[6];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[7];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[8];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
									ra[0]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
									ra[1]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
									ra[2]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
									ra[3]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
									ra[4]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
									ra[5]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
									ra[6]=aa[9];
									C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}else if(com.getSelectedIndex()==4){
								if(rat.getSelectedIndex()==1){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[0];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[1];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[2];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[3];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[4];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[5];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[6];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[7];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[8];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
									ra[0]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
									ra[1]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
									ra[2]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
									ra[3]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
									ra[4]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
									ra[5]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
									ra[6]=aa[9];
									C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}
							
						}else if(cbo.getSelectedIndex()==3){
							if(com.getSelectedIndex()==1){
								if(rat.getSelectedIndex()==1){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[0];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[0];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[0];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[0];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[0];
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[0];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[1];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[1];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[1];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[1];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[1];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[1];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[2];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[2];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[2];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[2];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[2];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[2];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[3];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[3];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[3];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[3];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[3];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[3];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[4];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[4];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[4];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[4];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[4];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[4];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[5];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[5];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[5];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[5];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[5];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[5];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[6];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[6];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[6];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[6];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[6];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[6];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[7];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[7];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[7];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[7];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[7];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[7];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[8];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[8];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[8];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[8];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[8];
									

									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[8];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
									ra[0]=aa[9];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
									ra[1]=aa[9];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
									ra[2]=aa[9];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
									ra[3]=aa[9];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
									ra[4]=aa[9];
									
									
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
									ra[6]=aa[9];
									C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}else if(com.getSelectedIndex()==2){
								if(rat.getSelectedIndex()==1){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[0];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[0];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[0];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[0];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[0];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[0];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[1];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[1];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[1];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[1];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[1];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[1];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[2];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[2];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[2];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[2];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[2];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[2];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[3];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[3];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[3];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[3];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[3];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[3];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[4];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[4];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[4];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[4];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[4];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[4];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[5];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[5];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[5];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[5];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[5];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[5];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[6];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[6];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[6];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[6];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[6];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[6];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[7];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[7];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[7];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[7];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[7];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[7];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[8];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[8];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[8];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[8];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[8];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[8];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
									ra[0]=aa[9];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
									ra[1]=aa[9];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
									ra[2]=aa[9];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
									ra[3]=aa[9];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
									ra[4]=aa[9];
									
									
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
									ra[6]=aa[9];
									C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
									ra[7]=aa[9];
								}
								
								
							}else if(com.getSelectedIndex()==3){
								if(rat.getSelectedIndex()==1){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[0];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[0];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[0];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[0];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[0];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[0];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[1];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[1];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[1];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[1];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[1];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[1];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[2];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[2];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[2];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[2];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[2];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[2];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[3];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[3];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[3];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[3];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[3];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[3];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[4];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[4];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[4];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[4];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[4];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[4];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[5];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[5];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[5];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[5];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[5];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[5];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[6];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[6];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[6];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[6];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[6];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[6];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[7];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[7];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[7];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[7];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[7];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[7];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[8];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[8];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[8];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[8];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[8];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[8];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
									ra[0]=aa[9];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
									ra[1]=aa[9];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
									ra[2]=aa[9];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
									ra[3]=aa[9];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
									ra[4]=aa[9];
									
									
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
									ra[6]=aa[9];
									C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
									ra[7]=aa[9];
								}
							}else if(com.getSelectedIndex()==4){
								if(rat.getSelectedIndex()==1){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[0];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[0];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[0];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[0];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[0];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[0];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[1];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[1];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[1];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[1];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[1];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[1];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[2];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[2];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[2];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[2];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[2];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[2];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[3];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[3];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[3];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[3];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[3];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[3];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[4];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[4];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[4];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[4];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[4];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[4];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[5];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[5];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[5];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[5];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[5];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[5];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[6];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[6];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[6];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[6];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[6];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[6];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[7];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[7];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[7];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[7];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[7];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[7];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[8];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[8];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[8];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[8];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[8];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[8];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
									ra[0]=aa[9];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
									ra[1]=aa[9];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
									ra[2]=aa[9];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
									ra[3]=aa[9];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
									ra[4]=aa[9];
									
									
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
									ra[6]=aa[9];
									C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
									ra[7]=aa[9];
								}
							}else if(com.getSelectedIndex()==5){
								if(rat.getSelectedIndex()==1){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[0];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[0];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[0];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[0];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[0];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[0];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[0];
								}else if(rat.getSelectedIndex()==2){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[1];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[1];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[1];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[1];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[1];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[1];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[1];
								}else if(rat.getSelectedIndex()==3){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[2];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[2];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[2];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[2];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[2];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[2];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[2];
								}else if(rat.getSelectedIndex()==4){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[3];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[3];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[3];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[3];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[3];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[3];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[3];
								}else if(rat.getSelectedIndex()==5){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[4];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[4];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[4];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[4];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[4];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[4];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[4];
								}else if(rat.getSelectedIndex()==6){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[5];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[5];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[5];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[5];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[5];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[5];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[5];
								}else if(rat.getSelectedIndex()==7){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[6];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[6];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[6];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[6];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[6];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[6];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[6];
								}else if(rat.getSelectedIndex()==8){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[7];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[7];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[7];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[7];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[7];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[7];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[7];
								}else if(rat.getSelectedIndex()==9){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[8];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[8];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[8];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[8];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[8];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[8];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[8];
								}else if(rat.getSelectedIndex()==10){
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
									ra[0]=aa[9];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
									ra[1]=aa[9];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
									ra[2]=aa[9];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
									ra[3]=aa[9];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
									ra[4]=aa[9];
									
									
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
									ra[6]=aa[9];
									C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
									ra[7]=aa[9];
									
									
								}		
							}
						}
						
							
						
						
						
						
						
						
						Ra1();
						Ra2();
						
						
						setdata(com.getSelectedItem().toString(),com1.getSelectedItem().toString(),com2.getSelectedItem().toString(),ra[0],ra[1],ra[2],ra[3],ra[4],ra[5],ra[6],ra[7],ra1[0],ra1[1],ra1[2],ra1[3],ra1[4],ra1[5],ra1[6],ra1[7],ra2[0],ra2[1],ra2[2],ra2[3],ra2[4],ra2[5],ra2[6],ra2[7]);
						
						if(rat.getSelectedIndex()==1||rat.getSelectedIndex()==2||rat.getSelectedIndex()==3||rat.getSelectedIndex()==4){
							raa.setBounds(270, 14, 380, 35);
						raa.setText("燈號分數"+" vs "+rat.getSelectedItem().toString());
						}else if(rat.getSelectedIndex()==5||rat.getSelectedIndex()==6||rat.getSelectedIndex()==7){
							raa.setBounds(240, 14, 380, 35);
							raa.setText("燈號分數"+" vs "+rat.getSelectedItem().toString());
							}else if(rat.getSelectedIndex()==8||rat.getSelectedIndex()==9){
								raa.setBounds(220, 14, 420, 35);
								raa.setText("燈號分數"+" vs "+rat.getSelectedItem().toString());
							}else{
								raa.setBounds(200, 14, 480, 35);
								raa.setText("燈號分數"+" vs "+rat.getSelectedItem().toString());
							}
					}
					
				}
	 	 });
//--------------------------------------reload------------------------------------------------------
		 	
	 	 reload.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e){
					
					cbo.setSelectedIndex(0);
					sea.setSelectedIndex(0);
					rat.setSelectedIndex(0);
					com.removeAllItems();
					com1.removeAllItems();
					com2.removeAllItems();
					setdata("預設一","預設二","預設三",-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100);
				}
	 	 });
//---------------------------------------Explanation-----------------------------------------------------
	 	 
	 	Explanation.addActionListener(new ActionListener(){
				public void actionPerformed(ActionEvent e){
					JOptionPane.showMessageDialog(null,"1.燈號分數越低，代表景氣越差。\n2.請先選擇您想觀察的產業和公司。\n3.接著再選擇您覺得比較重視的比率。\n4.如果您不小心選錯，可直接按清除紐。");
				}
			}
			);

	  }
	
		
//----------------------------------------------End Chart 程式碼----------------------

	  
//----------------------------------------------Appr 程式碼----------------------
	  {
		  
		  String ima[] = {"ROE：","ROA：","純益率：","毛利率：","流動比率：","負債比率：","每股淨值：",
					"存貨週轉率：","資本週轉率：", "應收帳款週轉率："};
			
		  
		  
		  Apan1=new JPanel();
		    Apan1.setBounds(262, 5, 350, 535);
			Border lineA = BorderFactory.createLineBorder(Color.black);
		    Apan1.setBorder(BorderFactory.createTitledBorder(lineA, "偏好設定"));
		    Apan1.setLayout(null);
		    panels[5].add(Apan1); 
		    
		    Apan2 = new JPanel();
			Apan2.setBorder(BorderFactory.createTitledBorder(lineA,"說明"));
//			final JLabel jlabel5 = new JLabel("<html><font face=微軟正黑體  size=3  color=#0000ff>1.選取喜好的公司<br><br>2.長按ctrl可以複選公司<br><br>3.選取結束依自己偏好設定比重<br><br>4.完成及可按下開始，錯誤則從選<br><br>5.開始後將產生一般列表及動態圖表</font><html>");
			Apan2.setLayout(null);
			Apan2.setBounds(15, 350, 230, 191);
			panels[5].add(Apan2);
//			Apan2.setLayout(new FlowLayout(FlowLayout.LEADING));
//			Apan2.add(jlabel5);
			
			/*
			Apan3=new JPanel();
		    Apan3.setBounds(790, 100, 300, 380);
			Apan3.setBorder(BorderFactory.createTitledBorder(lineA, "總評比列表"));
		    Apan3.setLayout(null);
		    panels[5].add(Apan3); 
			
		    */
			
			Object[] clomnName = {"公司名稱","評比分數"};
			//初始化TableModel，使用數據data，列名clomnName
			model = new DefaultTableModel(data, clomnName);
			
			//使用上面的model作??數初始化JTabel
			table = new JTable(model);
			//初始化JScrollPane
			pane = new JScrollPane();
			//將table添加到JScrollPane上 這裏使用下面的第一種方法不能添加
			//使用第一個先獲得JViewPort對象，然後再添加
			//pane.add(table);
			pane.getViewport().add(table);
			pane.setBounds(630, 12, 300, 247);
			pane.setVisible(true);
			panels[5].add(pane);
		    
		    	
			   
//		     try {
//		    	 String url =  "http://www.google.com.tw";
////		    	 System.out.println(url);
////		    	 Runtime.getRuntime().exec("rundll32   url.dll,FileProtocolHandler   " + url);
//		    	 
////		    	 URL url  = new URL("http://www.google.com.tw");
////		    	 URLConnection conn = url.openConnection();
//		    	 
////		    	 Runtime.getRuntime().exec("rundll32  url.dll,FileProtocolHandler  " + url);
//		    	 
//		    	 String[] cmd = {"cmd.exe", "/c", "start", ".\\資料來源.txt"};
//		    	  Process p = Runtime.getRuntime().exec(cmd);
//				
//			} catch (IOException e2) {
//				
//				System.out.println("HHHHHHHHHHHHHHHHi");
//			}
//		

			Astart.setCursor(new Cursor(Cursor.HAND_CURSOR));
			Bub.setCursor(new Cursor(Cursor.HAND_CURSOR));
			Bar.setCursor(new Cursor(Cursor.HAND_CURSOR));
			Areload.setCursor(new Cursor(Cursor.HAND_CURSOR));
			
		    Astart.setBounds(630, 295, 300, 40);
			panels[5].add(Astart);
			
			Bub.setBounds(630, 355, 300, 40);
			panels[5].add(Bub);
			
			Bar.setBounds(630, 415, 300, 40);
			panels[5].add(Bar);
			
			Areload.setBounds(630, 475, 300, 40);
			panels[5].add(Areload);
			
			
			Astatic.setBounds(15, 20, 200, 30);
			Apan2.add(Astatic);
			
			Astatic1.setBounds(15, 63, 200, 30);
			Apan2.add(Astatic1);
			
			Astatic2.setBounds(15, 107, 200, 30);
			Apan2.add(Astatic2);
			
			Astatic3.setBounds(15, 150, 200, 30);
			Apan2.add(Astatic3);
			
			
			js = new JSeparator(JSeparator.HORIZONTAL);
			js.setBounds(630, 275, 300, 10);
			panels[5].add(js);
			
			js1 = new JSeparator();
			js1.setBounds(630, 535, 300, 10);
			panels[5].add(js1);
			
			score[0]=new JLabel("低");
	    	score[0].setBounds(113, 10, 50, 30);
	    	Apan1.add(score[0]);
	    	
	    	score[1]=new JLabel("中");
	    	score[1].setBounds(205, 10, 50, 30);
	    	Apan1.add(score[1]);

	    	score[2]=new JLabel("高");
	    	score[2].setBounds(297, 10, 50, 30);
	    	Apan1.add(score[2]);
			
			for(int aa=0;aa<name.length;aa++){
	       	 name[aa]="";
	         }
			
		    int cou=50;
		 // 建構函式 1
		   for(int i=0;i<jslider.length;i++){
		    	jslider[i] = new JSlider();
		    	// 設定滑動軸的配置方向
			    jslider[i].setOrientation(SwingConstants.HORIZONTAL);
			    // 設定滑動軸的最大值
			    jslider[i].setMaximum(4);
			    // 設定滑動軸的最小值
			    jslider[i].setMinimum(0);
			    // 設定滑動軸的主要刻度間距
			    jslider[i].setMajorTickSpacing(1);
			    // 設定滑動軸的次要刻度間距
			    jslider[i].setMinorTickSpacing(1);
			    // 設定是否顯示滑動軸的數字標籤
			    jslider[i].setPaintLabels(false);
			    // 設定是否顯示滑動軸的刻度
			    jslider[i].setPaintTicks(true);
			    // 設定滑動軸旋鈕（Knob）是否緊延著刻度滑行
			    jslider[i].setSnapToTicks(true); 
			    jslider[i].putClientProperty("JSlider.isFilled",true); 
			    jslider[i].setValue(2);
			    
			    
			    
			    if(i==0){
			    	im[i] = new JLabel(ima[i]);
			    	im[i].setBounds(67, 27, 100, 50);
			    	jslider[i].setBounds(110, 30, 200, 50);
			    
			    	Apan1.add(im[i]);
			    	Apan1.add(jslider[i]);
			    	
			    }else if(i==1){
			    	im[i] = new JLabel(ima[i]);
			    	im[i].setBounds(68, (27+cou), 100, 50);
			    	jslider[i].setBounds(110, (30+cou), 200, 50);
			    	cou += 50;
			    	Apan1.add(im[i]);
			    	Apan1.add(jslider[i]);
			    }else if(i==2|i==3){
			    	im[i] = new JLabel(ima[i]);
			    	im[i].setBounds(58, (27+cou), 100, 50);
			    	jslider[i].setBounds(110, (30+cou), 200, 50);
			    	cou += 50;
			    	Apan1.add(im[i]);
			    	Apan1.add(jslider[i]);
			    }else if(i==4|i==5|i==6){
			    	im[i] = new JLabel(ima[i]);
			    	im[i].setBounds(46, (27+cou), 100, 50);
			    	jslider[i].setBounds(110, (30+cou), 200, 50);
			    	cou += 50;
			    	Apan1.add(im[i]);
			    	Apan1.add(jslider[i]);
			    } else if(i==7|i==8){
			    	im[i] = new JLabel(ima[i]);
			    	im[i].setBounds(34, (27+cou), 100, 50);
			    	jslider[i].setBounds(110, (30+cou), 200, 50);
			    	cou += 50;
			    	Apan1.add(im[i]);
			    	Apan1.add(jslider[i]);
			    } else if(i==9){
			    	im[i] = new JLabel(ima[i]);
			    	im[i].setBounds(10, (27+cou), 110, 50);
			    	jslider[i].setBounds(110, (30+cou), 200, 50);
			    	cou += 50;
			    	Apan1.add(im[i]);
			    	Apan1.add(jslider[i]);
			    }
			   	}
		 
		 	    
		

			
			
		   JPanel jpanel1 = new JPanel();
		   JPanel jpanel2 = new JPanel();
		   JPanel jpanel3 = new JPanel();
		   
		    jpanel1.setLayout(null);
		    jpanel2.setLayout(null);
		    jpanel3.setLayout(null);
		    
		    
		   jpanel1.setBorder(BorderFactory.createTitledBorder(lineA, "公司名稱"));
		    jpanel2.setBorder(BorderFactory.createTitledBorder(lineA, "食品工業"));
		    jpanel3.setBorder(BorderFactory.createTitledBorder(lineA, "電腦及周邊配備業"));

		    final int length = 5;  // 選項項目個數
		    String[] items1 = new String[15];
		    String[] items2 = new String[4];
		    String[] items3 = new String[length];
		    
		     	
		    
		    for (int i=0; i < Acomm1.length; i++)    
		      items1[i] = Acomm1[i];
		    
		    for (int i=0; i < Acomm2.length; i++)    
			      items2[i] = Acomm2[i];
		    
		    for (int i=0; i < Acomm3.length; i++)    
			      items3[i] = Acomm3[i];


		    final JList jlist1 = new JList(items1);
		    final JList jlist2 = new JList(items2);
		    final JList jlist3 = new JList(items3);
		    
		   
		    
		    // 設定檢視清單物件中最多可顯示的項目列數（row）
		    jlist1.setVisibleRowCount(3);
		    jlist2.setVisibleRowCount(3);
		    jlist3.setVisibleRowCount(3);
		    // 允許多重選擇
		    jlist1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
			jlist2.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
			jlist3.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
		    // 捲軸
		    
			 JScrollPane jscrollpane1 = new JScrollPane(jlist1);
			    jscrollpane1.setBounds(35, 50, 160, 240);
			    jpanel1.add(jscrollpane1);
			    
			    
			    JScrollPane jscrollpane2 = new JScrollPane(jlist2);
			    jscrollpane2.setBounds(20, 25, 160, 120);
			    jpanel2.add(jscrollpane2);
			    
			    JScrollPane jscrollpane3 = new JScrollPane(jlist3);
			    jscrollpane3.setBounds(20, 25, 160, 120);
			    jpanel3.add(jscrollpane3);
			    
			    
			    jpanel1.setBounds(15, 5, 230, 340);
			    panels[5].add(jpanel1); 
//		    jpanel2.setBounds(135, 295, 200, 160);
//		    panels[5].add(jpanel2);
			
			
//		    jpanel3.setBounds(135, 490, 200, 160);
//		    panels[5].add(jpanel3);
			
			
			for(int a=0;a<b1217.length;a++){
				b1201[a]=(float) 0.0;
				b1216[a]=(float) 0.0;
				b1217[a]=(float) 0.0;
				b1233[a]=(float) 0.0;
				b1234[a]=(float) 0.0;
				b2201[a]=(float) 0.0;
				b2204[a]=(float) 0.0;
				b2206[a]=(float) 0.0;
				b2207[a]=(float) 0.0;
				b2315[a]=(float) 0.0;
				b2353[a]=(float) 0.0;
				b2356[a]=(float) 0.0;
				b2357[a]=(float) 0.0;
				b2377[a]=(float) 0.0;
				
			}

			
			
			 
			 
			 DecimalFormat df=new DecimalFormat("#.####");
			 //----------------------1201-----------------------------------------------------------------------------------------------
						try{
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		   
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		  
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		   
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		  
											    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    	
										 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		   
										    		 
										    		 f1201[0] = Float.valueOf(Ab).floatValue();
										    		 f1201[1] = Float.valueOf(Ac).floatValue();	
										    		 f1201[2] = Float.valueOf(Ad).floatValue();
										    		 f1201[3] = Float.valueOf(Ae).floatValue();
										    		 f1201[4] = Float.valueOf(Af).floatValue();
										    		 f1201[5] = Float.valueOf(Ag).floatValue();
										    		 f1201[6] = Float.valueOf(Ah).floatValue();
										    		 f1201[7] = Float.valueOf(Ai).floatValue();
										    		 f1201[8] = Float.valueOf(Aj).floatValue();
										    		 f1201[9] = Float.valueOf(Ak).floatValue();
						
						
						
						
						
						}catch(Exception a){
									System.out.println("mistake");
									}	
					
						//-------------------------------------1216--------------------------------------------------
						
						try{
						
						
						DocumentBuilderFactory factory = 
					    		DocumentBuilderFactory.newInstance();
				    	   		DocumentBuilder builder =
					    		factory.newDocumentBuilder();
					    		File ff = new File(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					    		Document doc = builder.parse(ff);
					    		
					//------------------------------------Roe----------------------------------------------------------------------
					    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
					    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
					    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
					    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
					    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
					    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
					    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

					    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
					    		 
					    		 

					//------------------------------------Roa----------------------------------------------------------------------    		
					    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
					    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
					    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
					    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
					    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
					    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
					    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
					    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
					    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
					    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
					    		 
					    		 
					    		 
					    		 
					//------------------------------------純益率----------------------------------------------------------------------    		 
					    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
						    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
						    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
						    		  Aa2 = ( noo1-noo2)/noo3;
						    		 
						    		 
						    		 
						    		
						    		 
					//------------------------------------毛益率---------------------------------------------------------------------- 
						    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
							    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
							    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
							    		  Aa3 =goo1/goo2;
							    		 
							    		 
							    		 
							    		
							    		 
					//------------------------------------流動比率----------------------------------------------------------------------
							    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
								    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
								    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
								    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
								    		  Aa4 =cour1/cour2;
								    		 
								    		 
							    		 
								    		 
							    		 
							    		 
					//------------------------------------負債比率----------------------------------------------------------------------
							    		 
								    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
									    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
									    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
									    		  Aa5 = geo1/geo2;
									    		 
									    		 
							    		 
									    		
									    	
							    		 
					//------------------------------------每股淨值---------------------------------------------------------------------- 
							    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
								    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
								    		  Aa6 =boo1;
								    		 
								    		 
								    		 
								    		
						    		 
								    		 
					//------------------------------------存貨週轉率----------------------------------------------------------------------
								    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
									    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
									    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
									    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
									    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
									    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
									    		 
									    		 
								    		 
								    		 

								    		 
								    		 
					//------------------------------------資本週轉率----------------------------------------------------------------------
									    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
										    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

										    		  Aa8 = capo1/capo2;
										    		 
										    		 
									    		  
								    		 
								    		 
										    		
								    		 
								    		 
								    		 
								    		 
					//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
								    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
									    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
									    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
									    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
									    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
									    		 
									    		 
									    		 Ab=df.format(Aa);  
									    		 Ac=df.format(Aa1); 
									    		 Ad=df.format(Aa2); 
									    		 Ae=df.format(Aa3);  
									    		 Af=df.format(Aa4); 
									    		 Ag=df.format(Aa5); 
									    		 Ah=df.format(Aa6);  
									    		 Ai=df.format(Aa7);  
									    		 Aj=df.format(Aa8); 
									    		 Ak=df.format(Aa9); 
						    		 
									    		 
									    		 f1216[0] = Float.valueOf(Ab).floatValue();
									    		 f1216[1] = Float.valueOf(Ac).floatValue();	
									    		 f1216[2] = Float.valueOf(Ad).floatValue();
									    		 f1216[3] = Float.valueOf(Ae).floatValue();
									    		 f1216[4] = Float.valueOf(Af).floatValue();
									    		 f1216[5] = Float.valueOf(Ag).floatValue();
									    		 f1216[6] = Float.valueOf(Ah).floatValue();
									    		 f1216[7] = Float.valueOf(Ai).floatValue();
									    		 f1216[8] = Float.valueOf(Aj).floatValue();
									    		 f1216[9] = Float.valueOf(Ak).floatValue();
					
									    		 
									    	
						 }catch(Exception a){
								System.out.println("mistake");
								}	
					
				//--------------------------------------------1217--------------------------------------------------------------
						try{DocumentBuilderFactory factory = 
			    		DocumentBuilderFactory.newInstance();
		    	   		DocumentBuilder builder =
			    		factory.newDocumentBuilder();
			    		File ff = new File(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
			    		Document doc = builder.parse(ff);
			    		
			//------------------------------------Roe----------------------------------------------------------------------
			    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

			    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		  
			    		 
			    		 
			    		
			    		
			    		
			//------------------------------------Roa----------------------------------------------------------------------    		
			    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		  
			    		 
			    		 
			//------------------------------------純益率----------------------------------------------------------------------    		 
			    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
				    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
				    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
				    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
				    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
				    		  Aa2 = ( noo1-noo2)/noo3;
				    		  
				    		 
				    		 
			//------------------------------------毛益率---------------------------------------------------------------------- 
				    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
					    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
					    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
					    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
					    		  Aa3 =goo1/goo2;
					    		
					    		 
					    		 
					    		 
					    		 
			//------------------------------------流動比率----------------------------------------------------------------------
					    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
						    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
						    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
						    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
						    		  Aa4 =cour1/cour2;
						    		 
						    		 
					    		
					    		 
					    		 
					    		 
					    		 
			//------------------------------------負債比率----------------------------------------------------------------------
					    		 
						    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
							    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
							    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
							    		  Aa5 = geo1/geo2;
							    		 
							    		 
					    		 
					    		 
					    		 
			//------------------------------------每股淨值---------------------------------------------------------------------- 
					    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
						    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
						    		  Aa6 =boo1;
						    		 
						    		 
						    		 
						    		 
						    		 
			//------------------------------------存貨週轉率----------------------------------------------------------------------
						    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
							    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
							    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
							    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
							    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
							    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
							    		 
							    		 
						    		 
						    		 
						    		 
						    		 
						    		 
			//------------------------------------資本週轉率----------------------------------------------------------------------
							    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
								    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

								    		  Aa8 = capo1/capo2;
								    		 
								    		 
							    		  
						    		 
						    		 
						    		 
						    		 
						    		 
						    		 
			//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
						    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
							    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
							    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
							    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
							    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
							    		 
							    		 
							    		 
							    		 
							    		 Ab=df.format(Aa);  
							    		 Ac=df.format(Aa1); 
							    		 Ad=df.format(Aa2); 
							    		 Ae=df.format(Aa3);  
							    		 Af=df.format(Aa4); 
							    		 Ag=df.format(Aa5); 
							    		 Ah=df.format(Aa6);  
							    		 Ai=df.format(Aa7);  
							    		 Aj=df.format(Aa8); 
							    		 Ak=df.format(Aa9); 
				    		 
							    		 f1217[0] = Float.valueOf(Ab).floatValue();
							    		 f1217[1] = Float.valueOf(Ac).floatValue();	
							    		 f1217[2] = Float.valueOf(Ad).floatValue();
							    		 f1217[3] = Float.valueOf(Ae).floatValue();
							    		 f1217[4] = Float.valueOf(Af).floatValue();
							    		 f1217[5] = Float.valueOf(Ag).floatValue();
							    		 f1217[6] = Float.valueOf(Ah).floatValue();
							    		 f1217[7] = Float.valueOf(Ai).floatValue();
							    		 f1217[8] = Float.valueOf(Aj).floatValue();
							    		 f1217[9] = Float.valueOf(Ak).floatValue();
			
							    		
							    		 
							    	
				 }catch(Exception a){
						System.out.println("mistake");
						}	
			
		
						
						//-------------------------------------1233--------------------------------------------------		
						
						
						try{
							
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 

						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
						    		 
						    		 
						//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
							    		 
							    		
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
									    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
										    		
										    	
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		
							    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 

									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
											    		
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 
										    		 
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		 f1233[0] = Float.valueOf(Ab).floatValue();
										    		 f1233[1] = Float.valueOf(Ac).floatValue();	
										    		 f1233[2] = Float.valueOf(Ad).floatValue();
										    		 f1233[3] = Float.valueOf(Ae).floatValue();
										    		 f1233[4] = Float.valueOf(Af).floatValue();
										    		 f1233[5] = Float.valueOf(Ag).floatValue();
										    		 f1233[6] = Float.valueOf(Ah).floatValue();
										    		 f1233[7] = Float.valueOf(Ai).floatValue();
										    		 f1233[8] = Float.valueOf(Aj).floatValue();
										    		 f1233[9] = Float.valueOf(Ak).floatValue();
						
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						
		//-----------------------------------------------1234--------------------------------------------------------				
						try{
							DocumentBuilderFactory factory = 
						
			    		DocumentBuilderFactory.newInstance();
		    	   		DocumentBuilder builder =
			    		factory.newDocumentBuilder();
			    		File ff = new File(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
			    		Document doc = builder.parse(ff);
			    		
			//------------------------------------Roe----------------------------------------------------------------------
			    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

			    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		 
			    		 
			    		
			    		
			    		
			//------------------------------------Roa----------------------------------------------------------------------    		
			    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		 
			    		 
			//------------------------------------純益率----------------------------------------------------------------------    		 
			    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
				    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
				    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
				    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
				    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
				    		  Aa2 = ( noo1-noo2)/noo3;
				    		 
				    		 
			//------------------------------------毛益率---------------------------------------------------------------------- 
				    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
					    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
					    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
					    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
					    		  Aa3 =goo1/goo2;
					    		 
					    		 
					    		 
					    		 
			//------------------------------------流動比率----------------------------------------------------------------------
					    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
						    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
						    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
						    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
						    		  Aa4 =cour1/cour2;
						    		 
						    		 
					    		 
					    		 
					    		 
					    		 
					    		 
			//------------------------------------負債比率----------------------------------------------------------------------
					    		 
						    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
							    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
							    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
							    		  Aa5 = geo1/geo2;
							    		 
							    		 
					    		 
					    		 
					    		 
			//------------------------------------每股淨值---------------------------------------------------------------------- 
					    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
						    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
						    		  Aa6 =boo1;
						    		 
						    		 
						    		 
						    		 
						    		 
			//------------------------------------存貨週轉率----------------------------------------------------------------------
						    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
							    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
							    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
							    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
							    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
							    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
							    		 
							    		 
						    		 
						    		 
						    		 
						    		 
						    		 
			//------------------------------------資本週轉率----------------------------------------------------------------------
							    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
								    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
								    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

								    		  Aa8 = capo1/capo2;
								    		 
								    		 
							    		  
						    		 
						    		 
						    		 
						    		 
						    		 
						    		 
			//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
						    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
							    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
							    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
							    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
							    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
							    		 
							    		 
							    		 
							    		 Ab=df.format(Aa);  
							    		 Ac=df.format(Aa1); 
							    		 Ad=df.format(Aa2); 
							    		 Ae=df.format(Aa3);  
							    		 Af=df.format(Aa4); 
							    		 Ag=df.format(Aa5); 
							    		 Ah=df.format(Aa6);  
							    		 Ai=df.format(Aa7);  
							    		 Aj=df.format(Aa8); 
							    		 Ak=df.format(Aa9); 
				    		 
							    		 f1234[0] = Float.valueOf(Ab).floatValue();
							    		 f1234[1] = Float.valueOf(Ac).floatValue();	
							    		 f1234[2] = Float.valueOf(Ad).floatValue();
							    		 f1234[3] = Float.valueOf(Ae).floatValue();
							    		 f1234[4] = Float.valueOf(Af).floatValue();
							    		 f1234[5] = Float.valueOf(Ag).floatValue();
							    		 f1234[6] = Float.valueOf(Ah).floatValue();
							    		 f1234[7] = Float.valueOf(Ai).floatValue();
							    		 f1234[8] = Float.valueOf(Aj).floatValue();
							    		 f1234[9] = Float.valueOf(Ak).floatValue();
							    		 
							    		 
							    	
				 }catch(Exception a){
						System.out.println("mistake");
						}	
			
	//-------------------------------------2201---------------------------------------------------------------------
						try{
						
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetNotesReceivableRelatedParties");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										       		 car2201[0] = Float.valueOf(Ab).floatValue();
										       		 car2201[1] = Float.valueOf(Ac).floatValue();	
										       		 car2201[2] = Float.valueOf(Ad).floatValue();
										       		 car2201[3] = Float.valueOf(Ae).floatValue();
										       		 car2201[4] = Float.valueOf(Af).floatValue();
										       		 car2201[5] = Float.valueOf(Ag).floatValue();
										       		 car2201[6] = Float.valueOf(Ah).floatValue();
										       		 car2201[7] = Float.valueOf(Ai).floatValue();
										       		 car2201[8] = Float.valueOf(Aj).floatValue();
										       		 car2201[9] = Float.valueOf(Ak).floatValue();
										    		 
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						
						
						//-------------------------------------2204--------------------------------------------------
						
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
						//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		 car2204[0] = Float.valueOf(Ab).floatValue();
										       		 car2204[1] = Float.valueOf(Ac).floatValue();	
										       		 car2204[2] = Float.valueOf(Ad).floatValue();
										       		 car2204[3] = Float.valueOf(Ae).floatValue();
										       		 car2204[4] = Float.valueOf(Af).floatValue();
										       		 car2204[5] = Float.valueOf(Ag).floatValue();
										       		 car2204[6] = Float.valueOf(Ah).floatValue();
										       		 car2204[7] = Float.valueOf(Ai).floatValue();
										       		 car2204[8] = Float.valueOf(Aj).floatValue();
										       		 car2204[9] = Float.valueOf(Ak).floatValue();
										    		  
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						
	//---------------------------------------------2206----------------------------------------------------------------					
						try{
						DocumentBuilderFactory factory = 
					    		DocumentBuilderFactory.newInstance();
				    	   		DocumentBuilder builder =
					    		factory.newDocumentBuilder();
					    		File ff = new File(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					    		Document doc = builder.parse(ff);
					    		
					//------------------------------------Roe----------------------------------------------------------------------
					    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
					    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
					    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
					    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
					    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
					    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
					    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

					    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
					    		 
					    		 
					    		
					    		
					    		
					//------------------------------------Roa----------------------------------------------------------------------    		
					    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
					    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
					    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
					    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
					    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
					    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
					    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
					    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
					    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
					    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
					    		 
					    		 
		    		//------------------------------------純益率----------------------------------------------------------------------    		 
					    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
						    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
						    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
						    		  Aa2 = ( noo1-noo2)/noo3;
						    		 
						    		 
					//------------------------------------毛益率---------------------------------------------------------------------- 
						    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
							    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
							    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
							    		  Aa3 =goo1/goo2;
							    		 
							    		 
							    		 
							    		 
					//------------------------------------流動比率----------------------------------------------------------------------
							    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
								    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
								    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
								    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
								    		  Aa4 =cour1/cour2;
								    		 
								    		 
							    		 
							    		 
							    		 
							    		 
							    		 
					//------------------------------------負債比率----------------------------------------------------------------------
							    		 
								    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
									    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
									    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
									    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
									    		  Aa5 = geo1/geo2;
									    		 
									    		 
							    		 
							    		 
							    		 
					//------------------------------------每股淨值---------------------------------------------------------------------- 
							    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
								    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
								    		  Aa6 =boo1;
								    		 
								    		 
								    		 
								    		 
								    		 
					//------------------------------------存貨週轉率----------------------------------------------------------------------
								    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
									    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
									    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
									    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
									    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
									    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
					//------------------------------------資本週轉率----------------------------------------------------------------------
									    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
										    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

										    		  Aa8 = capo1/capo2;
										    		 
										    		 
									    		  
								    		 
								    		 
								    		 
								    		 
								    		 
								    		 
					//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
								    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
									    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
									    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
									    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
									    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
									    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
									    		 
									    		 
									    		 
									    		 Ab=df.format(Aa);  
									    		 Ac=df.format(Aa1); 
									    		 Ad=df.format(Aa2); 
									    		 Ae=df.format(Aa3);  
									    		 Af=df.format(Aa4); 
									    		 Ag=df.format(Aa5); 
									    		 Ah=df.format(Aa6);  
									    		 Ai=df.format(Aa7);  
									    		 Aj=df.format(Aa8); 
									    		 Ak=df.format(Aa9); 
						    		 
									    		 car2206[0] = Float.valueOf(Ab).floatValue();
									       		 car2206[1] = Float.valueOf(Ac).floatValue();	
									       		 car2206[2] = Float.valueOf(Ad).floatValue();
									       		 car2206[3] = Float.valueOf(Ae).floatValue();
									       		 car2206[4] = Float.valueOf(Af).floatValue();
									       		 car2206[5] = Float.valueOf(Ag).floatValue();
									       		 car2206[6] = Float.valueOf(Ah).floatValue();
									       		 car2206[7] = Float.valueOf(Ai).floatValue();
									       		 car2206[8] = Float.valueOf(Aj).floatValue();
									       		 car2206[9] = Float.valueOf(Ak).floatValue();
									    		   
									    		 
									    	
						 }catch(Exception a){
								System.out.println("mistake");
								}	
					
		//-------------------------------------2207----------------------------------------------------------------------
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		 car2207[0] = Float.valueOf(Ab).floatValue();
										       		 car2207[1] = Float.valueOf(Ac).floatValue();	
										       		 car2207[2] = Float.valueOf(Ad).floatValue();
										       		 car2207[3] = Float.valueOf(Ae).floatValue();
										       		 car2207[4] = Float.valueOf(Af).floatValue();
										       		 car2207[5] = Float.valueOf(Ag).floatValue();
										       		 car2207[6] = Float.valueOf(Ah).floatValue();
										       		 car2207[7] = Float.valueOf(Ai).floatValue();
										       		 car2207[8] = Float.valueOf(Aj).floatValue();
										       		 car2207[9] = Float.valueOf(Ak).floatValue();
										    		 
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						
	//----------------------------------------------2315---------------------------------------------------------------------------
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										       		 co2315[0] = Float.valueOf(Ab).floatValue();
										       		 co2315[1] = Float.valueOf(Ac).floatValue();	
										       		 co2315[2] = Float.valueOf(Ad).floatValue();
										       		 co2315[3] = Float.valueOf(Ae).floatValue();
										       		 co2315[4] = Float.valueOf(Af).floatValue();
										       		 co2315[5] = Float.valueOf(Ag).floatValue();
										       		 co2315[6] = Float.valueOf(Ah).floatValue();
										       		 co2315[7] = Float.valueOf(Ai).floatValue();
										       		 co2315[8] = Float.valueOf(Aj).floatValue();
										       		 co2315[9] = Float.valueOf(Ak).floatValue();
										    		
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						

		//-----------------------------------------2353-----------------------------------------------------	
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		   
										    		 co2353[0] = Float.valueOf(Ab).floatValue();
										       		 co2353[1] = Float.valueOf(Ac).floatValue();	
										       		 co2353[2] = Float.valueOf(Ad).floatValue();
										       		 co2353[3] = Float.valueOf(Ae).floatValue();
										       		 co2353[4] = Float.valueOf(Af).floatValue();
										       		 co2353[5] = Float.valueOf(Ag).floatValue();
										       		 co2353[6] = Float.valueOf(Ah).floatValue();
										       		 co2353[7] = Float.valueOf(Ai).floatValue();
										       		 co2353[8] = Float.valueOf(Aj).floatValue();
										       		 co2353[9] = Float.valueOf(Ak).floatValue();
										    		
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
					
					
						//-------------------------------------2356--------------------------------------------------
						
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		 
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		   
										    		 co2356[0] = Float.valueOf(Ab).floatValue();
										       		 co2356[1] = Float.valueOf(Ac).floatValue();	
										       		 co2356[2] = Float.valueOf(Ad).floatValue();
										       		 co2356[3] = Float.valueOf(Ae).floatValue();
										       		 co2356[4] = Float.valueOf(Af).floatValue();
										       		 co2356[5] = Float.valueOf(Ag).floatValue();
										       		 co2356[6] = Float.valueOf(Ah).floatValue();
										       		 co2356[7] = Float.valueOf(Ai).floatValue();
										       		 co2356[8] = Float.valueOf(Aj).floatValue();
										       		 co2356[9] = Float.valueOf(Ak).floatValue();
										    		
										    		 
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						
				//---------------------------------------------2357----------------------------------------------------------
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		 co2357[0] = Float.valueOf(Ab).floatValue();
										       		 co2357[1] = Float.valueOf(Ac).floatValue();	
										       		 co2357[2] = Float.valueOf(Ad).floatValue();
										       		 co2357[3] = Float.valueOf(Ae).floatValue();
										       		 co2357[4] = Float.valueOf(Af).floatValue();
										       		 co2357[5] = Float.valueOf(Ag).floatValue();
										       		 co2357[6] = Float.valueOf(Ah).floatValue();
										       		 co2357[7] = Float.valueOf(Ai).floatValue();
										       		 co2357[8] = Float.valueOf(Aj).floatValue();
										       		 co2357[9] = Float.valueOf(Ak).floatValue();
										    		
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
						
						//-------------------------------------2377--------------------------------------------------
						
						try{
							
							DocumentBuilderFactory factory = 
						    		DocumentBuilderFactory.newInstance();
					    	   		DocumentBuilder builder =
						    		factory.newDocumentBuilder();
						    		File ff = new File(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
						    		Document doc = builder.parse(ff);
						    		
						//------------------------------------Roe----------------------------------------------------------------------
						    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
						    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
						    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
						    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
						    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

						    		  Aa = (rooe1-rooe2)/((rooe3+rooe4)/2);
						    		 
						    		 
						    		
						    		 
						    		
						//------------------------------------Roa----------------------------------------------------------------------    		
						    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
						    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
						    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
						    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
						    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
						    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
						    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
						    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
						    		  Aa1 = ( ((roo1-roo2)+roo3)/((roo4+roo5)/2));
						    		 
						    		 
			    		//------------------------------------純益率----------------------------------------------------------------------    		 
						    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
							    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
							    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
							    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
							    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
							    		  Aa2 = ( noo1-noo2)/noo3;
							    		 
							    		 
						//------------------------------------毛益率---------------------------------------------------------------------- 
							    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
								    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
								    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
								    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
								    		  Aa3 =goo1/goo2;
								    		 
								    		 
								    		 
								    		 
						//------------------------------------流動比率----------------------------------------------------------------------
								    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
									    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
									    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
									    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
									    		  Aa4 =cour1/cour2;
									    		 
									    		 
								    		 
								    		 
								    		 
								    		 
								    		 
						//------------------------------------負債比率----------------------------------------------------------------------
								    		 
									    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
										    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
										    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
										    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
										    		  Aa5 = geo1/geo2;
										    		 
										    		 
								    		 
								    		 
								    		 
						//------------------------------------每股淨值---------------------------------------------------------------------- 
								    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
									    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
									    		  Aa6 =boo1;
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------存貨週轉率----------------------------------------------------------------------
									    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
										    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
										    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
										    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
										    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
										    		  Aa7 = (lnvo1/((lnvo2+lnvo3)/2));
										    		 
										    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------資本週轉率----------------------------------------------------------------------
										    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
											    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
											    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
											    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

											    		  Aa8 = capo1/capo2;
											    		 
											    		 
										    		  
									    		 
									    		 
									    		 
									    		 
									    		 
									    		 
						//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
									    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
										    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
										    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
										    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
										    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
										    		 Aa9 = (aoo1/((aoo2+aoo3)/2));
										    		 
										    		 
										    		 Ab=df.format(Aa);  
										    		 Ac=df.format(Aa1); 
										    		 Ad=df.format(Aa2); 
										    		 Ae=df.format(Aa3);  
										    		 Af=df.format(Aa4); 
										    		 Ag=df.format(Aa5); 
										    		 Ah=df.format(Aa6);  
										    		 Ai=df.format(Aa7);  
										    		 Aj=df.format(Aa8); 
										    		 Ak=df.format(Aa9); 
							    		 
										    		 co2377[0] = Float.valueOf(Ab).floatValue();
										       		 co2377[1] = Float.valueOf(Ac).floatValue();	
										       		 co2377[2] = Float.valueOf(Ad).floatValue();
										       		 co2377[3] = Float.valueOf(Ae).floatValue();
										       		 co2377[4] = Float.valueOf(Af).floatValue();
										       		 co2377[5] = Float.valueOf(Ag).floatValue();
										       		 co2377[6] = Float.valueOf(Ah).floatValue();
										       		 co2377[7] = Float.valueOf(Ai).floatValue();
										       		 co2377[8] = Float.valueOf(Aj).floatValue();
										       		 co2377[9] = Float.valueOf(Ak).floatValue();
										    		
										    		 
										    	
							 }catch(Exception a){
									System.out.println("mistake");
									}	
		  
		  
		  //結束


		
	//--------------------------------------jlist1---------------------------------------
					 	jlist1.addListSelectionListener(new ListSelectionListener(){
					 	 public void valueChanged(ListSelectionEvent e) {
					 		 
					 		 
					 		for(int i=0;i<Acom1.length;i++){
								Acom1[i]=-1;
								
							}
					 		 
					 		 
					 	    StringWriter sw = new StringWriter();
					 	    PrintWriter pw = new PrintWriter(sw);
					 	    
//					 	    pw.println("第一個索引值: " + e.getFirstIndex() + ", 最後一個索引值: " + e.getLastIndex());
					 	    
					 	    // 判斷此事件是否為多個不同更改事件之一
					 	    boolean adjust = e.getValueIsAdjusting();
					 	    
					 	    if (!adjust) {
					 	      JList source = (JList)e.getSource();
					 	      
					 	      // 取得被選取項目的索引值
					 	      int selections[] = source.getSelectedIndices();
					 	      // 取得已被選取的項目
					 	      Object selectionValues[] = source.getSelectedValues();
					 	      
					 	      for (int i=0, n=selections.length; i<n; i++) {
					 	        if (i==0) {
					 	          pw.print("  選取項目: ");
					 	        }
					 	        pw.print(selections[i] + "(" + selectionValues[i] + ") ");
					 	        
					 	        	Acom1[i]=selections[i];	
//					 	        	
					 	       
					 	        
					 	      }
					 	      pw.println();
					 	      
					 	    }
					 	  // System.out.println(sw.toString());
					 	   
					 	  }	
					 	});
			 
	//--------------------------------------------reload-------------------------------------------				
						Areload.addActionListener(new ActionListener(){
							public void actionPerformed(ActionEvent a){
								jlist1.setSelectionInterval(14, 14);
								
								
								if(pane.isVisible()==true){
									pane.setVisible(false);
								}
								  
								
								Object[] clomnName = {"公司名稱","評比分數"};
								//初始化TableModel，使用數據data，列名clomnName
										
								
								model = new DefaultTableModel(data, clomnName);
								
								//使用上面的model作??數初始化JTabel
								table = new JTable(model);
								//初始化JScrollPane
								pane = new JScrollPane();
								//將table添加到JScrollPane上 這裏使用下面的第一種方法不能添加
								//使用第一個先獲得JViewPort對象，然後再添加
								//pane.add(table);
								pane.getViewport().add(table);
								pane.setBounds(630, 12, 300, 247);
								pane.setVisible(true);
								panels[5].add(pane);
							    
								for(int i=0;i<jslider.length;i++){
							        jslider[i].setValue(2);
								}
								
							}
						});		 
			 
			 
	//--------------------------------------start按鈕------------------------------------------------------
			 	
		 	 Astart.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){
						
						
						
						
						
					try{
						for(int c=0;c<Acom1.length;c++){
							try{
							if(!(Acom1[c]==-1)){
								if(Acom1[c]==0){
									float food = f1201[0]*(jslider[0].getValue()+1);
									float food1 = f1201[1]*(jslider[1].getValue()+1);
									float food2 = f1201[2]*(jslider[2].getValue()+1);
									float food3 = f1201[3]*(jslider[3].getValue()+1);
									float food4= f1201[4]*(jslider[4].getValue()+1);
									float food5 = f1201[5]*((jslider[5].getValue()+1)*-1);
									float food6 = f1201[6]*(jslider[6].getValue()+1);
									float food7 = f1201[7]*(jslider[7].getValue()+1);
									float food8 = f1201[8]*(jslider[8].getValue()+1);
									float food9 = f1201[9]*(jslider[9].getValue()+1);
									 food0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
									 name[0]=Acomm1[0];
									 sou[0]=food0;
									System.out.println(food0);
									
									b1201[0]=food;
									b1201[1]=food1;
									b1201[2]=food2;
									b1201[3]=food3;
									b1201[4]=food4;
									b1201[5]=food5;
									b1201[6]=food6;
									b1201[7]=food7;
									b1201[8]=food8;
									b1201[9]=food9;
									
									
									
								}
								
								if(Acom1[c]==1){
									float food11 = f1216[0]*(jslider[0].getValue()+1);
									float food12 = f1216[1]*(jslider[1].getValue()+1);
									float food13 = f1216[2]*(jslider[2].getValue()+1);
									float food14 = f1216[3]*(jslider[3].getValue()+1);
									float food15 = f1216[4]*(jslider[4].getValue()+1);
									float food16 = f1216[5]*((jslider[5].getValue()+1)*-1);
									float food17 = f1216[6]*(jslider[6].getValue()+1);
									float food18 = f1216[7]*(jslider[7].getValue()+1);
									float food19 = f1216[8]*(jslider[8].getValue()+1);
									float food20 = f1216[9]*(jslider[9].getValue()+1);
									 food1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
									 name[1]=Acomm1[1];
									 sou[1]=food1;
									 System.out.println(food1);
									
									 b1216[0]=food11;
									 b1216[1]=food12;
									 b1216[2]=food13;
									 b1216[3]=food14;
									 b1216[4]=food15;
									 b1216[5]=food16;
									 b1216[6]=food17;
									 b1216[7]=food18;
									 b1216[8]=food19;
									 b1216[9]=food20;
									
								}
								if(Acom1[c]==2){
									float food22 = f1217[0]*(jslider[0].getValue()+1);
									float food23 = f1217[1]*(jslider[1].getValue()+1);
									float food24 = f1217[2]*(jslider[2].getValue()+1);
									float food25 = f1217[3]*(jslider[3].getValue()+1);
									float food26 = f1217[4]*(jslider[4].getValue()+1);
									float food27 = f1217[5]*((jslider[5].getValue()+1)*-1);
									float food28 = f1217[6]*(jslider[6].getValue()+1);
									float food29 = f1217[7]*(jslider[7].getValue()+1);
									float food30 = f1217[8]*(jslider[8].getValue()+1);
									float food31 = f1217[9]*(jslider[9].getValue()+1);
									 food2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
									 name[2]=Acomm1[2];
									 sou[2]=food2;
									 System.out.println(food2);
									 
									 b1217[0]=food22;
									 b1217[1]=food23;
									 b1217[2]=food24;
									 b1217[3]=food25;
									 b1217[4]=food26;
									 b1217[5]=food27;
									 b1217[6]=food28;
									 b1217[7]=food29;
									 b1217[8]=food30;
									 b1217[9]=food31;
								}
								if(Acom1[c]==3){
									float food33 = f1233[0]*(jslider[0].getValue()+1);
									float food34 = f1233[1]*(jslider[1].getValue()+1);
									float food35 = f1233[2]*(jslider[2].getValue()+1);
									float food36 = f1233[3]*(jslider[3].getValue()+1);
									float food37 = f1233[4]*(jslider[4].getValue()+1);
									float food38 = f1233[5]*((jslider[5].getValue()+1)*-1);
									float food39 = f1233[6]*(jslider[6].getValue()+1);
									float food40 = f1233[7]*(jslider[7].getValue()+1);
									float food41 = f1233[8]*(jslider[8].getValue()+1);
									float food42 = f1233[9]*(jslider[9].getValue()+1);
									 food3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									 name[3]=Acomm1[3];
									 sou[3]=food3;
									 System.out.println(food3);
									 
									 b1233[0]=food33;
									 b1233[1]=food34;
									 b1233[2]=food35;
									 b1233[3]=food36;
									 b1233[4]=food37;
									 b1233[5]=food38;
									 b1233[6]=food39;
									 b1233[7]=food40;
									 b1233[8]=food41;
									 b1233[9]=food42;
								}
								if(Acom1[c]==4){
									float food44 = f1234[0]*(jslider[0].getValue()+1);
									float food45 = f1234[1]*(jslider[1].getValue()+1);
									float food46 = f1234[2]*(jslider[2].getValue()+1);
									float food47 = f1234[3]*(jslider[3].getValue()+1);
									float food48 = f1234[4]*(jslider[4].getValue()+1);
									float food49 = f1234[5]*((jslider[5].getValue()+1)*-1);
									float food50 = f1234[6]*(jslider[6].getValue()+1);
									float food51 = f1234[7]*(jslider[7].getValue()+1);
									float food52 = f1234[8]*(jslider[8].getValue()+1);
									float food53 = f1234[9]*(jslider[9].getValue()+1);
									 food4 = (food44+food45+food46+food47+food48+food49+food50+food51+food52+food53)/10;
									 name[4]=Acomm1[4];
									 sou[4]=food4;
									 System.out.println(food4);
									 
									 b1234[0]=food44;
									 b1234[1]=food45;
									 b1234[2]=food46;
									 b1234[3]=food47;
									 b1234[4]=food48;
									 b1234[5]=food49;
									 b1234[6]=food50;
									 b1234[7]=food51;
									 b1234[8]=food52;
									 b1234[9]=food53;
								}
								
							}
							} catch (Exception e) {
						         
						    }
						}
						
						
						for(int c=0;c<Acom1.length;c++){
							if(!(Acom1[c]==-1)){
								if(Acom1[c]==5){
									float food = car2201[0]*(jslider[0].getValue()+1);
									float food1 = car2201[1]*(jslider[1].getValue()+1);
									float food2 = car2201[2]*(jslider[2].getValue()+1);
									float food3 = car2201[3]*(jslider[3].getValue()+1);
									float food4= car2201[4]*(jslider[4].getValue()+1);
									float food5 = car2201[5]*((jslider[5].getValue()+1)*-1);
									float food6 = car2201[6]*(jslider[6].getValue()+1);
									float food7 = car2201[7]*(jslider[7].getValue()+1);
									float food8 = car2201[8]*(jslider[8].getValue()+1);
									float food9 = car2201[9]*(jslider[9].getValue()+1);
									 car0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
									 name[5]=Acomm1[5];
									 sou[5]=car0;
									 System.out.println(car0);
									 
										b2201[0]=food;
										b2201[1]=food1;
										b2201[2]=food2;
										b2201[3]=food3;
										b2201[4]=food4;
										b2201[5]=food5;
										b2201[6]=food6;
										b2201[7]=food7;
										b2201[8]=food8;
										b2201[9]=food9;
								}
								if(Acom1[c]==6){
									float food11 = car2204[0]*(jslider[0].getValue()+1);
									float food12 = car2204[1]*(jslider[1].getValue()+1);
									float food13 = car2204[2]*(jslider[2].getValue()+1);
									float food14 = car2204[3]*(jslider[3].getValue()+1);
									float food15 = car2204[4]*(jslider[4].getValue()+1);
									float food16 = car2204[5]*((jslider[5].getValue()+1)*-1);
									float food17 = car2204[6]*(jslider[6].getValue()+1);
									float food18 = car2204[7]*(jslider[7].getValue()+1);
									float food19 = car2204[8]*(jslider[8].getValue()+1);
									float food20 = car2204[9]*(jslider[9].getValue()+1);
									 car1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
									 name[6]=Acomm1[6];
									 sou[6]=car1;
									 System.out.println(car1);
									 
									 b2204[0]=food11;
									 b2204[1]=food12;
									 b2204[2]=food13;
									 b2204[3]=food14;
									 b2204[4]=food15;
									 b2204[5]=food16;
									 b2204[6]=food17;
									 b2204[7]=food18;
									 b2204[8]=food19;
									 b2204[9]=food20;
									
									
								}
								if(Acom1[c]==7){
									float food22 = car2206[0]*(jslider[0].getValue()+1);
									float food23 = car2206[1]*(jslider[1].getValue()+1);
									float food24 = car2206[2]*(jslider[2].getValue()+1);
									float food25 = car2206[3]*(jslider[3].getValue()+1);
									float food26 = car2206[4]*(jslider[4].getValue()+1);
									float food27 = car2206[5]*((jslider[5].getValue()+1)*-1);
									float food28 = car2206[6]*(jslider[6].getValue()+1);
									float food29 = car2206[7]*(jslider[7].getValue()+1);
									float food30 = car2206[8]*(jslider[8].getValue()+1);
									float food31 = car2206[9]*(jslider[9].getValue()+1);
									 car2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
									 name[7]=Acomm1[7];
									 sou[7]=car2;
									 System.out.println(car2);
									 
									 b2206[0]=food22;
									 b2206[1]=food23;
									 b2206[2]=food24;
									 b2206[3]=food25;
									 b2206[4]=food26;
									 b2206[5]=food27;
									 b2206[6]=food28;
									 b2206[7]=food29;
									 b2206[8]=food30;
									 b2206[9]=food31;
								}
								if(Acom1[c]==8){
									float food33 = car2207[0]*(jslider[0].getValue()+1);
									float food34 = car2207[1]*(jslider[1].getValue()+1);
									float food35 = car2207[2]*(jslider[2].getValue()+1);
									float food36 = car2207[3]*(jslider[3].getValue()+1);
									float food37 = car2207[4]*(jslider[4].getValue()+1);
									float food38 = car2207[5]*((jslider[5].getValue()+1)*-1);
									float food39 = car2207[6]*(jslider[6].getValue()+1);
									float food40 = car2207[7]*(jslider[7].getValue()+1);
									float food41 = car2207[8]*(jslider[8].getValue()+1);
									float food42 = car2207[9]*(jslider[9].getValue()+1);
									car3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									name[8]=Acomm1[8];
									sou[8]=car3;
									System.out.println(car3);
									
									b2207[0]=food33;
									 b2207[1]=food34;
									 b2207[2]=food35;
									 b2207[3]=food36;
									 b2207[4]=food37;
									 b2207[5]=food38;
									 b2207[6]=food39;
									 b2207[7]=food40;
									 b2207[8]=food41;
									 b2207[9]=food42;
								}
							}
						}
				
						for(int c=0;c<Acom1.length;c++){
							if(!(Acom1[c]==-1)){
								if(Acom1[c]==9){
									float food = co2315[0]*(jslider[0].getValue()+1);
									float food1 = co2315[1]*(jslider[1].getValue()+1);
									float food2 = co2315[2]*(jslider[2].getValue()+1);
									float food3 = co2315[3]*(jslider[3].getValue()+1);
									float food4= co2315[4]*(jslider[4].getValue()+1);
									float food5 = co2315[5]*((jslider[5].getValue()+1)*-1);
									float food6 = co2315[6]*(jslider[6].getValue()+1);
									float food7 = co2315[7]*(jslider[7].getValue()+1);
									float food8 = co2315[8]*(jslider[8].getValue()+1);
									float food9 = co2315[9]*(jslider[9].getValue()+1);
									 coo0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
									 name[9]=Acomm1[9];
									 sou[9]=coo0;
									 System.out.println(coo0);
									 
										b2315[0]=food;
										b2315[1]=food1;
										b2315[2]=food2;
										b2315[3]=food3;
										b2315[4]=food4;
										b2315[5]=food5;
										b2315[6]=food6;
										b2315[7]=food7;
										b2315[8]=food8;
										b2315[9]=food9;
								}
								if(Acom1[c]==10){
									float food11 = co2353[0]*(jslider[0].getValue()+1);
									float food12 = co2353[1]*(jslider[1].getValue()+1);
									float food13 = co2353[2]*(jslider[2].getValue()+1);
									float food14 = co2353[3]*(jslider[3].getValue()+1);
									float food15 = co2353[4]*(jslider[4].getValue()+1);
									float food16 = co2353[5]*((jslider[5].getValue()+1)*-1);
									float food17 = co2353[6]*(jslider[6].getValue()+1);
									float food18 = co2353[7]*(jslider[7].getValue()+1);
									float food19 = co2353[8]*(jslider[8].getValue()+1);
									float food20 = co2353[9]*(jslider[9].getValue()+1);
									 coo1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
									 name[10]=Acomm1[10];
									 sou[10]=coo1;
									 System.out.println(coo1);
									
									 b2353[0]=food11;
									 b2353[1]=food12;
									 b2353[2]=food13;
									 b2353[3]=food14;
									 b2353[4]=food15;
									 b2353[5]=food16;
									 b2353[6]=food17;
									 b2353[7]=food18;
									 b2353[8]=food19;
									 b2353[9]=food20;
									
								}
								if(Acom1[c]==11){
									float food22 = co2356[0]*(jslider[0].getValue()+1);
									float food23 = co2356[1]*(jslider[1].getValue()+1);
									float food24 = co2356[2]*(jslider[2].getValue()+1);
									float food25 = co2356[3]*(jslider[3].getValue()+1);
									float food26 = co2356[4]*(jslider[4].getValue()+1);
									float food27 = co2356[5]*((jslider[5].getValue()+1)*-1);
									float food28 = co2356[6]*(jslider[6].getValue()+1);
									float food29 = co2356[7]*(jslider[7].getValue()+1);
									float food30 = co2356[8]*(jslider[8].getValue()+1);
									float food31 = co2356[9]*(jslider[9].getValue()+1);
									 coo2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
									 name[11]=Acomm1[11];
									 sou[11]=coo2;
									 System.out.println(coo2);
									 
									 b2356[0]=food22;
									 b2356[1]=food23;
									 b2356[2]=food24;
									 b2356[3]=food25;
									 b2356[4]=food26;
									 b2356[5]=food27;
									 b2356[6]=food28;
									 b2356[7]=food29;
									 b2356[8]=food30;
									 b2356[9]=food31;
								}
								if(Acom1[c]==12){
									float food33 = co2357[0]*(jslider[0].getValue()+1);
									float food34 = co2357[1]*(jslider[1].getValue()+1);
									float food35 = co2357[2]*(jslider[2].getValue()+1);
									float food36 = co2357[3]*(jslider[3].getValue()+1);
									float food37 = co2357[4]*(jslider[4].getValue()+1);
									float food38 = co2357[5]*((jslider[5].getValue()+1)*-1);
									float food39 = co2357[6]*(jslider[6].getValue()+1);
									float food40 = co2357[7]*(jslider[7].getValue()+1);
									float food41 = co2357[8]*(jslider[8].getValue()+1);
									float food42 = co2357[9]*(jslider[9].getValue()+1);
									coo3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									name[12]=Acomm1[12];
									sou[12]=coo3;
									System.out.println(coo3);
									
									b2357[0]=food33;
									 b2357[1]=food34;
									 b2357[2]=food35;
									 b2357[3]=food36;
									 b2357[4]=food37;
									 b2357[5]=food38;
									 b2357[6]=food39;
									 b2357[7]=food40;
									 b2357[8]=food41;
									 b2357[9]=food42;
								}
								if(Acom1[c]==13){
									float food33 = co2377[0]*(jslider[0].getValue()+1);
									float food34 = co2377[1]*(jslider[1].getValue()+1);
									float food35 = co2377[2]*(jslider[2].getValue()+1);
									float food36 = co2377[3]*(jslider[3].getValue()+1);
									float food37 = co2377[4]*(jslider[4].getValue()+1);
									float food38 = co2377[5]*((jslider[5].getValue()+1)*-1);
									float food39 = co2377[6]*(jslider[6].getValue()+1);
									float food40 = co2377[7]*(jslider[7].getValue()+1);
									float food41 = co2377[8]*(jslider[8].getValue()+1);
									float food42 = co2377[9]*(jslider[9].getValue()+1);
									coo4 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									name[13]=Acomm1[13];
									sou[13]=coo4;
									System.out.println(coo4);
									
									b2377[0]=food33;
									 b2377[1]=food34;
									 b2377[2]=food35;
									 b2377[3]=food36;
									 b2377[4]=food37;
									 b2377[5]=food38;
									 b2377[6]=food39;
									 b2377[7]=food40;
									 b2377[8]=food41;
									 b2377[9]=food42;
								}

								
							}
							
						}
					} catch (Exception e) {
					         
					    }

	//------------------------------------------------寫 EXCEL-------------------------------------------		
						
						 
						
						 try

						 {			            
							 
							 int l=1;

			      	 String imaa[] = {"公司","Total"};
			      	 
			               WritableWorkbook workbook = Workbook.createWorkbook(new File(".//TWAMPd//htdocs//conversion//Id.xls"));

			               WritableSheet sheet = workbook.createSheet("First Sheet", 0);  //工作表名稱

			               
			               WritableCellFormat cellFormat1 = new WritableCellFormat ();
			               for(int x=0;x<imaa.length;x++){
				              	 for(int k=0;k<=0;k++){
				              		  Label label = new Label(x, k, imaa[x], cellFormat1);
				              		  sheet.addCell(label);
				              	 }
				               }
			               
			               
			            	   
			               for(int k=0;k<=0;k++){
			            		   for(int x=0;x<name.length;x++){
			            			   if(!(name[x]=="")){
			            				   if(l==1){
			            			   Label label1 = new Label(k, l, name[x], cellFormat1);
			            			   sheet.addCell(label1);
			            			   l++;
			            			   		}else if(l==2){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			  l++;
			            			   		}else if(l==3){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==4){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==5){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==6){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==7){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==8){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==9){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==10){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==11){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==12){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==13){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==14){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}
					              	 	}   
			            	   		}
			               		}
			               
			               l=1;
			               
			               for(int k=1;k<=1;k++){
		            		   for(int x=0;x<sou.length;x++){
		            			   if(!(sou[x]==0.0)){
		            				   if(l==1){
		            					   jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
				      	              		  l++;
		            			   		}else if(l==2){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			  l++;
		            			   		}else if(l==3){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==4){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==5){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==6){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==7){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==8){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==9){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==10){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==11){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==12){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==13){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==14){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}
				              	 	}   
		            	   		}
		               		}
//			               jxl.write.Number number = new jxl.write.Number(2, 10, 20);        //第幾列第幾行輸入什麼值

//			              sheet.addCell(number);      //寫入到工作表去
			               
			                

			              workbook.write();   //寫入
			              workbook.close();   //關閉

			              for(int aa=0;aa<sou.length;aa++){
			            	 if(!(sou[aa]==0.0)){
			            		 System.out.println();
			            		 System.out.println(sou[aa]);
			            	 }
			              }
			              
			              for(int aa=0;aa<name.length;aa++){
			            	  System.out.println(name[aa]);
			              }
			              

			              tmap = new TreeMap<>();
						for(int y=0;y<sou.length;y++){
							tmap.put(sou[y],name[y]);
						}
						
						System.out.println("-----------"+tmap);
			              
			              table();
			 
			              

						 
						      
			              
			              for(int ff=0;ff<b1217.length;ff++){
				      			b1201[ff]=(float) 0.0;
				      			b1216[ff]=(float) 0.0;
				      			b1217[ff]=(float) 0.0;
				      			b1233[ff]=(float) 0.0;
				      			b1234[ff]=(float) 0.0;
				      			b2201[ff]=(float) 0.0;
				      			b2204[ff]=(float) 0.0;
				      			b2206[ff]=(float) 0.0;
				      			b2207[ff]=(float) 0.0;
				      			b2315[ff]=(float) 0.0;
				      			b2353[ff]=(float) 0.0;
				      			b2356[ff]=(float) 0.0;
				      			b2357[ff]=(float) 0.0;
				      			b2377[ff]=(float) 0.0;
				      			
				      		}
			              
			              for(int aa=0;aa<sou.length;aa++){
			            	 if(!(sou[aa]==0.0)){
			            		 System.out.println();
			            		 System.out.println(sou[aa]);
			            	 }
			              }
			              
			              for(int aa=0;aa<name.length;aa++){
			            	  System.out.println(name[aa]);
			              }
			              
			          
			              
			              for(int aa=0;aa<name.length;aa++){
			            	 name[aa]="";
			            	 sou[aa]=0;
			              }
			              
			              for(int o=0;0<=13;o++){
			            	  for(int p=0;p<=1;p++){
			            		  data[o][p]=null;
			            	  }
			              }
			              
			          
			              
			              
			       

					}catch(IOException w)

			       {

			        //       System.out.println(a.toString());   

			       }

			       catch(Exception w)

			       {

			        //       System.out.println(a.toString());   
			               

			       }	 
						 
					

						 
							     
			              
			       

					
			        //       System.out.println(a.toString());   

						 
						 
						 
					}
				
			});
		 	 
		 	//--------------------------------------Bub按鈕------------------------------------------------------
			 	
		 	 Bub.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){
						
						
						
					try{
						for(int c=0;c<Acom1.length;c++){
							try{
							if(!(Acom1[c]==-1)){
								if(Acom1[c]==0){
									float food = f1201[0]*(jslider[0].getValue()+1);
									float food1 = f1201[1]*(jslider[1].getValue()+1);
									float food2 = f1201[2]*(jslider[2].getValue()+1);
									float food3 = f1201[3]*(jslider[3].getValue()+1);
									float food4= f1201[4]*(jslider[4].getValue()+1);
									float food5 = f1201[5]*((jslider[5].getValue()+1)*-1);
									float food6 = f1201[6]*(jslider[6].getValue()+1);
									float food7 = f1201[7]*(jslider[7].getValue()+1);
									float food8 = f1201[8]*(jslider[8].getValue()+1);
									float food9 = f1201[9]*(jslider[9].getValue()+1);
									 food0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
									 name[0]=Acomm1[0];
									 sou[0]=food0;
									System.out.println(food0);
									
									b1201[0]=food;
									b1201[1]=food1;
									b1201[2]=food2;
									b1201[3]=food3;
									b1201[4]=food4;
									b1201[5]=food5;
									b1201[6]=food6;
									b1201[7]=food7;
									b1201[8]=food8;
									b1201[9]=food9;
									
									
									
								}
								
								if(Acom1[c]==1){
									float food11 = f1216[0]*(jslider[0].getValue()+1);
									float food12 = f1216[1]*(jslider[1].getValue()+1);
									float food13 = f1216[2]*(jslider[2].getValue()+1);
									float food14 = f1216[3]*(jslider[3].getValue()+1);
									float food15 = f1216[4]*(jslider[4].getValue()+1);
									float food16 = f1216[5]*((jslider[5].getValue()+1)*-1);
									float food17 = f1216[6]*(jslider[6].getValue()+1);
									float food18 = f1216[7]*(jslider[7].getValue()+1);
									float food19 = f1216[8]*(jslider[8].getValue()+1);
									float food20 = f1216[9]*(jslider[9].getValue()+1);
									 food1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
									 name[1]=Acomm1[1];
									 sou[1]=food1;
									 System.out.println(food1);
									
									 b1216[0]=food11;
									 b1216[1]=food12;
									 b1216[2]=food13;
									 b1216[3]=food14;
									 b1216[4]=food15;
									 b1216[5]=food16;
									 b1216[6]=food17;
									 b1216[7]=food18;
									 b1216[8]=food19;
									 b1216[9]=food20;
									
								}
								if(Acom1[c]==2){
									float food22 = f1217[0]*(jslider[0].getValue()+1);
									float food23 = f1217[1]*(jslider[1].getValue()+1);
									float food24 = f1217[2]*(jslider[2].getValue()+1);
									float food25 = f1217[3]*(jslider[3].getValue()+1);
									float food26 = f1217[4]*(jslider[4].getValue()+1);
									float food27 = f1217[5]*((jslider[5].getValue()+1)*-1);
									float food28 = f1217[6]*(jslider[6].getValue()+1);
									float food29 = f1217[7]*(jslider[7].getValue()+1);
									float food30 = f1217[8]*(jslider[8].getValue()+1);
									float food31 = f1217[9]*(jslider[9].getValue()+1);
									 food2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
									 name[2]=Acomm1[2];
									 sou[2]=food2;
									 System.out.println(food2);
									 
									 b1217[0]=food22;
									 b1217[1]=food23;
									 b1217[2]=food24;
									 b1217[3]=food25;
									 b1217[4]=food26;
									 b1217[5]=food27;
									 b1217[6]=food28;
									 b1217[7]=food29;
									 b1217[8]=food30;
									 b1217[9]=food31;
								}
								if(Acom1[c]==3){
									float food33 = f1233[0]*(jslider[0].getValue()+1);
									float food34 = f1233[1]*(jslider[1].getValue()+1);
									float food35 = f1233[2]*(jslider[2].getValue()+1);
									float food36 = f1233[3]*(jslider[3].getValue()+1);
									float food37 = f1233[4]*(jslider[4].getValue()+1);
									float food38 = f1233[5]*((jslider[5].getValue()+1)*-1);
									float food39 = f1233[6]*(jslider[6].getValue()+1);
									float food40 = f1233[7]*(jslider[7].getValue()+1);
									float food41 = f1233[8]*(jslider[8].getValue()+1);
									float food42 = f1233[9]*(jslider[9].getValue()+1);
									 food3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									 name[3]=Acomm1[3];
									 sou[3]=food3;
									 System.out.println(food3);
									 
									 b1233[0]=food33;
									 b1233[1]=food34;
									 b1233[2]=food35;
									 b1233[3]=food36;
									 b1233[4]=food37;
									 b1233[5]=food38;
									 b1233[6]=food39;
									 b1233[7]=food40;
									 b1233[8]=food41;
									 b1233[9]=food42;
								}
								if(Acom1[c]==4){
									float food44 = f1234[0]*(jslider[0].getValue()+1);
									float food45 = f1234[1]*(jslider[1].getValue()+1);
									float food46 = f1234[2]*(jslider[2].getValue()+1);
									float food47 = f1234[3]*(jslider[3].getValue()+1);
									float food48 = f1234[4]*(jslider[4].getValue()+1);
									float food49 = f1234[5]*((jslider[5].getValue()+1)*-1);
									float food50 = f1234[6]*(jslider[6].getValue()+1);
									float food51 = f1234[7]*(jslider[7].getValue()+1);
									float food52 = f1234[8]*(jslider[8].getValue()+1);
									float food53 = f1234[9]*(jslider[9].getValue()+1);
									 food4 = (food44+food45+food46+food47+food48+food49+food50+food51+food52+food53)/10;
									 name[4]=Acomm1[4];
									 sou[4]=food4;
									 System.out.println(food4);
									 
									 b1234[0]=food44;
									 b1234[1]=food45;
									 b1234[2]=food46;
									 b1234[3]=food47;
									 b1234[4]=food48;
									 b1234[5]=food49;
									 b1234[6]=food50;
									 b1234[7]=food51;
									 b1234[8]=food52;
									 b1234[9]=food53;
								}
								
							}
							} catch (Exception e) {
						         
						    }
						}
						
						
						for(int c=0;c<Acom1.length;c++){
							if(!(Acom1[c]==-1)){
								if(Acom1[c]==5){
									float food = car2201[0]*(jslider[0].getValue()+1);
									float food1 = car2201[1]*(jslider[1].getValue()+1);
									float food2 = car2201[2]*(jslider[2].getValue()+1);
									float food3 = car2201[3]*(jslider[3].getValue()+1);
									float food4= car2201[4]*(jslider[4].getValue()+1);
									float food5 = car2201[5]*((jslider[5].getValue()+1)*-1);
									float food6 = car2201[6]*(jslider[6].getValue()+1);
									float food7 = car2201[7]*(jslider[7].getValue()+1);
									float food8 = car2201[8]*(jslider[8].getValue()+1);
									float food9 = car2201[9]*(jslider[9].getValue()+1);
									 car0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
									 name[5]=Acomm1[5];
									 sou[5]=car0;
									 System.out.println(car0);
									 
										b2201[0]=food;
										b2201[1]=food1;
										b2201[2]=food2;
										b2201[3]=food3;
										b2201[4]=food4;
										b2201[5]=food5;
										b2201[6]=food6;
										b2201[7]=food7;
										b2201[8]=food8;
										b2201[9]=food9;
								}
								if(Acom1[c]==6){
									float food11 = car2204[0]*(jslider[0].getValue()+1);
									float food12 = car2204[1]*(jslider[1].getValue()+1);
									float food13 = car2204[2]*(jslider[2].getValue()+1);
									float food14 = car2204[3]*(jslider[3].getValue()+1);
									float food15 = car2204[4]*(jslider[4].getValue()+1);
									float food16 = car2204[5]*((jslider[5].getValue()+1)*-1);
									float food17 = car2204[6]*(jslider[6].getValue()+1);
									float food18 = car2204[7]*(jslider[7].getValue()+1);
									float food19 = car2204[8]*(jslider[8].getValue()+1);
									float food20 = car2204[9]*(jslider[9].getValue()+1);
									 car1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
									 name[6]=Acomm1[6];
									 sou[6]=car1;
									 System.out.println(car1);
									 
									 b2204[0]=food11;
									 b2204[1]=food12;
									 b2204[2]=food13;
									 b2204[3]=food14;
									 b2204[4]=food15;
									 b2204[5]=food16;
									 b2204[6]=food17;
									 b2204[7]=food18;
									 b2204[8]=food19;
									 b2204[9]=food20;
									
									
								}
								if(Acom1[c]==7){
									float food22 = car2206[0]*(jslider[0].getValue()+1);
									float food23 = car2206[1]*(jslider[1].getValue()+1);
									float food24 = car2206[2]*(jslider[2].getValue()+1);
									float food25 = car2206[3]*(jslider[3].getValue()+1);
									float food26 = car2206[4]*(jslider[4].getValue()+1);
									float food27 = car2206[5]*((jslider[5].getValue()+1)*-1);
									float food28 = car2206[6]*(jslider[6].getValue()+1);
									float food29 = car2206[7]*(jslider[7].getValue()+1);
									float food30 = car2206[8]*(jslider[8].getValue()+1);
									float food31 = car2206[9]*(jslider[9].getValue()+1);
									 car2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
									 name[7]=Acomm1[7];
									 sou[7]=car2;
									 System.out.println(car2);
									 
									 b2206[0]=food22;
									 b2206[1]=food23;
									 b2206[2]=food24;
									 b2206[3]=food25;
									 b2206[4]=food26;
									 b2206[5]=food27;
									 b2206[6]=food28;
									 b2206[7]=food29;
									 b2206[8]=food30;
									 b2206[9]=food31;
								}
								if(Acom1[c]==8){
									float food33 = car2207[0]*(jslider[0].getValue()+1);
									float food34 = car2207[1]*(jslider[1].getValue()+1);
									float food35 = car2207[2]*(jslider[2].getValue()+1);
									float food36 = car2207[3]*(jslider[3].getValue()+1);
									float food37 = car2207[4]*(jslider[4].getValue()+1);
									float food38 = car2207[5]*((jslider[5].getValue()+1)*-1);
									float food39 = car2207[6]*(jslider[6].getValue()+1);
									float food40 = car2207[7]*(jslider[7].getValue()+1);
									float food41 = car2207[8]*(jslider[8].getValue()+1);
									float food42 = car2207[9]*(jslider[9].getValue()+1);
									car3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									name[8]=Acomm1[8];
									sou[8]=car3;
									System.out.println(car3);
									
									b2207[0]=food33;
									 b2207[1]=food34;
									 b2207[2]=food35;
									 b2207[3]=food36;
									 b2207[4]=food37;
									 b2207[5]=food38;
									 b2207[6]=food39;
									 b2207[7]=food40;
									 b2207[8]=food41;
									 b2207[9]=food42;
								}
							}
						}
				
						for(int c=0;c<Acom1.length;c++){
							if(!(Acom1[c]==-1)){
								if(Acom1[c]==9){
									float food = co2315[0]*(jslider[0].getValue()+1);
									float food1 = co2315[1]*(jslider[1].getValue()+1);
									float food2 = co2315[2]*(jslider[2].getValue()+1);
									float food3 = co2315[3]*(jslider[3].getValue()+1);
									float food4= co2315[4]*(jslider[4].getValue()+1);
									float food5 = co2315[5]*((jslider[5].getValue()+1)*-1);
									float food6 = co2315[6]*(jslider[6].getValue()+1);
									float food7 = co2315[7]*(jslider[7].getValue()+1);
									float food8 = co2315[8]*(jslider[8].getValue()+1);
									float food9 = co2315[9]*(jslider[9].getValue()+1);
									 coo0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
									 name[9]=Acomm1[9];
									 sou[9]=coo0;
									 System.out.println(coo0);
									 
										b2315[0]=food;
										b2315[1]=food1;
										b2315[2]=food2;
										b2315[3]=food3;
										b2315[4]=food4;
										b2315[5]=food5;
										b2315[6]=food6;
										b2315[7]=food7;
										b2315[8]=food8;
										b2315[9]=food9;
								}
								if(Acom1[c]==10){
									float food11 = co2353[0]*(jslider[0].getValue()+1);
									float food12 = co2353[1]*(jslider[1].getValue()+1);
									float food13 = co2353[2]*(jslider[2].getValue()+1);
									float food14 = co2353[3]*(jslider[3].getValue()+1);
									float food15 = co2353[4]*(jslider[4].getValue()+1);
									float food16 = co2353[5]*((jslider[5].getValue()+1)*-1);
									float food17 = co2353[6]*(jslider[6].getValue()+1);
									float food18 = co2353[7]*(jslider[7].getValue()+1);
									float food19 = co2353[8]*(jslider[8].getValue()+1);
									float food20 = co2353[9]*(jslider[9].getValue()+1);
									 coo1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
									 name[10]=Acomm1[10];
									 sou[10]=coo1;
									 System.out.println(coo1);
									
									 b2353[0]=food11;
									 b2353[1]=food12;
									 b2353[2]=food13;
									 b2353[3]=food14;
									 b2353[4]=food15;
									 b2353[5]=food16;
									 b2353[6]=food17;
									 b2353[7]=food18;
									 b2353[8]=food19;
									 b2353[9]=food20;
									
								}
								if(Acom1[c]==11){
									float food22 = co2356[0]*(jslider[0].getValue()+1);
									float food23 = co2356[1]*(jslider[1].getValue()+1);
									float food24 = co2356[2]*(jslider[2].getValue()+1);
									float food25 = co2356[3]*(jslider[3].getValue()+1);
									float food26 = co2356[4]*(jslider[4].getValue()+1);
									float food27 = co2356[5]*((jslider[5].getValue()+1)*-1);
									float food28 = co2356[6]*(jslider[6].getValue()+1);
									float food29 = co2356[7]*(jslider[7].getValue()+1);
									float food30 = co2356[8]*(jslider[8].getValue()+1);
									float food31 = co2356[9]*(jslider[9].getValue()+1);
									 coo2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
									 name[11]=Acomm1[11];
									 sou[11]=coo2;
									 System.out.println(coo2);
									 
									 b2356[0]=food22;
									 b2356[1]=food23;
									 b2356[2]=food24;
									 b2356[3]=food25;
									 b2356[4]=food26;
									 b2356[5]=food27;
									 b2356[6]=food28;
									 b2356[7]=food29;
									 b2356[8]=food30;
									 b2356[9]=food31;
								}
								if(Acom1[c]==12){
									float food33 = co2357[0]*(jslider[0].getValue()+1);
									float food34 = co2357[1]*(jslider[1].getValue()+1);
									float food35 = co2357[2]*(jslider[2].getValue()+1);
									float food36 = co2357[3]*(jslider[3].getValue()+1);
									float food37 = co2357[4]*(jslider[4].getValue()+1);
									float food38 = co2357[5]*((jslider[5].getValue()+1)*-1);
									float food39 = co2357[6]*(jslider[6].getValue()+1);
									float food40 = co2357[7]*(jslider[7].getValue()+1);
									float food41 = co2357[8]*(jslider[8].getValue()+1);
									float food42 = co2357[9]*(jslider[9].getValue()+1);
									coo3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									name[12]=Acomm1[12];
									sou[12]=coo3;
									System.out.println(coo3);
									
									b2357[0]=food33;
									 b2357[1]=food34;
									 b2357[2]=food35;
									 b2357[3]=food36;
									 b2357[4]=food37;
									 b2357[5]=food38;
									 b2357[6]=food39;
									 b2357[7]=food40;
									 b2357[8]=food41;
									 b2357[9]=food42;
								}
								if(Acom1[c]==13){
									float food33 = co2377[0]*(jslider[0].getValue()+1);
									float food34 = co2377[1]*(jslider[1].getValue()+1);
									float food35 = co2377[2]*(jslider[2].getValue()+1);
									float food36 = co2377[3]*(jslider[3].getValue()+1);
									float food37 = co2377[4]*(jslider[4].getValue()+1);
									float food38 = co2377[5]*((jslider[5].getValue()+1)*-1);
									float food39 = co2377[6]*(jslider[6].getValue()+1);
									float food40 = co2377[7]*(jslider[7].getValue()+1);
									float food41 = co2377[8]*(jslider[8].getValue()+1);
									float food42 = co2377[9]*(jslider[9].getValue()+1);
									coo4 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
									name[13]=Acomm1[13];
									sou[13]=coo4;
									System.out.println(coo4);
									
									b2377[0]=food33;
									 b2377[1]=food34;
									 b2377[2]=food35;
									 b2377[3]=food36;
									 b2377[4]=food37;
									 b2377[5]=food38;
									 b2377[6]=food39;
									 b2377[7]=food40;
									 b2377[8]=food41;
									 b2377[9]=food42;
								}

							}
							
						}
					} catch (Exception e) {
					         
					    }

	//------------------------------------------------寫 EXCEL-------------------------------------------		
						
						 
						
						 try

						 {			            
							 
							 int l=1;

			      	 String imaa[] = {"公司","Total"};
			      	 
			               WritableWorkbook workbook = Workbook.createWorkbook(new File(".//TWAMPd//htdocs//conversion//Id.xls"));

			               WritableSheet sheet = workbook.createSheet("First Sheet", 0);  //工作表名稱

			               
			               WritableCellFormat cellFormat1 = new WritableCellFormat ();
			               for(int x=0;x<imaa.length;x++){
				              	 for(int k=0;k<=0;k++){
				              		  Label label = new Label(x, k, imaa[x], cellFormat1);
				              		  sheet.addCell(label);
				              	 }
				               }
			               
			               
			            	   
			               for(int k=0;k<=0;k++){
			            		   for(int x=0;x<name.length;x++){
			            			   if(!(name[x]=="")){
			            				   if(l==1){
			            			   Label label1 = new Label(k, l, name[x], cellFormat1);
			            			   sheet.addCell(label1);
			            			   l++;
			            			   		}else if(l==2){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			  l++;
			            			   		}else if(l==3){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==4){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==5){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==6){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==7){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==8){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==9){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==10){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==11){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==12){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==13){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==14){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}
					              	 	}   
			            	   		}
			               		}
			               
			               l=1;
			               
			               for(int k=1;k<=1;k++){
		            		   for(int x=0;x<sou.length;x++){
		            			   if(!(sou[x]==0.0)){
		            				   if(l==1){
		            					   jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
				      	              		  l++;
		            			   		}else if(l==2){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			  l++;
		            			   		}else if(l==3){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==4){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==5){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==6){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==7){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==8){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==9){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==10){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==11){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==12){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==13){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}else if(l==14){
		            			   			jxl.write.Number number = new jxl.write.Number(k, l, sou[x]);
				      	              		  sheet.addCell(number);
		 		            			   l++;
		            			   		}
				              	 	}   
		            	   		}
		               		}
//			               jxl.write.Number number = new jxl.write.Number(2, 10, 20);        //第幾列第幾行輸入什麼值

//			              sheet.addCell(number);      //寫入到工作表去
			               
			                

			              workbook.write();   //寫入
			              workbook.close();   //關閉

			              for(int aa=0;aa<sou.length;aa++){
			            	 if(!(sou[aa]==0.0)){
			            		 System.out.println();
			            		 System.out.println(sou[aa]);
			            	 }
			              }
			              
			              for(int aa=0;aa<name.length;aa++){
			            	  System.out.println(name[aa]);
			              }
			              
			              tmap = new TreeMap<>();
							for(int y=0;y<sou.length;y++){
								tmap.put(sou[y],name[y]);
							}
							
							System.out.println("-----------"+tmap);
				              
			              
			              table();
			           
			              csv();

						 
						      
			              
			              for(int ff=0;ff<b1217.length;ff++){
				      			b1201[ff]=(float) 0.0;
				      			b1216[ff]=(float) 0.0;
				      			b1217[ff]=(float) 0.0;
				      			b1233[ff]=(float) 0.0;
				      			b1234[ff]=(float) 0.0;
				      			b2201[ff]=(float) 0.0;
				      			b2204[ff]=(float) 0.0;
				      			b2206[ff]=(float) 0.0;
				      			b2207[ff]=(float) 0.0;
				      			b2315[ff]=(float) 0.0;
				      			b2353[ff]=(float) 0.0;
				      			b2356[ff]=(float) 0.0;
				      			b2357[ff]=(float) 0.0;
				      			b2377[ff]=(float) 0.0;
				      			
				      		}
			              
			              for(int aa=0;aa<sou.length;aa++){
			            	 if(!(sou[aa]==0.0)){
			            		 System.out.println();
			            		 System.out.println(sou[aa]);
			            	 }
			              }
			              
			              for(int aa=0;aa<name.length;aa++){
			            	  System.out.println(name[aa]);
			              }
			              
			          
			              
			              for(int aa=0;aa<name.length;aa++){
			            	 name[aa]="";
			            	 sou[aa]=0;
			              }
			              
			              for(int o=0;0<=13;o++){
			            	  for(int p=0;p<=1;p++){
			            		  data[o][p]=null;
			            	  }
			              }
			              
			          
			              
			              
			       

					}catch(IOException w)

			       {

			               System.out.println(a.toString());   

			       }

			       catch(Exception w)

			       {

//			               System.out.println(a.toString());   
			               

			       }	 
						 
					

						 
							     
			              
			       

					
			        //       System.out.println(a.toString());   

			     
						 
						 
					}
				
			});
		 	 
	//--------------------------------------Bar按鈕------------------------------------------------------
			 	
		 	 Bar.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){

						
						
						
						try{
							for(int c=0;c<Acom1.length;c++){
								try{
								if(!(Acom1[c]==-1)){
									if(Acom1[c]==0){
										float food = f1201[0]*(jslider[0].getValue()+1);
										float food1 = f1201[1]*(jslider[1].getValue()+1);
										float food2 = f1201[2]*(jslider[2].getValue()+1);
										float food3 = f1201[3]*(jslider[3].getValue()+1);
										float food4= f1201[4]*(jslider[4].getValue()+1);
										float food5 = f1201[5]*((jslider[5].getValue()+1)*-1);
										float food6 = f1201[6]*(jslider[6].getValue()+1);
										float food7 = f1201[7]*(jslider[7].getValue()+1);
										float food8 = f1201[8]*(jslider[8].getValue()+1);
										float food9 = f1201[9]*(jslider[9].getValue()+1);
										 food0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
										 name[0]=Acomm1[0];
										 sou[0]=food0;
										System.out.println(food0);
										
										b1201[0]=food;
										b1201[1]=food1;
										b1201[2]=food2;
										b1201[3]=food3;
										b1201[4]=food4;
										b1201[5]=food5;
										b1201[6]=food6;
										b1201[7]=food7;
										b1201[8]=food8;
										b1201[9]=food9;
										
										
										
									}
									
									if(Acom1[c]==1){
										float food11 = f1216[0]*(jslider[0].getValue()+1);
										float food12 = f1216[1]*(jslider[1].getValue()+1);
										float food13 = f1216[2]*(jslider[2].getValue()+1);
										float food14 = f1216[3]*(jslider[3].getValue()+1);
										float food15 = f1216[4]*(jslider[4].getValue()+1);
										float food16 = f1216[5]*((jslider[5].getValue()+1)*-1);
										float food17 = f1216[6]*(jslider[6].getValue()+1);
										float food18 = f1216[7]*(jslider[7].getValue()+1);
										float food19 = f1216[8]*(jslider[8].getValue()+1);
										float food20 = f1216[9]*(jslider[9].getValue()+1);
										 food1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
										 name[1]=Acomm1[1];
										 sou[1]=food1;
										 System.out.println(food1);
										
										 b1216[0]=food11;
										 b1216[1]=food12;
										 b1216[2]=food13;
										 b1216[3]=food14;
										 b1216[4]=food15;
										 b1216[5]=food16;
										 b1216[6]=food17;
										 b1216[7]=food18;
										 b1216[8]=food19;
										 b1216[9]=food20;
										
									}
									if(Acom1[c]==2){
										float food22 = f1217[0]*(jslider[0].getValue()+1);
										float food23 = f1217[1]*(jslider[1].getValue()+1);
										float food24 = f1217[2]*(jslider[2].getValue()+1);
										float food25 = f1217[3]*(jslider[3].getValue()+1);
										float food26 = f1217[4]*(jslider[4].getValue()+1);
										float food27 = f1217[5]*((jslider[5].getValue()+1)*-1);
										float food28 = f1217[6]*(jslider[6].getValue()+1);
										float food29 = f1217[7]*(jslider[7].getValue()+1);
										float food30 = f1217[8]*(jslider[8].getValue()+1);
										float food31 = f1217[9]*(jslider[9].getValue()+1);
										 food2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
										 name[2]=Acomm1[2];
										 sou[2]=food2;
										 System.out.println(food2);
										 
										 b1217[0]=food22;
										 b1217[1]=food23;
										 b1217[2]=food24;
										 b1217[3]=food25;
										 b1217[4]=food26;
										 b1217[5]=food27;
										 b1217[6]=food28;
										 b1217[7]=food29;
										 b1217[8]=food30;
										 b1217[9]=food31;
									}
									if(Acom1[c]==3){
										float food33 = f1233[0]*(jslider[0].getValue()+1);
										float food34 = f1233[1]*(jslider[1].getValue()+1);
										float food35 = f1233[2]*(jslider[2].getValue()+1);
										float food36 = f1233[3]*(jslider[3].getValue()+1);
										float food37 = f1233[4]*(jslider[4].getValue()+1);
										float food38 = f1233[5]*((jslider[5].getValue()+1)*-1);
										float food39 = f1233[6]*(jslider[6].getValue()+1);
										float food40 = f1233[7]*(jslider[7].getValue()+1);
										float food41 = f1233[8]*(jslider[8].getValue()+1);
										float food42 = f1233[9]*(jslider[9].getValue()+1);
										 food3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										 name[3]=Acomm1[3];
										 sou[3]=food3;
										 System.out.println(food3);
										 
										 b1233[0]=food33;
										 b1233[1]=food34;
										 b1233[2]=food35;
										 b1233[3]=food36;
										 b1233[4]=food37;
										 b1233[5]=food38;
										 b1233[6]=food39;
										 b1233[7]=food40;
										 b1233[8]=food41;
										 b1233[9]=food42;
									}
									if(Acom1[c]==4){
										float food44 = f1234[0]*(jslider[0].getValue()+1);
										float food45 = f1234[1]*(jslider[1].getValue()+1);
										float food46 = f1234[2]*(jslider[2].getValue()+1);
										float food47 = f1234[3]*(jslider[3].getValue()+1);
										float food48 = f1234[4]*(jslider[4].getValue()+1);
										float food49 = f1234[5]*((jslider[5].getValue()+1)*-1);
										float food50 = f1234[6]*(jslider[6].getValue()+1);
										float food51 = f1234[7]*(jslider[7].getValue()+1);
										float food52 = f1234[8]*(jslider[8].getValue()+1);
										float food53 = f1234[9]*(jslider[9].getValue()+1);
										 food4 = (food44+food45+food46+food47+food48+food49+food50+food51+food52+food53)/10;
										 name[4]=Acomm1[4];
										 sou[4]=food4;
										 System.out.println(food4);
										 
										 b1234[0]=food44;
										 b1234[1]=food45;
										 b1234[2]=food46;
										 b1234[3]=food47;
										 b1234[4]=food48;
										 b1234[5]=food49;
										 b1234[6]=food50;
										 b1234[7]=food51;
										 b1234[8]=food52;
										 b1234[9]=food53;
									}
									
								}
								} catch (Exception e) {
							         
							    }
							}
							
							
							for(int c=0;c<Acom1.length;c++){
								if(!(Acom1[c]==-1)){
									if(Acom1[c]==5){
										float food = car2201[0]*(jslider[0].getValue()+1);
										float food1 = car2201[1]*(jslider[1].getValue()+1);
										float food2 = car2201[2]*(jslider[2].getValue()+1);
										float food3 = car2201[3]*(jslider[3].getValue()+1);
										float food4= car2201[4]*(jslider[4].getValue()+1);
										float food5 = car2201[5]*((jslider[5].getValue()+1)*-1);
										float food6 = car2201[6]*(jslider[6].getValue()+1);
										float food7 = car2201[7]*(jslider[7].getValue()+1);
										float food8 = car2201[8]*(jslider[8].getValue()+1);
										float food9 = car2201[9]*(jslider[9].getValue()+1);
										 car0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
										 name[5]=Acomm1[5];
										 sou[5]=car0;
										 System.out.println(car0);
										 
											b2201[0]=food;
											b2201[1]=food1;
											b2201[2]=food2;
											b2201[3]=food3;
											b2201[4]=food4;
											b2201[5]=food5;
											b2201[6]=food6;
											b2201[7]=food7;
											b2201[8]=food8;
											b2201[9]=food9;
									}
									if(Acom1[c]==6){
										float food11 = car2204[0]*(jslider[0].getValue()+1);
										float food12 = car2204[1]*(jslider[1].getValue()+1);
										float food13 = car2204[2]*(jslider[2].getValue()+1);
										float food14 = car2204[3]*(jslider[3].getValue()+1);
										float food15 = car2204[4]*(jslider[4].getValue()+1);
										float food16 = car2204[5]*((jslider[5].getValue()+1)*-1);
										float food17 = car2204[6]*(jslider[6].getValue()+1);
										float food18 = car2204[7]*(jslider[7].getValue()+1);
										float food19 = car2204[8]*(jslider[8].getValue()+1);
										float food20 = car2204[9]*(jslider[9].getValue()+1);
										 car1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
										 name[6]=Acomm1[6];
										 sou[6]=car1;
										 System.out.println(car1);
										 
										 b2204[0]=food11;
										 b2204[1]=food12;
										 b2204[2]=food13;
										 b2204[3]=food14;
										 b2204[4]=food15;
										 b2204[5]=food16;
										 b2204[6]=food17;
										 b2204[7]=food18;
										 b2204[8]=food19;
										 b2204[9]=food20;
										
										
									}
									if(Acom1[c]==7){
										float food22 = car2206[0]*(jslider[0].getValue()+1);
										float food23 = car2206[1]*(jslider[1].getValue()+1);
										float food24 = car2206[2]*(jslider[2].getValue()+1);
										float food25 = car2206[3]*(jslider[3].getValue()+1);
										float food26 = car2206[4]*(jslider[4].getValue()+1);
										float food27 = car2206[5]*((jslider[5].getValue()+1)*-1);
										float food28 = car2206[6]*(jslider[6].getValue()+1);
										float food29 = car2206[7]*(jslider[7].getValue()+1);
										float food30 = car2206[8]*(jslider[8].getValue()+1);
										float food31 = car2206[9]*(jslider[9].getValue()+1);
										 car2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
										 name[7]=Acomm1[7];
										 sou[7]=car2;
										 System.out.println(car2);
										 
										 b2206[0]=food22;
										 b2206[1]=food23;
										 b2206[2]=food24;
										 b2206[3]=food25;
										 b2206[4]=food26;
										 b2206[5]=food27;
										 b2206[6]=food28;
										 b2206[7]=food29;
										 b2206[8]=food30;
										 b2206[9]=food31;
									}
									if(Acom1[c]==8){
										float food33 = car2207[0]*(jslider[0].getValue()+1);
										float food34 = car2207[1]*(jslider[1].getValue()+1);
										float food35 = car2207[2]*(jslider[2].getValue()+1);
										float food36 = car2207[3]*(jslider[3].getValue()+1);
										float food37 = car2207[4]*(jslider[4].getValue()+1);
										float food38 = car2207[5]*((jslider[5].getValue()+1)*-1);
										float food39 = car2207[6]*(jslider[6].getValue()+1);
										float food40 = car2207[7]*(jslider[7].getValue()+1);
										float food41 = car2207[8]*(jslider[8].getValue()+1);
										float food42 = car2207[9]*(jslider[9].getValue()+1);
										car3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										name[8]=Acomm1[8];
										sou[8]=car3;
										System.out.println(car3);
										
										b2207[0]=food33;
										 b2207[1]=food34;
										 b2207[2]=food35;
										 b2207[3]=food36;
										 b2207[4]=food37;
										 b2207[5]=food38;
										 b2207[6]=food39;
										 b2207[7]=food40;
										 b2207[8]=food41;
										 b2207[9]=food42;
									}
								}
							}
					
							for(int c=0;c<Acom1.length;c++){
								if(!(Acom1[c]==-1)){
									if(Acom1[c]==9){
										float food = co2315[0]*(jslider[0].getValue()+1);
										float food1 = co2315[1]*(jslider[1].getValue()+1);
										float food2 = co2315[2]*(jslider[2].getValue()+1);
										float food3 = co2315[3]*(jslider[3].getValue()+1);
										float food4= co2315[4]*(jslider[4].getValue()+1);
										float food5 = co2315[5]*((jslider[5].getValue()+1)*-1);
										float food6 = co2315[6]*(jslider[6].getValue()+1);
										float food7 = co2315[7]*(jslider[7].getValue()+1);
										float food8 = co2315[8]*(jslider[8].getValue()+1);
										float food9 = co2315[9]*(jslider[9].getValue()+1);
										 coo0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
										 name[9]=Acomm1[9];
										 sou[9]=coo0;
										 System.out.println(coo0);
										 
											b2315[0]=food;
											b2315[1]=food1;
											b2315[2]=food2;
											b2315[3]=food3;
											b2315[4]=food4;
											b2315[5]=food5;
											b2315[6]=food6;
											b2315[7]=food7;
											b2315[8]=food8;
											b2315[9]=food9;
									}
									if(Acom1[c]==10){
										float food11 = co2353[0]*(jslider[0].getValue()+1);
										float food12 = co2353[1]*(jslider[1].getValue()+1);
										float food13 = co2353[2]*(jslider[2].getValue()+1);
										float food14 = co2353[3]*(jslider[3].getValue()+1);
										float food15 = co2353[4]*(jslider[4].getValue()+1);
										float food16 = co2353[5]*((jslider[5].getValue()+1)*-1);
										float food17 = co2353[6]*(jslider[6].getValue()+1);
										float food18 = co2353[7]*(jslider[7].getValue()+1);
										float food19 = co2353[8]*(jslider[8].getValue()+1);
										float food20 = co2353[9]*(jslider[9].getValue()+1);
										 coo1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
										 name[10]=Acomm1[10];
										 sou[10]=coo1;
										 System.out.println(coo1);
										
										 b2353[0]=food11;
										 b2353[1]=food12;
										 b2353[2]=food13;
										 b2353[3]=food14;
										 b2353[4]=food15;
										 b2353[5]=food16;
										 b2353[6]=food17;
										 b2353[7]=food18;
										 b2353[8]=food19;
										 b2353[9]=food20;
										
									}
									if(Acom1[c]==11){
										float food22 = co2356[0]*(jslider[0].getValue()+1);
										float food23 = co2356[1]*(jslider[1].getValue()+1);
										float food24 = co2356[2]*(jslider[2].getValue()+1);
										float food25 = co2356[3]*(jslider[3].getValue()+1);
										float food26 = co2356[4]*(jslider[4].getValue()+1);
										float food27 = co2356[5]*((jslider[5].getValue()+1)*-1);
										float food28 = co2356[6]*(jslider[6].getValue()+1);
										float food29 = co2356[7]*(jslider[7].getValue()+1);
										float food30 = co2356[8]*(jslider[8].getValue()+1);
										float food31 = co2356[9]*(jslider[9].getValue()+1);
										 coo2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
										 name[11]=Acomm1[11];
										 sou[11]=coo2;
										 System.out.println(coo2);
										 
										 b2356[0]=food22;
										 b2356[1]=food23;
										 b2356[2]=food24;
										 b2356[3]=food25;
										 b2356[4]=food26;
										 b2356[5]=food27;
										 b2356[6]=food28;
										 b2356[7]=food29;
										 b2356[8]=food30;
										 b2356[9]=food31;
									}
									if(Acom1[c]==12){
										float food33 = co2357[0]*(jslider[0].getValue()+1);
										float food34 = co2357[1]*(jslider[1].getValue()+1);
										float food35 = co2357[2]*(jslider[2].getValue()+1);
										float food36 = co2357[3]*(jslider[3].getValue()+1);
										float food37 = co2357[4]*(jslider[4].getValue()+1);
										float food38 = co2357[5]*((jslider[5].getValue()+1)*-1);
										float food39 = co2357[6]*(jslider[6].getValue()+1);
										float food40 = co2357[7]*(jslider[7].getValue()+1);
										float food41 = co2357[8]*(jslider[8].getValue()+1);
										float food42 = co2357[9]*(jslider[9].getValue()+1);
										coo3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										name[12]=Acomm1[12];
										sou[12]=coo3;
										System.out.println(coo3);
										
										b2357[0]=food33;
										 b2357[1]=food34;
										 b2357[2]=food35;
										 b2357[3]=food36;
										 b2357[4]=food37;
										 b2357[5]=food38;
										 b2357[6]=food39;
										 b2357[7]=food40;
										 b2357[8]=food41;
										 b2357[9]=food42;
									}
									if(Acom1[c]==13){
										float food33 = co2377[0]*(jslider[0].getValue()+1);
										float food34 = co2377[1]*(jslider[1].getValue()+1);
										float food35 = co2377[2]*(jslider[2].getValue()+1);
										float food36 = co2377[3]*(jslider[3].getValue()+1);
										float food37 = co2377[4]*(jslider[4].getValue()+1);
										float food38 = co2377[5]*((jslider[5].getValue()+1)*-1);
										float food39 = co2377[6]*(jslider[6].getValue()+1);
										float food40 = co2377[7]*(jslider[7].getValue()+1);
										float food41 = co2377[8]*(jslider[8].getValue()+1);
										float food42 = co2377[9]*(jslider[9].getValue()+1);
										coo4 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										name[13]=Acomm1[13];
										sou[13]=coo4;
										System.out.println(coo4);
										
										b2377[0]=food33;
										 b2377[1]=food34;
										 b2377[2]=food35;
										 b2377[3]=food36;
										 b2377[4]=food37;
										 b2377[5]=food38;
										 b2377[6]=food39;
										 b2377[7]=food40;
										 b2377[8]=food41;
										 b2377[9]=food42;
									}

								}
								
							}
						} catch (Exception e) {
						         
						    }

		//------------------------------------------------寫 BEXCEL-------------------------------------------		
							
						 try

						 {			            
							 
							 int l=1;

			      	 String imaa[] = {"公司名稱","ROE","ROA","純益率","毛利率","流動比率","負債比率","每股淨值",
			 				"存貨週轉率","資本週轉率", "應收帳款週轉率"};
			      	 
			               WritableWorkbook workbook = Workbook.createWorkbook(new File(".//TWAMPd//htdocs//conversion//bar.xls"));

			               WritableSheet sheet = workbook.createSheet("First Sheet", 0);  //工作表名稱

			               
			               WritableCellFormat cellFormat1 = new WritableCellFormat ();
			              
			               for(int x=0;x<imaa.length;x++){
				              	 for(int k=0;k<=0;k++){
				              		  Label label = new Label(x, k, imaa[x], cellFormat1);
				              		  sheet.addCell(label);
				              	 }
				               }
			               
			               
			            	   
			               for(int k=0;k<=0;k++){
			            		   for(int x=0;x<name.length;x++){
			            			   if(!(name[x]=="")){
			            				   if(l==1){
			            			   Label label1 = new Label(k, l, name[x], cellFormat1);
			            			   sheet.addCell(label1);
			            			   l++;
			            			   		}else if(l==2){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			  l++;
			            			   		}else if(l==3){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==4){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==5){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==6){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==7){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==8){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==9){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==10){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==11){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==12){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==13){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==14){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}
					              	 	}   
			            	   		}
			               		}
			               
			               
			               l=1;
			 
			             int  n=1;
			             int  s=1;
			             
			          			   if(!(b1201[0]==0.0)){
		            				   for(int x=0;x<b1201.length;x++){
		            					   jxl.write.Number number = new jxl.write.Number(s, n, b1201[x]/10);
				      	              		  sheet.addCell(number);
				      	              		  s++;
		            			   		}
		            				   n++;
		            				 }
			          			   
			          			 
					               s=1;
					               	if(!(b1216[0]==0.0)){
				            			   for(int x=0;x<b1216.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1216[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b1217[0]==0.0)){
				            			   for(int x=0;x<b1217.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1217[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b1233[0]==0.0)){
				            			   for(int x=0;x<b1233.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1233[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b1234[0]==0.0)){
				            			   for(int x=0;x<b1234.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1234[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					            
					               	s=1;
					               	if(!(b2201[0]==0.0)){
				            			   for(int x=0;x<b2201.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2201[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2204[0]==0.0)){
				            			   for(int x=0;x<b2204.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2204[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2206[0]==0.0)){
				            			   for(int x=0;x<b2206.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2206[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	
		            		    
					               	s=1;
					               	if(!(b2207[0]==0.0)){
				            			   for(int x=0;x<b2207.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2207[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
			               
					               	s=1;
					               	if(!(b2315[0]==0.0)){
				            			   for(int x=0;x<b2315.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2315[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2353[0]==0.0)){
				            			   for(int x=0;x<b2353.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2353[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2356[0]==0.0)){
				            			   for(int x=0;x<b2356.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2356[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2357[0]==0.0)){
				            			   for(int x=0;x<b2357.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2357[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2377[0]==0.0)){
				            			   for(int x=0;x<b2377.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2377[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
				           			   		}
				           				   n++;
			            				 }//			               jxl.write.Number number = new jxl.write.Number(2, 10, 20);        //第幾列第幾行輸入什麼值

//				              sheet.addCell(number);      //寫入到工作表去
				               
				                

				              workbook.write();   //寫入
				              workbook.close();   //關閉

				              for(int aa=0;aa<sou.length;aa++){
				            	 if(!(sou[aa]==0.0)){
				            		 System.out.println();
				            		 System.out.println(sou[aa]);
				            	 }
				              }
				              
				              for(int aa=0;aa<name.length;aa++){
				            	  System.out.println(name[aa]);
				              }
				              
				              tmap = new TreeMap<>();
								for(int y=0;y<sou.length;y++){
									tmap.put(sou[y],name[y]);
								}
								
								System.out.println("-----------"+tmap);
					              
				              table();
				 
				              bcsv();

							 
							      
				              
				              for(int ff=0;ff<b1217.length;ff++){
					      			b1201[ff]=(float) 0.0;
					      			b1216[ff]=(float) 0.0;
					      			b1217[ff]=(float) 0.0;
					      			b1233[ff]=(float) 0.0;
					      			b1234[ff]=(float) 0.0;
					      			b2201[ff]=(float) 0.0;
					      			b2204[ff]=(float) 0.0;
					      			b2206[ff]=(float) 0.0;
					      			b2207[ff]=(float) 0.0;
					      			b2315[ff]=(float) 0.0;
					      			b2353[ff]=(float) 0.0;
					      			b2356[ff]=(float) 0.0;
					      			b2357[ff]=(float) 0.0;
					      			b2377[ff]=(float) 0.0;
					      			
					      		}
				              
				              for(int aa=0;aa<sou.length;aa++){
				            	 if(!(sou[aa]==0.0)){
				            		 System.out.println();
				            		 System.out.println(sou[aa]);
				            	 }
				              }
				              
				              for(int aa=0;aa<name.length;aa++){
				            	  System.out.println(name[aa]);
				              }
				              
				          
				              
				              for(int aa=0;aa<name.length;aa++){
				            	 name[aa]="";
				            	 sou[aa]=0;
				              }
				              
				              for(int o=0;0<=13;o++){
				            	  for(int p=0;p<=1;p++){
				            		  data[o][p]=null;
				            	  }
				              }
				              
				          
				              
				              
				       

						}catch(IOException w)

				       {

				        //       System.out.println(a.toString());   

				       }

				       catch(Exception w)

				       {

				        //       System.out.println(a.toString());   
				               

				       }	 

					}
		 	 });

		  

		 	 Astatic.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){

						
						  JOptionPane.showMessageDialog(null, "<html><font face=微軟正黑體  size=3  color=#0000ff>1.選取喜好的公司<br><br>2.長按ctrl可以複選公司<br><br>3.選取結束依自己偏好設定比重<br><br>4.完成及可按下開始，錯誤則從選<br><br>5.開始後將產生一般列表及動態圖表</font><html>", "說明", JOptionPane.WARNING_MESSAGE );
						
					}
		 	 });
		 	 
		 	 
		 	 
		 	 Astatic1.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){

						 	jslider[0].setValue(2);
				    	    jslider[1].setValue(2);
				    	    jslider[2].setValue(3);
				    	    jslider[3].setValue(3);
				    	    jslider[4].setValue(0);
				    	    jslider[5].setValue(0);
				    	    jslider[6].setValue(1);
				    	    jslider[7].setValue(4);
				    	    jslider[8].setValue(4);
				    	    jslider[9].setValue(4);
					}
		 	 });
		 	 
		 	 
		 	 
		 	 Astatic2.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){

						
				    	    jslider[0].setValue(2);
				    	    jslider[1].setValue(2);
				    	    jslider[2].setValue(2);
				    	    jslider[3].setValue(2);
				    	    jslider[4].setValue(0);
				    	    jslider[5].setValue(0);
				    	    jslider[6].setValue(4);
				    	    jslider[7].setValue(1);
				    	    jslider[8].setValue(3);
				    	    jslider[9].setValue(3);
						
					}
		 	 });
		 	 
		 	 
		 	 
		 	 Astatic3.addActionListener(new ActionListener(){
					public void actionPerformed(ActionEvent a){

						
						
						try{
							for(int c=0;c<Acom1.length;c++){
								try{
								if(!(Acom1[c]==-1)){
									if(Acom1[c]==0){
										float food = f1201[0]*(jslider[0].getValue()+1);
										float food1 = f1201[1]*(jslider[1].getValue()+1);
										float food2 = f1201[2]*(jslider[2].getValue()+1);
										float food3 = f1201[3]*(jslider[3].getValue()+1);
										float food4= f1201[4]*(jslider[4].getValue()+1);
										float food5 = f1201[5]*((jslider[5].getValue()+1)*-1);
										float food6 = f1201[6]*(jslider[6].getValue()+1);
										float food7 = f1201[7]*(jslider[7].getValue()+1);
										float food8 = f1201[8]*(jslider[8].getValue()+1);
										float food9 = f1201[9]*(jslider[9].getValue()+1);
										 food0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
										 name[0]=Acomm1[0];
										 sou[0]=food0;
										System.out.println(food0);
										
										b1201[0]=food;
										b1201[1]=food1;
										b1201[2]=food2;
										b1201[3]=food3;
										b1201[4]=food4;
										b1201[5]=food5;
										b1201[6]=food6;
										b1201[7]=food7;
										b1201[8]=food8;
										b1201[9]=food9;
										
										
										
									}
									
									if(Acom1[c]==1){
										float food11 = f1216[0]*(jslider[0].getValue()+1);
										float food12 = f1216[1]*(jslider[1].getValue()+1);
										float food13 = f1216[2]*(jslider[2].getValue()+1);
										float food14 = f1216[3]*(jslider[3].getValue()+1);
										float food15 = f1216[4]*(jslider[4].getValue()+1);
										float food16 = f1216[5]*((jslider[5].getValue()+1)*-1);
										float food17 = f1216[6]*(jslider[6].getValue()+1);
										float food18 = f1216[7]*(jslider[7].getValue()+1);
										float food19 = f1216[8]*(jslider[8].getValue()+1);
										float food20 = f1216[9]*(jslider[9].getValue()+1);
										 food1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
										 name[1]=Acomm1[1];
										 sou[1]=food1;
										 System.out.println(food1);
										
										 b1216[0]=food11;
										 b1216[1]=food12;
										 b1216[2]=food13;
										 b1216[3]=food14;
										 b1216[4]=food15;
										 b1216[5]=food16;
										 b1216[6]=food17;
										 b1216[7]=food18;
										 b1216[8]=food19;
										 b1216[9]=food20;
										
									}
									if(Acom1[c]==2){
										float food22 = f1217[0]*(jslider[0].getValue()+1);
										float food23 = f1217[1]*(jslider[1].getValue()+1);
										float food24 = f1217[2]*(jslider[2].getValue()+1);
										float food25 = f1217[3]*(jslider[3].getValue()+1);
										float food26 = f1217[4]*(jslider[4].getValue()+1);
										float food27 = f1217[5]*((jslider[5].getValue()+1)*-1);
										float food28 = f1217[6]*(jslider[6].getValue()+1);
										float food29 = f1217[7]*(jslider[7].getValue()+1);
										float food30 = f1217[8]*(jslider[8].getValue()+1);
										float food31 = f1217[9]*(jslider[9].getValue()+1);
										 food2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
										 name[2]=Acomm1[2];
										 sou[2]=food2;
										 System.out.println(food2);
										 
										 b1217[0]=food22;
										 b1217[1]=food23;
										 b1217[2]=food24;
										 b1217[3]=food25;
										 b1217[4]=food26;
										 b1217[5]=food27;
										 b1217[6]=food28;
										 b1217[7]=food29;
										 b1217[8]=food30;
										 b1217[9]=food31;
									}
									if(Acom1[c]==3){
										float food33 = f1233[0]*(jslider[0].getValue()+1);
										float food34 = f1233[1]*(jslider[1].getValue()+1);
										float food35 = f1233[2]*(jslider[2].getValue()+1);
										float food36 = f1233[3]*(jslider[3].getValue()+1);
										float food37 = f1233[4]*(jslider[4].getValue()+1);
										float food38 = f1233[5]*((jslider[5].getValue()+1)*-1);
										float food39 = f1233[6]*(jslider[6].getValue()+1);
										float food40 = f1233[7]*(jslider[7].getValue()+1);
										float food41 = f1233[8]*(jslider[8].getValue()+1);
										float food42 = f1233[9]*(jslider[9].getValue()+1);
										 food3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										 name[3]=Acomm1[3];
										 sou[3]=food3;
										 System.out.println(food3);
										 
										 b1233[0]=food33;
										 b1233[1]=food34;
										 b1233[2]=food35;
										 b1233[3]=food36;
										 b1233[4]=food37;
										 b1233[5]=food38;
										 b1233[6]=food39;
										 b1233[7]=food40;
										 b1233[8]=food41;
										 b1233[9]=food42;
									}
									if(Acom1[c]==4){
										float food44 = f1234[0]*(jslider[0].getValue()+1);
										float food45 = f1234[1]*(jslider[1].getValue()+1);
										float food46 = f1234[2]*(jslider[2].getValue()+1);
										float food47 = f1234[3]*(jslider[3].getValue()+1);
										float food48 = f1234[4]*(jslider[4].getValue()+1);
										float food49 = f1234[5]*((jslider[5].getValue()+1)*-1);
										float food50 = f1234[6]*(jslider[6].getValue()+1);
										float food51 = f1234[7]*(jslider[7].getValue()+1);
										float food52 = f1234[8]*(jslider[8].getValue()+1);
										float food53 = f1234[9]*(jslider[9].getValue()+1);
										 food4 = (food44+food45+food46+food47+food48+food49+food50+food51+food52+food53)/10;
										 name[4]=Acomm1[4];
										 sou[4]=food4;
										 System.out.println(food4);
										 
										 b1234[0]=food44;
										 b1234[1]=food45;
										 b1234[2]=food46;
										 b1234[3]=food47;
										 b1234[4]=food48;
										 b1234[5]=food49;
										 b1234[6]=food50;
										 b1234[7]=food51;
										 b1234[8]=food52;
										 b1234[9]=food53;
									}
									
								}
								} catch (Exception e) {
							         
							    }
							}
							
							
							for(int c=0;c<Acom1.length;c++){
								if(!(Acom1[c]==-1)){
									if(Acom1[c]==5){
										float food = car2201[0]*(jslider[0].getValue()+1);
										float food1 = car2201[1]*(jslider[1].getValue()+1);
										float food2 = car2201[2]*(jslider[2].getValue()+1);
										float food3 = car2201[3]*(jslider[3].getValue()+1);
										float food4= car2201[4]*(jslider[4].getValue()+1);
										float food5 = car2201[5]*((jslider[5].getValue()+1)*-1);
										float food6 = car2201[6]*(jslider[6].getValue()+1);
										float food7 = car2201[7]*(jslider[7].getValue()+1);
										float food8 = car2201[8]*(jslider[8].getValue()+1);
										float food9 = car2201[9]*(jslider[9].getValue()+1);
										 car0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
										 name[5]=Acomm1[5];
										 sou[5]=car0;
										 System.out.println(car0);
										 
											b2201[0]=food;
											b2201[1]=food1;
											b2201[2]=food2;
											b2201[3]=food3;
											b2201[4]=food4;
											b2201[5]=food5;
											b2201[6]=food6;
											b2201[7]=food7;
											b2201[8]=food8;
											b2201[9]=food9;
									}
									if(Acom1[c]==6){
										float food11 = car2204[0]*(jslider[0].getValue()+1);
										float food12 = car2204[1]*(jslider[1].getValue()+1);
										float food13 = car2204[2]*(jslider[2].getValue()+1);
										float food14 = car2204[3]*(jslider[3].getValue()+1);
										float food15 = car2204[4]*(jslider[4].getValue()+1);
										float food16 = car2204[5]*((jslider[5].getValue()+1)*-1);
										float food17 = car2204[6]*(jslider[6].getValue()+1);
										float food18 = car2204[7]*(jslider[7].getValue()+1);
										float food19 = car2204[8]*(jslider[8].getValue()+1);
										float food20 = car2204[9]*(jslider[9].getValue()+1);
										 car1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
										 name[6]=Acomm1[6];
										 sou[6]=car1;
										 System.out.println(car1);
										 
										 b2204[0]=food11;
										 b2204[1]=food12;
										 b2204[2]=food13;
										 b2204[3]=food14;
										 b2204[4]=food15;
										 b2204[5]=food16;
										 b2204[6]=food17;
										 b2204[7]=food18;
										 b2204[8]=food19;
										 b2204[9]=food20;
										
										
									}
									if(Acom1[c]==7){
										float food22 = car2206[0]*(jslider[0].getValue()+1);
										float food23 = car2206[1]*(jslider[1].getValue()+1);
										float food24 = car2206[2]*(jslider[2].getValue()+1);
										float food25 = car2206[3]*(jslider[3].getValue()+1);
										float food26 = car2206[4]*(jslider[4].getValue()+1);
										float food27 = car2206[5]*((jslider[5].getValue()+1)*-1);
										float food28 = car2206[6]*(jslider[6].getValue()+1);
										float food29 = car2206[7]*(jslider[7].getValue()+1);
										float food30 = car2206[8]*(jslider[8].getValue()+1);
										float food31 = car2206[9]*(jslider[9].getValue()+1);
										 car2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
										 name[7]=Acomm1[7];
										 sou[7]=car2;
										 System.out.println(car2);
										 
										 b2206[0]=food22;
										 b2206[1]=food23;
										 b2206[2]=food24;
										 b2206[3]=food25;
										 b2206[4]=food26;
										 b2206[5]=food27;
										 b2206[6]=food28;
										 b2206[7]=food29;
										 b2206[8]=food30;
										 b2206[9]=food31;
									}
									if(Acom1[c]==8){
										float food33 = car2207[0]*(jslider[0].getValue()+1);
										float food34 = car2207[1]*(jslider[1].getValue()+1);
										float food35 = car2207[2]*(jslider[2].getValue()+1);
										float food36 = car2207[3]*(jslider[3].getValue()+1);
										float food37 = car2207[4]*(jslider[4].getValue()+1);
										float food38 = car2207[5]*((jslider[5].getValue()+1)*-1);
										float food39 = car2207[6]*(jslider[6].getValue()+1);
										float food40 = car2207[7]*(jslider[7].getValue()+1);
										float food41 = car2207[8]*(jslider[8].getValue()+1);
										float food42 = car2207[9]*(jslider[9].getValue()+1);
										car3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										name[8]=Acomm1[8];
										sou[8]=car3;
										System.out.println(car3);
										
										b2207[0]=food33;
										 b2207[1]=food34;
										 b2207[2]=food35;
										 b2207[3]=food36;
										 b2207[4]=food37;
										 b2207[5]=food38;
										 b2207[6]=food39;
										 b2207[7]=food40;
										 b2207[8]=food41;
										 b2207[9]=food42;
									}
								}
							}
					
							for(int c=0;c<Acom1.length;c++){
								if(!(Acom1[c]==-1)){
									if(Acom1[c]==9){
										float food = co2315[0]*(jslider[0].getValue()+1);
										float food1 = co2315[1]*(jslider[1].getValue()+1);
										float food2 = co2315[2]*(jslider[2].getValue()+1);
										float food3 = co2315[3]*(jslider[3].getValue()+1);
										float food4= co2315[4]*(jslider[4].getValue()+1);
										float food5 = co2315[5]*((jslider[5].getValue()+1)*-1);
										float food6 = co2315[6]*(jslider[6].getValue()+1);
										float food7 = co2315[7]*(jslider[7].getValue()+1);
										float food8 = co2315[8]*(jslider[8].getValue()+1);
										float food9 = co2315[9]*(jslider[9].getValue()+1);
										 coo0 = (food+food1+food2+food3+food4+food5+food6+food7+food8+food9)/10;
										 name[9]=Acomm1[9];
										 sou[9]=coo0;
										 System.out.println(coo0);
										 
											b2315[0]=food;
											b2315[1]=food1;
											b2315[2]=food2;
											b2315[3]=food3;
											b2315[4]=food4;
											b2315[5]=food5;
											b2315[6]=food6;
											b2315[7]=food7;
											b2315[8]=food8;
											b2315[9]=food9;
									}
									if(Acom1[c]==10){
										float food11 = co2353[0]*(jslider[0].getValue()+1);
										float food12 = co2353[1]*(jslider[1].getValue()+1);
										float food13 = co2353[2]*(jslider[2].getValue()+1);
										float food14 = co2353[3]*(jslider[3].getValue()+1);
										float food15 = co2353[4]*(jslider[4].getValue()+1);
										float food16 = co2353[5]*((jslider[5].getValue()+1)*-1);
										float food17 = co2353[6]*(jslider[6].getValue()+1);
										float food18 = co2353[7]*(jslider[7].getValue()+1);
										float food19 = co2353[8]*(jslider[8].getValue()+1);
										float food20 = co2353[9]*(jslider[9].getValue()+1);
										 coo1 = (food11+food12+food13+food14+food15+food16+food17+food18+food19+food20)/10;
										 name[10]=Acomm1[10];
										 sou[10]=coo1;
										 System.out.println(coo1);
										
										 b2353[0]=food11;
										 b2353[1]=food12;
										 b2353[2]=food13;
										 b2353[3]=food14;
										 b2353[4]=food15;
										 b2353[5]=food16;
										 b2353[6]=food17;
										 b2353[7]=food18;
										 b2353[8]=food19;
										 b2353[9]=food20;
										
									}
									if(Acom1[c]==11){
										float food22 = co2356[0]*(jslider[0].getValue()+1);
										float food23 = co2356[1]*(jslider[1].getValue()+1);
										float food24 = co2356[2]*(jslider[2].getValue()+1);
										float food25 = co2356[3]*(jslider[3].getValue()+1);
										float food26 = co2356[4]*(jslider[4].getValue()+1);
										float food27 = co2356[5]*((jslider[5].getValue()+1)*-1);
										float food28 = co2356[6]*(jslider[6].getValue()+1);
										float food29 = co2356[7]*(jslider[7].getValue()+1);
										float food30 = co2356[8]*(jslider[8].getValue()+1);
										float food31 = co2356[9]*(jslider[9].getValue()+1);
										 coo2 = (food22+food23+food24+food25+food26+food27+food28+food29+food30+food31)/10;
										 name[11]=Acomm1[11];
										 sou[11]=coo2;
										 System.out.println(coo2);
										 
										 b2356[0]=food22;
										 b2356[1]=food23;
										 b2356[2]=food24;
										 b2356[3]=food25;
										 b2356[4]=food26;
										 b2356[5]=food27;
										 b2356[6]=food28;
										 b2356[7]=food29;
										 b2356[8]=food30;
										 b2356[9]=food31;
									}
									if(Acom1[c]==12){
										float food33 = co2357[0]*(jslider[0].getValue()+1);
										float food34 = co2357[1]*(jslider[1].getValue()+1);
										float food35 = co2357[2]*(jslider[2].getValue()+1);
										float food36 = co2357[3]*(jslider[3].getValue()+1);
										float food37 = co2357[4]*(jslider[4].getValue()+1);
										float food38 = co2357[5]*((jslider[5].getValue()+1)*-1);
										float food39 = co2357[6]*(jslider[6].getValue()+1);
										float food40 = co2357[7]*(jslider[7].getValue()+1);
										float food41 = co2357[8]*(jslider[8].getValue()+1);
										float food42 = co2357[9]*(jslider[9].getValue()+1);
										coo3 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										name[12]=Acomm1[12];
										sou[12]=coo3;
										System.out.println(coo3);
										
										b2357[0]=food33;
										 b2357[1]=food34;
										 b2357[2]=food35;
										 b2357[3]=food36;
										 b2357[4]=food37;
										 b2357[5]=food38;
										 b2357[6]=food39;
										 b2357[7]=food40;
										 b2357[8]=food41;
										 b2357[9]=food42;
									}
									if(Acom1[c]==13){
										float food33 = co2377[0]*(jslider[0].getValue()+1);
										float food34 = co2377[1]*(jslider[1].getValue()+1);
										float food35 = co2377[2]*(jslider[2].getValue()+1);
										float food36 = co2377[3]*(jslider[3].getValue()+1);
										float food37 = co2377[4]*(jslider[4].getValue()+1);
										float food38 = co2377[5]*((jslider[5].getValue()+1)*-1);
										float food39 = co2377[6]*(jslider[6].getValue()+1);
										float food40 = co2377[7]*(jslider[7].getValue()+1);
										float food41 = co2377[8]*(jslider[8].getValue()+1);
										float food42 = co2377[9]*(jslider[9].getValue()+1);
										coo4 = (food33+food34+food35+food36+food37+food38+food39+food40+food41+food42)/10;
										name[13]=Acomm1[13];
										sou[13]=coo4;
										System.out.println(coo4);
										
										b2377[0]=food33;
										 b2377[1]=food34;
										 b2377[2]=food35;
										 b2377[3]=food36;
										 b2377[4]=food37;
										 b2377[5]=food38;
										 b2377[6]=food39;
										 b2377[7]=food40;
										 b2377[8]=food41;
										 b2377[9]=food42;
									}

								}
								
							}
						} catch (Exception e) {
						         
						    }

						
						
						 try

						 {			            
							 
							 int l=1;

			      	 String imaa[] = {"公司名稱","ROE","ROA","純益率","毛利率","流動比率","負債比率","每股淨值",
			 				"存貨週轉率","資本週轉率", "應收帳款週轉率","總分"};
			      	 
			               WritableWorkbook workbook = Workbook.createWorkbook(new File(".//TWAMPd//htdocs//conversion//user.xls"));

			               WritableSheet sheet = workbook.createSheet("First Sheet", 0);  //工作表名稱

			               
			               WritableCellFormat cellFormat1 = new WritableCellFormat ();
			              
			               for(int x=0;x<imaa.length;x++){
				              	 for(int k=0;k<=0;k++){
				              		  Label label = new Label(x, k, imaa[x], cellFormat1);
				              		  sheet.addCell(label);
				              	 }
				               }
			               
			               
			            	   
			               for(int k=0;k<=0;k++){
			            		   for(int x=0;x<name.length;x++){
			            			   if(!(name[x]=="")){
			            				   if(l==1){
			            			   Label label1 = new Label(k, l, name[x], cellFormat1);
			            			   sheet.addCell(label1);
			            			   l++;
			            			   		}else if(l==2){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			  l++;
			            			   		}else if(l==3){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==4){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==5){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==6){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==7){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==8){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==9){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==10){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==11){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==12){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==13){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}else if(l==14){
			            			   			Label label1 = new Label(k, l, name[x], cellFormat1);
			 		            			   sheet.addCell(label1);
			 		            			   l++;
			            			   		}
					              	 	}   
			            	   		}
			               		}
			               
			               
			               l=1;
			 
			             int  n=1;
			             int  s=1;
			             float  Btotle = 0;
			             
			          			   if(!(b1201[0]==0.0)){
		            				   for(int x=0;x<b1201.length;x++){
		            					   jxl.write.Number number = new jxl.write.Number(s, n, b1201[x]/10);
				      	              		  sheet.addCell(number);
				      	              		  s++;
				      	              		  Btotle += b1201[x];
				      	              		  
		            			   		}
		            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
			      	              		  sheet.addCell(number1);
			      	              		Btotle = 0;
		            				   n++;
		            				 }
			          			   
			          			 
			          			   
					               s=1;
					               	if(!(b1216[0]==0.0)){
				            			   for(int x=0;x<b1216.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1216[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b1216[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b1217[0]==0.0)){
				            			   for(int x=0;x<b1217.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1217[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b1217[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b1233[0]==0.0)){
				            			   for(int x=0;x<b1233.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1233[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b1233[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b1234[0]==0.0)){
				            			   for(int x=0;x<b1234.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b1234[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b1234[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2201[0]==0.0)){
				            			   for(int x=0;x<b2201.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2201[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2201[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2204[0]==0.0)){
				            			   for(int x=0;x<b2204.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2204[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2204[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2206[0]==0.0)){
				            			   for(int x=0;x<b2206.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2206[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2206[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
		            		    
					               	
					               	s=1;
					               	if(!(b2207[0]==0.0)){
				            			   for(int x=0;x<b2207.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2207[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2207[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
			               
					               	s=1;
					               	if(!(b2315[0]==0.0)){
				            			   for(int x=0;x<b2315.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2315[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2315[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2353[0]==0.0)){
				            			   for(int x=0;x<b2353.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2353[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2353[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2356[0]==0.0)){
				            			   for(int x=0;x<b2356.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2356[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2356[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2357[0]==0.0)){
				            			   for(int x=0;x<b2357.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2357[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2357[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }
					               	
					               	s=1;
					               	if(!(b2377[0]==0.0)){
				            			   for(int x=0;x<b2377.length;x++){
				            				   jxl.write.Number number = new jxl.write.Number(s, n, b2377[x]/10);
						   	              		  sheet.addCell(number);
					     	              		  s++;
					     	              		  Btotle += b2377[x];
					      	              		  
			            			   		}
			            				   jxl.write.Number number1 = new jxl.write.Number(11, n, Btotle/10);
				      	              		  sheet.addCell(number1);
				      	              		Btotle = 0;
				           				   n++;
			            				 }//			               jxl.write.Number number = new jxl.write.Number(2, 10, 20);        //第幾列第幾行輸入什麼值

//				              sheet.addCell(number);      //寫入到工作表去
				               
				                

				              workbook.write();   //寫入
				              workbook.close();   //關閉

				    
				 		     try {
						    	 String path100 =  ".\\TWAMPd\\htdocs\\conversion\\user.xls";
								Runtime.getRuntime().exec("cmd /c start excel " + path100);
							} catch (IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
			    
				        
				              
				              for(int aa=0;aa<sou.length;aa++){
				            	 if(!(sou[aa]==0.0)){
				            		 System.out.println();
				            		 System.out.println(sou[aa]);
				            	 }
				              }
				              
				              for(int aa=0;aa<name.length;aa++){
				            	  System.out.println(name[aa]);
				              }
				              
				              tmap = new TreeMap<>();
								for(int y=0;y<sou.length;y++){
									tmap.put(sou[y],name[y]);
								}
								
								System.out.println("-----------"+tmap);

							 
							      
				              
				              for(int ff=0;ff<b1217.length;ff++){
					      			b1201[ff]=(float) 0.0;
					      			b1216[ff]=(float) 0.0;
					      			b1217[ff]=(float) 0.0;
					      			b1233[ff]=(float) 0.0;
					      			b1234[ff]=(float) 0.0;
					      			b2201[ff]=(float) 0.0;
					      			b2204[ff]=(float) 0.0;
					      			b2206[ff]=(float) 0.0;
					      			b2207[ff]=(float) 0.0;
					      			b2315[ff]=(float) 0.0;
					      			b2353[ff]=(float) 0.0;
					      			b2356[ff]=(float) 0.0;
					      			b2357[ff]=(float) 0.0;
					      			b2377[ff]=(float) 0.0;
					      			
					      		}
				              
				              for(int aa=0;aa<sou.length;aa++){
				            	 if(!(sou[aa]==0.0)){
				            		 System.out.println();
				            		 System.out.println(sou[aa]);
				            	 }
				              }
				              
				              for(int aa=0;aa<name.length;aa++){
				            	  System.out.println(name[aa]);
				              }
				              
				          
				              
				              for(int aa=0;aa<name.length;aa++){
				            	 name[aa]="";
				            	 sou[aa]=0;
				              }
				              
				              for(int o=0;0<=13;o++){
				            	  for(int p=0;p<=1;p++){
				            		  data[o][p]=null;
				            	  }
				              }
								 
								
				        

						}catch(IOException w)

				       {

				        //       System.out.println(a.toString());
							
						                
					   

				       }

				       catch(Exception w)

				       {

				        //       System.out.println(a.toString());   
				               

				       }	 
						
						
						
					}
		 	 });
		 	 
	  }
	  
//----------------------------------------------End Appr 程式碼----------------------
	  
	  
		Index.setCursor(new Cursor(Cursor.HAND_CURSOR));
		Sub.setCursor(new Cursor(Cursor.HAND_CURSOR));
		Com.setCursor(new Cursor(Cursor.HAND_CURSOR));
		Cal.setCursor(new Cursor(Cursor.HAND_CURSOR));
		Chart.setCursor(new Cursor(Cursor.HAND_CURSOR));
		Appr.setCursor(new Cursor(Cursor.HAND_CURSOR));
	    
		
//		Index.setBounds(0, 20, 200, 80);
		
	    //Index.setBackground(Color.green);
	    Index.setBorder(BorderFactory.createRaisedBevelBorder());
	    Index.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				tp.getModel().setSelectedIndex(0);	
			}
		}
		);
	    backpan.add(Index);
	    
	    Sub.setBorder(BorderFactory.createRaisedBevelBorder());
	    Sub.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				tp.getModel().setSelectedIndex(1);
			}
		}
		);
	    backpan.add(Sub);
	    
	    
	    Cal.setBorder(BorderFactory.createRaisedBevelBorder());
	    Cal.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				tp.getModel().setSelectedIndex(2);
			}
		}
		);
	    backpan.add(Cal);

	    
	    Com.setBorder(BorderFactory.createRaisedBevelBorder());
	    Com.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				tp.getModel().setSelectedIndex(3);
			}
		}
		);
	    backpan.add(Com);
  
	    
	    Chart.setBorder(BorderFactory.createRaisedBevelBorder());
	    Chart.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				tp.getModel().setSelectedIndex(4);
				
			}
		}
		);
	    backpan.add(Chart);
	    
	    Appr.setBorder(BorderFactory.createRaisedBevelBorder());
	    Appr.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				tp.getModel().setSelectedIndex(5);
			}
		}
		);
	    backpan.add(Appr);

	    // Center the frame
	    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
	    Dimension frameSize = this.getSize();

	    
	    
	    if (frameSize.height > screenSize.height)
	      frameSize.height = screenSize.height;

	    if (frameSize.width > screenSize.width)
	      frameSize.width = screenSize.width;

	    this.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);

	    setVisible(TRUE);
		 
		 
		 
		 ClassLoader c2 = this.getClass().getClassLoader();

		    // 設定視窗圖示
		 this.setIconImage(new ImageIcon(c2.getResource("image/java.png")).getImage());

		 
		 System.gc();
	
  }
//--------------------------------Chart function-----------------------------------
  
//-----------------------------------------------------汽車產業--------------------------------------------------	
	public void C2204(String file,String file1){
		
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
						    		 
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 }
						    		 
						    	
			 }catch(Exception e){
					System.out.println("mistake");
					}	
	}
	public void C2201(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
					    		 
					    		 if(file1=="tw-gaap-ci-2201-2010Q1.xml" || file1=="tw-gaap-ci-2201-2011Q1.xml" || file1=="tw-gaap-ci-2201-2011Q2.xml" || file1=="tw-gaap-ci-2201-2011Q4.xml"){
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivableRelatedParties");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 System.out.println("hi");
//					    		 }else if(){
					    			 
					    		 }else{
					    			 NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetNotesReceivableRelatedParties");
							    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
							    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
							    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
							    		 a9 = (aoo1/((aoo2+aoo3)/2));
							    		 System.out.println("O");
					    		 }
						    		
						    		
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 }
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
		
	}
	public void C2206(String file,String file1){
		try{
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		if(file1=="tw-gaap-ci-2206-2011Q1.xml"){
		    			NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquitiesAdjustments");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();
			    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		  System.out.println("2206 2011Q1");

		    		}else{
		    			NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();
			    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);		    			
		    		}
		    		
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
					    		 
					    		 if(file1=="tw-gaap-ci-2206-2010Q1.xml"){
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetNotesReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 System.out.println("hi");
//					    		 }else if(){
					    			 
					    	 		}else{  
					    			 NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
							    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
							    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
							    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
							    		 a9 = (aoo1/((aoo2+aoo3)/2));
							    		 System.out.println("O");
							    		 
					    		 }
						    		 
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 }
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	public void C2207(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 }
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	//-----------------------------------------------------食品產業--------------------------------------------------
	public void C1201(String file,String file1){
		try{
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		if(file1=="tw-gaap-ci-1201-2010Q1.xml"){
		    			NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		   
			    		 	
		    		}else{
		    			NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		   
			    		 
		    		}
		    		
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		  
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 
						    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		   
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		  
							    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    	
						 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 }
						    		 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	public void C1216(String file,String file1){
		try{
			
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 

		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
			    		 
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
					    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
						    		
						    	
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		
			    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 

					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
							    		
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 }
						    		 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	public void C1217(String file,String file1){
		try{DocumentBuilderFactory factory = 
	    		DocumentBuilderFactory.newInstance();
    	   		DocumentBuilder builder =
	    		factory.newDocumentBuilder();
	    		File f = new File(file,file1);
	    		Document doc = builder.parse(f);
	    		
	//------------------------------------Roe----------------------------------------------------------------------
	    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
	    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
	    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
	    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
	    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
	    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
	    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

	    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
	    		  
	    		 
	    		 
	    		
	    		
	    		
	//------------------------------------Roa----------------------------------------------------------------------    		
	    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
	    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
	    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
	    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
	    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
	    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
	    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
	    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
	    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
	    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
	    		  
	    		 
	    		 
	//------------------------------------純益率----------------------------------------------------------------------    		 
	    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
		    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
		    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
		    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
		    		  a2 = (noo1-noo2)/noo3;
		    		  
		    		
		    		 
	//------------------------------------毛益率---------------------------------------------------------------------- 
		    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
			    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
			    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
			    		  a3 =goo1/goo2;
			    		  
			    		 
			    		 
			    		 
			    		 
	//------------------------------------流動比率----------------------------------------------------------------------
			    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
				    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
				    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
				    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
				    		  a4 =cour1/cour2;
				    		
				    		 
			    		 
			    		 
			    		 
	//------------------------------------負債比率----------------------------------------------------------------------
			    		 
				    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
					    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
					    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
					    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
					    		  a5 = geo1/geo2;
					    		
					    		
			    		 
			    		 
			    		 
	//------------------------------------每股淨值---------------------------------------------------------------------- 
			    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
				    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
				    		  a6 =boo1;
				    		 
				    		 
				    		 
				    		 
				    		 
	//------------------------------------存貨週轉率----------------------------------------------------------------------
				    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
					    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
					    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
					    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
					    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
					    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
					    		
					    		
				    		 
				    		 
				    		 
				    		 
				    		 
	//------------------------------------資本週轉率----------------------------------------------------------------------
					    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
						    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

						    		  a8 = capo1/capo2;
						    		 
						    		
					    		  
				    		 
				    		 
				    		 
				    		 
				    		 
				    		 
	//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
				    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
					    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
					    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
					    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
					    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
					    		 a9 = (aoo1/((aoo2+aoo3)/2));
					    		 
					    		 
					    		 
					    		 
					    		 aa[0]=a;  
					    		 aa[1]=a1; 
					    		 aa[2]=a2; 
					    		 aa[3]=a3;  
					    		 aa[4]=a4; 
					    		 aa[5]=a5; 
					    		 aa[6]=a6;  
					    		 aa[7]=a7;  
					    		 aa[8]=a8; 
					    		 aa[9]=a9; 
		    		 

					    		 for(int i=0;i<aa.length;i++){	 
					    			 System.out.println(aa[i]);						    
					    		 }
					    		 
					    		 
					    	
		 }catch(Exception a){
				System.out.println("mistake");
				}	
	}
	public void C1233(String file,String file1){
		try{
			
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		if(file1=="tw-gaap-ci-1233-2010Q1.xml"||file1=="tw-gaap-ci-1233-2010Q3.xml"){
		    			NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:AccountsPayable_AccountsPayable");
			    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

			    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		 
			    		 
		    			
		    		}else{
		    			NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

			    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		 
			    		 
	
		    		}
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		if(file1=="tw-gaap-ci-1233-2010Q1.xml"||file1=="tw-gaap-ci-1233-2010Q3.xml"){
		    			NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:AccountsPayable_AccountsPayable");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		 
			    		 
			    		
		    		}else{
		    			NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		 
			    		 
			    			
		    		}
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		if(file1=="tw-gaap-ci-1233-2010Q1.xml"||file1=="tw-gaap-ci-1233-2010Q3.xml"){
		    			NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:AccountsPayable_AccountsPayable");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
			    		 	
			    		
		    		}else{
		    			NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
			    		 
			    		
			    		
		    		}
		    			 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
					    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
						    		
						    	
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		
			    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 

					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
							    		
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 
						    		 
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 } 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	public void C1234(String file,String file1){
		try{
			DocumentBuilderFactory factory = 
		
		DocumentBuilderFactory.newInstance();
   		DocumentBuilder builder =
		factory.newDocumentBuilder();
		File f = new File(file,file1);
		Document doc = builder.parse(f);
		
//------------------------------------Roe----------------------------------------------------------------------
		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		 
		 
		
		
		
//------------------------------------Roa----------------------------------------------------------------------    		
		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		 
		 
//------------------------------------純益率----------------------------------------------------------------------    		 
		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
    		  a2 = (noo1-noo2)/noo3;
    		
    		 
//------------------------------------毛益率---------------------------------------------------------------------- 
    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
	    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
	    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
	    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
	    		  a3 =goo1/goo2;
	    		 
	    		 
	    		 
	    		 
//------------------------------------流動比率----------------------------------------------------------------------
	    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
		    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
		    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
		    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
		    		  a4 =cour1/cour2;
		    		
		    		 
	    		 
	    		 
	    		 
	    		 
	    		 
//------------------------------------負債比率----------------------------------------------------------------------
	    		 
		    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
			    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
			    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
			    		  a5 = geo1/geo2;
			    		
			    		
	    		 
	    		 
	    		 
//------------------------------------每股淨值---------------------------------------------------------------------- 
	    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
		    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
		    		  a6 =boo1;
		    		 
		    		 
		    		 
		    		 
		    		 
//------------------------------------存貨週轉率----------------------------------------------------------------------
		    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
			    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
			    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
			    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
			    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
			    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
			    		
			    		
		    		 
		    		 
		    		 
		    		 
		    		 
//------------------------------------資本週轉率----------------------------------------------------------------------
			    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
				    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
				    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

				    		  a8 = capo1/capo2;
				    		 
				    		
			    		  
		    		 
		    		 
		    		 
		    		 
		    		 
		    		 
//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
		    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
			    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
			    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
			    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
			    		 a9 = (aoo1/((aoo2+aoo3)/2));
			    		 
			    		 
			    		 
			    		 aa[0]=a;  
			    		 aa[1]=a1; 
			    		 aa[2]=a2; 
			    		 aa[3]=a3;  
			    		 aa[4]=a4; 
			    		 aa[5]=a5; 
			    		 aa[6]=a6;  
			    		 aa[7]=a7;  
			    		 aa[8]=a8; 
			    		 aa[9]=a9; 
    		 
			    		   
			    		 for(int i=0;i<aa.length;i++){	 
			    			 System.out.println(aa[i]);						    
			    		 } 
			    	
			}catch(Exception a){
					System.out.println("mistake");
			}	
	}
//-----------------------------------------------------電腦及周邊設備--------------------------------------------------
	public void C2315(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		if(file1=="tw-gaap-ci-2315-2010Q1.xml" || file1=="tw-gaap-ci-2315-2011Q1.xml"){
		    			NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPayable");
			    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

			    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		 
			    		 
	
		    		}else{
		    			NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
			    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
			    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
			    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
			    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

			    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
			    		 
			    		 
		    			
		    		}
		    				    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		if(file1=="tw-gaap-ci-2315-2010Q1.xml" || file1=="tw-gaap-ci-2315-2011Q1.xml"){
		    			NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPayable");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		 
			    		 
		    		}else{
		    			NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
			    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
			    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
			    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
			    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
			    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
			    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
			    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
			    		 
			    		 	
		    		}
		    		
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		if(file1=="tw-gaap-ci-2315-2010Q1.xml" || file1=="tw-gaap-ci-2315-2011Q1.xml"){
		    			NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPayable");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		    		}else{
		    			NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 	
		    		}
		    		
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   
						    		   
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 } 
									    		 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	public void C2353(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:OperatingExpenses");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 
						    		 
						    		 
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 } 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
		
	}
	public void C2356(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		 
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 } 
						    	
						    		 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
		
	}
	public void C2357(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestPaid");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		if(file1=="tw-gaap-ci-2357-2010Q1.xml" || file1=="tw-gaap-ci-2357-2010Q2.xml" || file1=="tw-gaap-ci-2357-2011Q1.xml"){
					    			NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    			
					    		}else{
					    			NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:CostSales");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    			
					    		}
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		   

						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 } 
						 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	public void C2377(String file,String file1){
		try{
			
			DocumentBuilderFactory factory = 
		    		DocumentBuilderFactory.newInstance();
	    	   		DocumentBuilder builder =
		    		factory.newDocumentBuilder();
		    		File f = new File(file,file1);
		    		Document doc = builder.parse(f);
		    		
		//------------------------------------Roe----------------------------------------------------------------------
		    		NodeList roe1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roe2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roe3 = doc.getElementsByTagName("tw-gaap-ci:StockholdersEquities");
		    		float rooe1 =  Float.valueOf(roe1.item(0).getTextContent()).floatValue();
		    		 float rooe2 = Float.valueOf(roe2.item(0).getTextContent()).floatValue();
		    		 float rooe3 = Float.valueOf(roe3.item(0).getTextContent()).floatValue();
		    		 float rooe4 = Float.valueOf(roe3.item(1).getTextContent()).floatValue();

		    		  a = (rooe1-rooe2)/((rooe3+rooe4)/2);
		    		 
		    		 
		    		
		    		 
		    		
		//------------------------------------Roa----------------------------------------------------------------------    		
		    		NodeList roa1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
		    		NodeList roa2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
		    		NodeList roa3 = doc.getElementsByTagName("tw-gaap-ci:InterestExpense");
		    		NodeList roa4 = doc.getElementsByTagName("tw-gaap-ci:Assets");
		    		float roo1 =  Float.valueOf(roa1.item(0).getTextContent()).floatValue();
		    		 float roo2 = Float.valueOf(roa2.item(0).getTextContent()).floatValue();
		    		 float roo3 = Float.valueOf(roa3.item(0).getTextContent()).floatValue();
		    		 float roo4 = Float.valueOf(roa4.item(0).getTextContent()).floatValue();
		    		 float roo5 =  Float.valueOf(roa4.item(1).getTextContent()). floatValue();
		    		  a1 = (((roo1-roo2)+roo3)/((roo4+roo5)/2));
		    		 
		    		 
		//------------------------------------純益率----------------------------------------------------------------------    		 
		    		 NodeList net1 = doc.getElementsByTagName("tw-gaap-ci:IncomeContinuingOperationsBeforeIncomeTax");
			    		NodeList net2 = doc.getElementsByTagName("tw-gaap-ci:IncomeTaxPaid");
			    		NodeList net3 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
			    		float noo1 =  Float.valueOf(net1.item(0).getTextContent()).floatValue();
			    		 float noo2 = Float.valueOf(net2.item(0).getTextContent()).floatValue();
			    		 float noo3 = Float.valueOf(net3.item(0).getTextContent()).floatValue();
			    		  a2 = (noo1-noo2)/noo3;
			    		
			    		 
		//------------------------------------毛益率---------------------------------------------------------------------- 
			    		 NodeList gro1 = doc.getElementsByTagName("tw-gaap-ci:GrossProfitLossOperations");
				    		NodeList gro2 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
				    		float goo1 =  Float.valueOf(gro1.item(0).getTextContent()).floatValue();
				    		 float goo2 = Float.valueOf(gro2.item(0).getTextContent()).floatValue();
				    		  a3 =goo1/goo2;
				    		 
				    		 
				    		 
				    		 
		//------------------------------------流動比率----------------------------------------------------------------------
				    		 NodeList cur1 = doc.getElementsByTagName("tw-gaap-ci:CurrentAssets");
					    		NodeList cur2 = doc.getElementsByTagName("tw-gaap-ci:CurrentLiabilities");
					    		float cour1 =  Float.valueOf(cur1.item(0).getTextContent()).floatValue();
					    		 float cour2 = Float.valueOf(cur2.item(0).getTextContent()).floatValue();
					    		  a4 =cour1/cour2;
					    		
					    		 
				    		 
				    		 
				    		 
				    		 
				    		 
		//------------------------------------負債比率----------------------------------------------------------------------
				    		 
					    		 NodeList gea1 = doc.getElementsByTagName("tw-gaap-ci:Liabilities");
						    		NodeList gea2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
						    		float geo1 =  Float.valueOf(gea1.item(0).getTextContent()).floatValue();
						    		 float geo2 =  Float.valueOf(gea2.item(0).getTextContent()). floatValue();
						    		  a5 = geo1/geo2;
						    		
						    		
				    		 
				    		 
				    		 
		//------------------------------------每股淨值---------------------------------------------------------------------- 
				    		 NodeList book1 = doc.getElementsByTagName("tw-gaap-ci:PrimaryEarningsPerShare");
					    		float boo1 =  Float.valueOf(book1.item(0).getTextContent()).floatValue();
					    		  a6 =boo1;
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------存貨週轉率----------------------------------------------------------------------
					    		 NodeList lnv1 = doc.getElementsByTagName("tw-gaap-ci:OperatingCosts");
						    		NodeList lnv2 = doc.getElementsByTagName("tw-gaap-ci:Inventories");
						    		float lnvo1 =  Float.valueOf(lnv1.item(0).getTextContent()).floatValue();
						    		 float lnvo2 = Float.valueOf(lnv2.item(0).getTextContent()).floatValue();
						    		 float lnvo3 = Float.valueOf(lnv2.item(1).getTextContent()).floatValue();
						    		  a7 = (lnvo1/((lnvo2+lnvo3)/2));
						    		
						    		
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------資本週轉率----------------------------------------------------------------------
						    		 NodeList cap1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
							    		NodeList cap2 = doc.getElementsByTagName("tw-gaap-ci:Assets");
							    		float capo1 =  Float.valueOf(cap1.item(0).getTextContent()).floatValue();
							    		 float capo2 = Float.valueOf(cap2.item(0).getTextContent()).floatValue();

							    		  a8 = capo1/capo2;
							    		 
							    		
						    		  
					    		 
					    		 
					    		 
					    		 
					    		 
					    		 
		//------------------------------------應收帳款週轉率---------------------------------------------------------------------- 
					    		 NodeList avg1 = doc.getElementsByTagName("tw-gaap-ci:NetSales");
						    		NodeList avg2 = doc.getElementsByTagName("tw-gaap-ci:NetAccountsReceivable");
						    		float aoo1 =  Float.valueOf(avg1.item(0).getTextContent()).floatValue();
						    		 float aoo2 = Float.valueOf(avg2.item(0).getTextContent()).floatValue();
						    		 float aoo3 = Float.valueOf(avg2.item(1).getTextContent()).floatValue();
						    		 a9 = (aoo1/((aoo2+aoo3)/2));
						    		 aa[0]=a;  
						    		 aa[1]=a1; 
						    		 aa[2]=a2; 
						    		 aa[3]=a3;  
						    		 aa[4]=a4; 
						    		 aa[5]=a5; 
						    		 aa[6]=a6;  
						    		 aa[7]=a7;  
						    		 aa[8]=a8; 
						    		 aa[9]=a9; 
			    		 
						    		 
						    		 for(int i=0;i<aa.length;i++){	 
						    			 System.out.println(aa[i]);						    
						    		 } 
						  
						    		 
						    	
			 }catch(Exception a){
					System.out.println("mistake");
					}	
	}
	
	public void Line(){
	
				
	
		//產生線形圖著色
		LineAndShapeRenderer renderer1 = new LineAndShapeRenderer();
		//產生柱形圖著色
		LineAndShapeRenderer renderer2 = new LineAndShapeRenderer();
//		BarRenderer renderer2 = new BarRenderer();
		//設定X軸
		CategoryAxis domainAxis = new CategoryAxis("月份");
		//設定Y軸
		NumberAxis rangeAxis = new NumberAxis("值");
		NumberAxis rangeAxis1 = new NumberAxis("分數");
		//設定圖表
		CategoryPlot plot1 = new CategoryPlot(dataset1, domainAxis, rangeAxis,
				renderer1);
		CategoryPlot plot2 = new CategoryPlot(red(), domainAxis, rangeAxis1,
				renderer2);
		//設定聯合分類別圖表
       final CombinedDomainCategoryPlot plot = new CombinedDomainCategoryPlot(domainAxis);
       //設定聯合圖表
       	plot.add(plot2, 1);
        plot.add(plot1, 1);
        JFreeChart chart = new JFreeChart("",plot);

        
//    		JFreeChart chart = getJFreeChart();
    		// 修改字體
    		updateFont(chart);
    		
    	
				
				
				pan4.setLayout(null);
				pan4.setBounds(10,60 ,700,470);

				ChartPanel panel = new ChartPanel(chart,200,53,200,70,600,395, TRUE,TRUE,TRUE,TRUE,TRUE,TRUE);
    			panel.setBounds(0, 0, 700, 470);
    			
    			pan4.add(panel);
				panels[4].add(pan4);
				
		
	}

	private void updateFont(JFreeChart chart) {
		// 標題
		TextTitle textTitle = chart.getTitle();
		textTitle.setFont(new Font("細明體", Font.PLAIN, 20));
		LegendTitle legendTitle = chart.getLegend();
		legendTitle.setItemFont(new Font("細明體", Font.PLAIN, 14));
		// 圖表
		CategoryPlot categoryPlot = chart.getCategoryPlot();

		CategoryAxis categoryAxis = categoryPlot.getDomainAxis();
		// X軸字體
		categoryAxis.setTickLabelFont(new Font("細明體", Font.PLAIN, 11));
		// X軸標籤字體
		categoryAxis.setLabelFont(new Font("細明體", Font.PLAIN,11));
	}
public void setdata(String name,String name1,String name2,float b1,float b2,float b3,float b4,float b5,float b6 ,float b7,float b8,float b9,float b10,float b11,float b12,float b13,float b14,float b15,float b16,float b17,float b18,float b19,float b20,float b21,float b22,float b23,float b24){
		// 行關鍵字
	
		dataset.clear();
		
		final String series1 = name;
		final String series2 = name1;
		final String series3 = name2;
		
		final String category1 = "99/3";
		final String category2 = "99/6";
		final String category3 = "99/9";
		final String category4 = "99/12";
		final String category5 = "100/3";
		final String category6 = "100/6";
		final String category7 = "100/9";
		final String category8 = "100/12";

		// 建立分類別資料集
		

		dataset.addValue(b1, series1, category1);
		dataset.addValue(b2, series1, category2);
		dataset.addValue(b3, series1, category3);
		dataset.addValue(b4, series1, category4);
		dataset.addValue(b5, series1, category5);
		dataset.addValue(b6, series1, category6);
		dataset.addValue(b7, series1, category7);
		dataset.addValue(b8, series1, category8);

		dataset.addValue(b9, series2, category1);
		dataset.addValue(b10, series2, category2);
		dataset.addValue(b11, series2, category3);
		dataset.addValue(b12, series2, category4);
		dataset.addValue(b13, series2, category5);
		dataset.addValue(b14, series2, category6);
		dataset.addValue(b15, series2, category7);
		dataset.addValue(b16, series2, category8);
		
		dataset.addValue(b17, series3, category1);
		dataset.addValue(b18, series3, category2);
		dataset.addValue(b19, series3, category3);
		dataset.addValue(b20, series3, category4);
		dataset.addValue(b21, series3, category5);
		dataset.addValue(b22, series3, category6);
		dataset.addValue(b23, series3, category7);
		dataset.addValue(b24, series3, category8);

		 dataset1 = dataset;
		 
		 Line();
		 
		 
		 
		 
	}
	public CategoryDataset red(){
		// 行關鍵字
		final String series1 = "燈號分數";
		// 列關鍵字
		final String category1 = "99/3";
		final String category2 = "99/6";
		final String category3 = "99/9";
		final String category4 = "99/12";
		final String category5 = "100/3";
		final String category6 = "100/6";
		final String category7 = "100/9";
		final String category8 = "100/12";
		// 建立分類別資料集
		final DefaultCategoryDataset dataset = new DefaultCategoryDataset();

		dataset.addValue(n99[0], series1, category1);
		dataset.addValue(n99[1], series1, category2);
		dataset.addValue(n99[2], series1, category3);
		dataset.addValue(n99[3], series1, category4);
		dataset.addValue(h100[0], series1, category5);
		dataset.addValue(h100[1], series1, category6);
		dataset.addValue(h100[2], series1, category7);
		dataset.addValue(h100[3], series1, category8);
		return dataset;
	}
	public void Ra1(){
		if(cbo.getSelectedIndex()==1){
			
			if(com1.getSelectedIndex()==1){
				
				if(rat.getSelectedIndex()==1){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra1[0]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra1[1]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra1[2]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra1[3]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra1[4]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra1[5]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra1[6]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
				
			}else if(com1.getSelectedIndex()==2){
				if(rat.getSelectedIndex()==1){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra1[0]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra1[1]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra1[2]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra1[3]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra1[4]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra1[5]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra1[6]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}else if(com1.getSelectedIndex()==3){
				if(rat.getSelectedIndex()==1){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra1[0]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra1[1]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra1[2]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra1[3]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra1[4]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra1[5]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra1[6]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}else if(com1.getSelectedIndex()==4){
				if(rat.getSelectedIndex()==1){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra1[0]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra1[1]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra1[2]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra1[3]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra1[4]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra1[5]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra1[6]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
					
			}else if(com1.getSelectedIndex()==5){
				if(rat.getSelectedIndex()==1){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra1[0]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra1[1]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra1[2]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra1[3]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra1[4]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra1[5]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra1[6]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra1[7]=aa[9];
				}	
			}
			
			
		}else if(cbo.getSelectedIndex()==2){
			
			if(com1.getSelectedIndex()==1){
					
					if(rat.getSelectedIndex()==1){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[0];
					}else if(rat.getSelectedIndex()==2){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[1];
					}else if(rat.getSelectedIndex()==3){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[2];
					}else if(rat.getSelectedIndex()==4){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[3];
					}else if(rat.getSelectedIndex()==5){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[4];
					}else if(rat.getSelectedIndex()==6){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[5];
					}else if(rat.getSelectedIndex()==7){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[6];
					}else if(rat.getSelectedIndex()==8){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[7];
					}else if(rat.getSelectedIndex()==9){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[8];
					}else if(rat.getSelectedIndex()==10){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra1[0]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra1[1]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra1[2]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra1[3]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra1[4]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra1[5]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra1[6]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra1[7]=aa[9];			
					}
			}else if(com1.getSelectedIndex()==2){
				if(rat.getSelectedIndex()==1){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra1[0]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra1[1]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra1[2]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra1[3]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra1[4]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra1[5]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra1[6]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}else if(com1.getSelectedIndex()==3){
				if(rat.getSelectedIndex()==1){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra1[0]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra1[1]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra1[2]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra1[3]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra1[4]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra1[5]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra1[6]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}else if(com1.getSelectedIndex()==4){
				if(rat.getSelectedIndex()==1){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra1[0]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra1[1]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra1[2]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra1[3]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra1[4]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra1[5]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra1[6]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}
			
		}else if(cbo.getSelectedIndex()==3){
			if(com1.getSelectedIndex()==1){
				if(rat.getSelectedIndex()==1){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[0];
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[2];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[3];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[4];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[5];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[6];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[7];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[8];
					

					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra1[0]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra1[1]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra1[2]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra1[3]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra1[4]=aa[9];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra1[6]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}else if(com1.getSelectedIndex()==2){
				if(rat.getSelectedIndex()==1){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[0];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[1];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[2];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[3];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[4];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[5];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[6];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[7];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[8];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra1[0]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra1[1]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra1[2]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra1[3]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra1[4]=aa[9];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra1[6]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra1[7]=aa[9];
				}
				
				
			}else if(com1.getSelectedIndex()==3){
				if(rat.getSelectedIndex()==1){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[0];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[1];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[2];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[3];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[4];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[5];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[6];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[7];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[8];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra1[0]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra1[1]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra1[2]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra1[3]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra1[4]=aa[9];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra1[6]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra1[7]=aa[9];
				}
			}else if(com1.getSelectedIndex()==4){
				if(rat.getSelectedIndex()==1){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[0];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[1];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[2];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[3];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[4];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[5];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[6];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[7];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[8];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra1[0]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra1[1]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra1[2]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra1[3]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra1[4]=aa[9];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra1[6]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra1[7]=aa[9];
				}
			}else if(com1.getSelectedIndex()==5){
				if(rat.getSelectedIndex()==1){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[0];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[1];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[2];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[3];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[4];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[5];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[6];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[7];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[8];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra1[0]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra1[1]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra1[2]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra1[3]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra1[4]=aa[9];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra1[6]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra1[7]=aa[9];
				}
			}	
		}
		
		
	
		
	}
	
	public void Ra2(){
		if(cbo.getSelectedIndex()==1){
			
			if(com2.getSelectedIndex()==1){
				
				if(rat.getSelectedIndex()==1){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[0];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[1];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[2];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[3];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[4];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[5];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[6];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[7];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[8];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q1.xml");
					ra2[0]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q2.xml");
					ra2[1]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q3.xml");
					ra2[2]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2010Q4.xml");
					ra2[3]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q1.xml");
					ra2[4]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q2.xml");
					ra2[5]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q3.xml");
					ra2[6]=aa[9];
					C1201(".//instance//食品工業","tw-gaap-ci-1201-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
				
			}else if(com2.getSelectedIndex()==2){
				if(rat.getSelectedIndex()==1){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[0];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[1];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[2];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[3];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[4];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[5];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[6];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[7];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[8];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q1.xml");
					ra2[0]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q2.xml");
					ra2[1]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q3.xml");
					ra2[2]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2010Q4.xml");
					ra2[3]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q1.xml");
					ra2[4]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q2.xml");
					ra2[5]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q3.xml");
					ra2[6]=aa[9];
					C1216(".//instance//食品工業","tw-gaap-ci-1216-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}else if(com2.getSelectedIndex()==3){
				if(rat.getSelectedIndex()==1){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[0];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[1];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[2];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[3];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[4];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[5];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[6];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[7];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[8];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q1.xml");
					ra2[0]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q2.xml");
					ra2[1]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q3.xml");
					ra2[2]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2010Q4.xml");
					ra2[3]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q1.xml");
					ra2[4]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q2.xml");
					ra2[5]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q3.xml");
					ra2[6]=aa[9];
					C1217(".//instance//食品工業","tw-gaap-ci-1217-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}else if(com2.getSelectedIndex()==4){
				if(rat.getSelectedIndex()==1){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[0];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[1];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[2];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[3];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[4];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[5];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[6];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[7];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[8];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q1.xml");
					ra2[0]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q2.xml");
					ra2[1]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q3.xml");
					ra2[2]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2010Q4.xml");
					ra2[3]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q1.xml");
					ra2[4]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q2.xml");
					ra2[5]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q3.xml");
					ra2[6]=aa[9];
					C1233(".//instance//食品工業","tw-gaap-ci-1233-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
					
			}else if(com2.getSelectedIndex()==5){
				if(rat.getSelectedIndex()==1){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[0];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[1];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[2];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[3];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[4];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[5];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[6];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[7];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[8];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q1.xml");
					ra2[0]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q2.xml");
					ra2[1]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q3.xml");
					ra2[2]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2010Q4.xml");
					ra2[3]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q1.xml");
					ra2[4]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q2.xml");
					ra2[5]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q3.xml");
					ra2[6]=aa[9];
					C1234(".//instance//食品工業","tw-gaap-ci-1234-2011Q4.xml");
					ra2[7]=aa[9];
				}	
			}
			
			
		}else if(cbo.getSelectedIndex()==2){
			
			if(com2.getSelectedIndex()==1){
					
					if(rat.getSelectedIndex()==1){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[0];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[0];
					}else if(rat.getSelectedIndex()==2){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[1];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[1];
					}else if(rat.getSelectedIndex()==3){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[2];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[2];
					}else if(rat.getSelectedIndex()==4){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[3];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[3];
					}else if(rat.getSelectedIndex()==5){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[4];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[4];
					}else if(rat.getSelectedIndex()==6){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[5];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[5];
					}else if(rat.getSelectedIndex()==7){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[6];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[6];
					}else if(rat.getSelectedIndex()==8){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[7];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[7];
					}else if(rat.getSelectedIndex()==9){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[8];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[8];
					}else if(rat.getSelectedIndex()==10){
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q1.xml");
						ra2[0]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q2.xml");
						ra2[1]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q3.xml");
						ra2[2]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2010Q4.xml");
						ra2[3]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q1.xml");
						ra2[4]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q2.xml");
						ra2[5]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q3.xml");
						ra2[6]=aa[9];
						C2201(".//instance//汽車工業","tw-gaap-ci-2201-2011Q4.xml");
						ra2[7]=aa[9];			
					}
			}else if(com2.getSelectedIndex()==2){
				if(rat.getSelectedIndex()==1){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[0];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[1];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[2];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[3];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[4];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[5];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[6];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[7];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[8];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q1.xml");
					ra2[0]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q2.xml");
					ra2[1]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q3.xml");
					ra2[2]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2010Q4.xml");
					ra2[3]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q1.xml");
					ra2[4]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q2.xml");
					ra2[5]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q3.xml");
					ra2[6]=aa[9];
					C2204(".//instance//汽車工業","tw-gaap-ci-2204-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}else if(com2.getSelectedIndex()==3){
				if(rat.getSelectedIndex()==1){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[0];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[1];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[2];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[3];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[4];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[5];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[6];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[7];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[8];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q1.xml");
					ra2[0]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q2.xml");
					ra2[1]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q3.xml");
					ra2[2]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2010Q4.xml");
					ra2[3]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q1.xml");
					ra2[4]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q2.xml");
					ra2[5]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q3.xml");
					ra2[6]=aa[9];
					C2206(".//instance//汽車工業","tw-gaap-ci-2206-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}else if(com2.getSelectedIndex()==4){
				if(rat.getSelectedIndex()==1){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[0];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[1];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[2];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[3];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[4];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[5];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[6];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[7];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[8];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q1.xml");
					ra2[0]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q2.xml");
					ra2[1]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q3.xml");
					ra2[2]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2010Q4.xml");
					ra2[3]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q1.xml");
					ra2[4]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q2.xml");
					ra2[5]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q3.xml");
					ra2[6]=aa[9];
					C2207(".//instance//汽車工業","tw-gaap-ci-2207-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}
			
		}else if(cbo.getSelectedIndex()==3){
			if(com2.getSelectedIndex()==1){
				if(rat.getSelectedIndex()==1){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[0];
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[0];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[1];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[2];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[2];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[3];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[3];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[4];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[4];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[5];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[5];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[6];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[6];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[7];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[7];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[8];
					

					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[8];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q1.xml");
					ra2[0]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q2.xml");
					ra2[1]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q3.xml");
					ra2[2]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2010Q4.xml");
					ra2[3]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q1.xml");
					ra2[4]=aa[9];
					
					
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q3.xml");
					ra2[6]=aa[9];
					C2315(".//instance//電腦及週邊設備業","tw-gaap-ci-2315-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}else if(com2.getSelectedIndex()==2){
				if(rat.getSelectedIndex()==1){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[0];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[0];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[1];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[1];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[2];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[2];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[3];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[3];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[4];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[4];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[5];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[5];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[6];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[6];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[7];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[7];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[8];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[8];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q1.xml");
					ra2[0]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q2.xml");
					ra2[1]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q3.xml");
					ra2[2]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2010Q4.xml");
					ra2[3]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q1.xml");
					ra2[4]=aa[9];
					
					
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q3.xml");
					ra2[6]=aa[9];
					C2353(".//instance//電腦及週邊設備業","tw-gaap-ci-2353-2011Q4.xml");
					ra2[7]=aa[9];
				}
				
				
			}else if(com2.getSelectedIndex()==3){
				if(rat.getSelectedIndex()==1){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[0];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[0];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[1];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[1];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[2];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[2];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[3];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[3];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[4];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[4];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[5];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[5];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[6];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[6];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[7];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[7];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[8];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[8];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q1.xml");
					ra2[0]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q2.xml");
					ra2[1]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q3.xml");
					ra2[2]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2010Q4.xml");
					ra2[3]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q1.xml");
					ra2[4]=aa[9];
					
					
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q3.xml");
					ra2[6]=aa[9];
					C2356(".//instance//電腦及週邊設備業","tw-gaap-ci-2356-2011Q4.xml");
					ra2[7]=aa[9];
				}
			}else if(com2.getSelectedIndex()==4){
				if(rat.getSelectedIndex()==1){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[0];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[0];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[1];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[1];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[2];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[2];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[3];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[3];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[4];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[4];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[5];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[5];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[6];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[6];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[7];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[7];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[8];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[8];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q1.xml");
					ra2[0]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q2.xml");
					ra2[1]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q3.xml");
					ra2[2]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2010Q4.xml");
					ra2[3]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q1.xml");
					ra2[4]=aa[9];
					
					
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q3.xml");
					ra2[6]=aa[9];
					C2357(".//instance//電腦及週邊設備業","tw-gaap-ci-2357-2011Q4.xml");
					ra2[7]=aa[9];
				}
			}else if(com2.getSelectedIndex()==5){
				if(rat.getSelectedIndex()==1){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[0];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[0];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[0];
				}else if(rat.getSelectedIndex()==2){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[1];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[1];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[1];
				}else if(rat.getSelectedIndex()==3){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[2];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[2];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[2];
				}else if(rat.getSelectedIndex()==4){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[3];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[3];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[3];
				}else if(rat.getSelectedIndex()==5){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[4];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[4];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[4];
				}else if(rat.getSelectedIndex()==6){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[5];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[5];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[5];
				}else if(rat.getSelectedIndex()==7){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[6];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[6];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[6];
				}else if(rat.getSelectedIndex()==8){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[7];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[7];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[7];
				}else if(rat.getSelectedIndex()==9){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[8];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[8];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[8];
				}else if(rat.getSelectedIndex()==10){
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q1.xml");
					ra2[0]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q2.xml");
					ra2[1]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q3.xml");
					ra2[2]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2010Q4.xml");
					ra2[3]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q1.xml");
					ra2[4]=aa[9];
					
					
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q3.xml");
					ra2[6]=aa[9];
					C2377(".//instance//電腦及週邊設備業","tw-gaap-ci-2377-2011Q4.xml");
					ra2[7]=aa[9];
				}
			}	
		}

	}
  
//----------------------------End  Chart function-----------------------------------
 
//----------------------------Appr function-----------------------------------
	 public void table()
		{

		 
			int count=0;	
			for(int y=0;y<name.length;y++){
				if(!(name[y]=="")){
					count += 1;
				}
				name[y]="";
				sou[y]=(float) 0.0;
			}
			int abc =0;

		    System.out.println( "排序後的資料如下(以降冪輸出)：" );
		    Object[] objs = tmap.keySet().toArray();
		    int size = objs.length;
		    for ( int i = ( size - 1 ); i >= 0; i-- ) {
		        Float key = NumberUtils.createFloat( ObjectUtils.toString( objs[i] ) );
		        sou[abc] = key;
		        name[abc]=tmap.get(key);
		        System.out.println( key + " = " + tmap.get( key ) );
		        abc++;
		    }
			
			
		    for(int y=0;y<name.length;y++){
		    	 System.out.println(tmouth[y]+"="+tname[y]);
		     }
			
			if(!(name[0]=="")){
				if(data[0][0]==null){
					data[0][0]=name[0];
				}else if(data[1][0]==null){
					data[1][0]=name[0];
				}else if(data[2][0]==null){
					data[2][0]=name[0];
				}else if(data[3][0]==null){
					data[3][0]=name[0];
				}else if(data[4][0]==null){
					data[4][0]=name[0];
				}else if(data[5][0]==null){
					data[5][0]=name[0];
				}else if(data[6][0]==null){
					data[6][0]=name[0];
				}else if(data[7][0]==null){
					data[7][0]=name[0];
				}else if(data[8][0]==null){
					data[8][0]=name[0];
				}else if(data[9][0]==null){
					data[9][0]=name[0];
				}else if(data[10][0]==null){
					data[10][0]=name[0];
				}else if(data[11][0]==null){
					data[11][0]=name[0];
				}else if(data[12][0]==null){
					data[12][0]=name[0];
				}else if(data[13][0]==null){
					data[13][0]=name[0];
				}
			}
			 if(!(name[1]=="")){
				if(data[0][0]==null){
					data[0][0]=name[1];
				}else if(data[1][0]==null){
					data[1][0]=name[1];
				}else if(data[2][0]==null){
					data[2][0]=name[1];
				}else if(data[3][0]==null){
					data[3][0]=name[1];
				}else if(data[4][0]==null){
					data[4][0]=name[1];
				}else if(data[5][0]==null){
					data[5][0]=name[1];
				}else if(data[6][0]==null){
					data[6][0]=name[1];
				}else if(data[7][0]==null){
					data[7][0]=name[1];
				}else if(data[8][0]==null){
					data[8][0]=name[1];
				}else if(data[9][0]==null){
					data[9][0]=name[1];
				}else if(data[10][0]==null){
					data[10][0]=name[1];
				}else if(data[11][0]==null){
					data[11][0]=name[1];
				}else if(data[12][0]==null){
					data[12][0]=name[1];
				}else if(data[13][0]==null){
					data[13][0]=name[1];
				}
			 }
			 if(!(name[2]=="")){
				if(data[0][0]==null){
					data[0][0]=name[2];
				}else if(data[1][0]==null){
					data[1][0]=name[2];
				}else if(data[2][0]==null){
					data[2][0]=name[2];
				}else if(data[3][0]==null){
					data[3][0]=name[2];
				}else if(data[4][0]==null){
					data[4][0]=name[2];
				}else if(data[5][0]==null){
					data[5][0]=name[2];
				}else if(data[6][0]==null){
					data[6][0]=name[2];
				}else if(data[7][0]==null){
					data[7][0]=name[2];
				}else if(data[8][0]==null){
					data[8][0]=name[2];
				}else if(data[9][0]==null){
					data[9][0]=name[2];
				}else if(data[10][0]==null){
					data[10][0]=name[2];
				}else if(data[11][0]==null){
					data[11][0]=name[2];
				}else if(data[12][0]==null){
					data[12][0]=name[2];
				}else if(data[13][0]==null){
					data[13][0]=name[2];
				}
			}
		
			
			 
			 if(!(name[3]=="")){
					if(data[0][0]==null){
						data[0][0]=name[3];
					}else if(data[1][0]==null){
						data[1][0]=name[3];
					}else if(data[2][0]==null){
						data[2][0]=name[3];
					}else if(data[3][0]==null){
						data[3][0]=name[3];
					}else if(data[4][0]==null){
						data[4][0]=name[3];
					}else if(data[5][0]==null){
						data[5][0]=name[3];
					}else if(data[6][0]==null){
						data[6][0]=name[3];
					}else if(data[7][0]==null){
						data[7][0]=name[3];
					}else if(data[8][0]==null){
						data[8][0]=name[3];
					}else if(data[9][0]==null){
						data[9][0]=name[3];
					}else if(data[10][0]==null){
						data[10][0]=name[3];
					}else if(data[11][0]==null){
						data[11][0]=name[3];
					}else if(data[12][0]==null){
						data[12][0]=name[3];
					}else if(data[13][0]==null){
						data[13][0]=name[3];
					}
				}
				
				if(!(name[4]=="")){
					if(data[0][0]==null){
						data[0][0]=name[4];
					}else if(data[1][0]==null){
						data[1][0]=name[4];
					}else if(data[2][0]==null){
						data[2][0]=name[4];
					}else if(data[3][0]==null){
						data[3][0]=name[4];
					}else if(data[4][0]==null){
						data[4][0]=name[4];
					}else if(data[5][0]==null){
						data[5][0]=name[4];
					}else if(data[6][0]==null){
						data[6][0]=name[4];
					}else if(data[7][0]==null){
						data[7][0]=name[4];
					}else if(data[8][0]==null){
						data[8][0]=name[4];
					}else if(data[9][0]==null){
						data[9][0]=name[4];
					}else if(data[10][0]==null){
						data[10][0]=name[4];
					}else if(data[11][0]==null){
						data[11][0]=name[4];
					}else if(data[12][0]==null){
						data[12][0]=name[4];
					}else if(data[13][0]==null){
						data[13][0]=name[4];
					}
				}
				
				if(!(name[5]=="")){
					if(data[0][0]==null){
						data[0][0]=name[5];
					}else if(data[1][0]==null){
						data[1][0]=name[5];
					}else if(data[2][0]==null){
						data[2][0]=name[5];
					}else if(data[3][0]==null){
						data[3][0]=name[5];
					}else if(data[4][0]==null){
						data[4][0]=name[5];
					}else if(data[5][0]==null){
						data[5][0]=name[5];
					}else if(data[6][0]==null){
						data[6][0]=name[5];
					}else if(data[7][0]==null){
						data[7][0]=name[5];
					}else if(data[8][0]==null){
						data[8][0]=name[5];
					}else if(data[9][0]==null){
						data[9][0]=name[5];
					}else if(data[10][0]==null){
						data[10][0]=name[5];
					}else if(data[11][0]==null){
						data[11][0]=name[5];
					}else if(data[12][0]==null){
						data[12][0]=name[5];
					}else if(data[13][0]==null){
						data[13][0]=name[5];
					}
				}
				
				if(!(name[6]=="")){
					if(data[0][0]==null){
						data[0][0]=name[6];
					}else if(data[1][0]==null){
						data[1][0]=name[6];
					}else if(data[2][0]==null){
						data[2][0]=name[6];
					}else if(data[3][0]==null){
						data[3][0]=name[6];
					}else if(data[4][0]==null){
						data[4][0]=name[6];
					}else if(data[5][0]==null){
						data[5][0]=name[6];
					}else if(data[6][0]==null){
						data[6][0]=name[6];
					}else if(data[7][0]==null){
						data[7][0]=name[6];
					}else if(data[8][0]==null){
						data[8][0]=name[6];
					}else if(data[9][0]==null){
						data[9][0]=name[6];
					}else if(data[10][0]==null){
						data[10][0]=name[6];
					}else if(data[11][0]==null){
						data[11][0]=name[6];
					}else if(data[12][0]==null){
						data[12][0]=name[6];
					}else if(data[13][0]==null){
						data[13][0]=name[6];
					}
				}
				
				if(!(name[7]=="")){
					if(data[0][0]==null){
						data[0][0]=name[7];
					}else if(data[1][0]==null){
						data[1][0]=name[7];
					}else if(data[2][0]==null){
						data[2][0]=name[7];
					}else if(data[3][0]==null){
						data[3][0]=name[7];
					}else if(data[4][0]==null){
						data[4][0]=name[7];
					}else if(data[5][0]==null){
						data[5][0]=name[7];
					}else if(data[6][0]==null){
						data[6][0]=name[7];
					}else if(data[7][0]==null){
						data[7][0]=name[7];
					}else if(data[8][0]==null){
						data[8][0]=name[7];
					}else if(data[9][0]==null){
						data[9][0]=name[7];
					}else if(data[10][0]==null){
						data[10][0]=name[7];
					}else if(data[11][0]==null){
						data[11][0]=name[7];
					}else if(data[12][0]==null){
						data[12][0]=name[7];
					}else if(data[13][0]==null){
						data[13][0]=name[7];
					}
				}
				
				if(!(name[8]=="")){
					if(data[0][0]==null){
						data[0][0]=name[8];
					}else if(data[1][0]==null){
						data[1][0]=name[8];
					}else if(data[2][0]==null){
						data[2][0]=name[8];
					}else if(data[3][0]==null){
						data[3][0]=name[8];
					}else if(data[4][0]==null){
						data[4][0]=name[8];
					}else if(data[5][0]==null){
						data[5][0]=name[8];
					}else if(data[6][0]==null){
						data[6][0]=name[8];
					}else if(data[7][0]==null){
						data[7][0]=name[8];
					}else if(data[8][0]==null){
						data[8][0]=name[8];
					}else if(data[9][0]==null){
						data[9][0]=name[8];
					}else if(data[10][0]==null){
						data[10][0]=name[8];
					}else if(data[11][0]==null){
						data[11][0]=name[8];
					}else if(data[12][0]==null){
						data[12][0]=name[8];
					}else if(data[13][0]==null){
						data[13][0]=name[8];
					}
				}
				
				if(!(name[9]=="")){
					if(data[0][0]==null){
						data[0][0]=name[9];
					}else if(data[1][0]==null){
						data[1][0]=name[9];
					}else if(data[2][0]==null){
						data[2][0]=name[9];
					}else if(data[3][0]==null){
						data[3][0]=name[9];
					}else if(data[4][0]==null){
						data[4][0]=name[9];
					}else if(data[5][0]==null){
						data[5][0]=name[9];
					}else if(data[6][0]==null){
						data[6][0]=name[9];
					}else if(data[7][0]==null){
						data[7][0]=name[9];
					}else if(data[8][0]==null){
						data[8][0]=name[9];
					}else if(data[9][0]==null){
						data[9][0]=name[9];
					}else if(data[10][0]==null){
						data[10][0]=name[9];
					}else if(data[11][0]==null){
						data[11][0]=name[9];
					}else if(data[12][0]==null){
						data[12][0]=name[9];
					}else if(data[13][0]==null){
						data[13][0]=name[9];
					}
				}
				
				if(!(name[10]=="")){
					if(data[0][0]==null){
						data[0][0]=name[10];
					}else if(data[1][0]==null){
						data[1][0]=name[10];
					}else if(data[2][0]==null){
						data[2][0]=name[10];
					}else if(data[3][0]==null){
						data[3][0]=name[10];
					}else if(data[4][0]==null){
						data[4][0]=name[10];
					}else if(data[5][0]==null){
						data[5][0]=name[10];
					}else if(data[6][0]==null){
						data[6][0]=name[10];
					}else if(data[7][0]==null){
						data[7][0]=name[10];
					}else if(data[8][0]==null){
						data[8][0]=name[10];
					}else if(data[9][0]==null){
						data[9][0]=name[10];
					}else if(data[10][0]==null){
						data[10][0]=name[10];
					}else if(data[11][0]==null){
						data[11][0]=name[10];
					}else if(data[12][0]==null){
						data[12][0]=name[10];
					}else if(data[13][0]==null){
						data[13][0]=name[10];
					}
				}
				
				if(!(name[11]=="")){
					if(data[0][0]==null){
						data[0][0]=name[11];
					}else if(data[1][0]==null){
						data[1][0]=name[11];
					}else if(data[2][0]==null){
						data[2][0]=name[11];
					}else if(data[3][0]==null){
						data[3][0]=name[11];
					}else if(data[4][0]==null){
						data[4][0]=name[11];
					}else if(data[5][0]==null){
						data[5][0]=name[11];
					}else if(data[6][0]==null){
						data[6][0]=name[11];
					}else if(data[7][0]==null){
						data[7][0]=name[11];
					}else if(data[8][0]==null){
						data[8][0]=name[11];
					}else if(data[9][0]==null){
						data[9][0]=name[11];
					}else if(data[10][0]==null){
						data[10][0]=name[11];
					}else if(data[11][0]==null){
						data[11][0]=name[11];
					}else if(data[12][0]==null){
						data[12][0]=name[11];
					}else if(data[13][0]==null){
						data[13][0]=name[11];
					}
				}
				
				if(!(name[12]=="")){
					if(data[0][0]==null){
						data[0][0]=name[12];
					}else if(data[1][0]==null){
						data[1][0]=name[12];
					}else if(data[2][0]==null){
						data[2][0]=name[12];
					}else if(data[3][0]==null){
						data[3][0]=name[12];
					}else if(data[4][0]==null){
						data[4][0]=name[12];
					}else if(data[5][0]==null){
						data[5][0]=name[12];
					}else if(data[6][0]==null){
						data[6][0]=name[12];
					}else if(data[7][0]==null){
						data[7][0]=name[12];
					}else if(data[8][0]==null){
						data[8][0]=name[12];
					}else if(data[9][0]==null){
						data[9][0]=name[12];
					}else if(data[10][0]==null){
						data[10][0]=name[12];
					}else if(data[11][0]==null){
						data[11][0]=name[12];
					}else if(data[12][0]==null){
						data[12][0]=name[12];
					}else if(data[13][0]==null){
						data[13][0]=name[12];
					}
				}
				
				if(!(name[13]=="")){
					if(data[0][0]==null){
						data[0][0]=name[13];
					}else if(data[1][0]==null){
						data[1][0]=name[13];
					}else if(data[2][0]==null){
						data[2][0]=name[13];
					}else if(data[3][0]==null){
						data[3][0]=name[13];
					}else if(data[4][0]==null){
						data[4][0]=name[13];
					}else if(data[5][0]==null){
						data[5][0]=name[13];
					}else if(data[6][0]==null){
						data[6][0]=name[13];
					}else if(data[7][0]==null){
						data[7][0]=name[13];
					}else if(data[8][0]==null){
						data[8][0]=name[13];
					}else if(data[9][0]==null){
						data[9][0]=name[13];
					}else if(data[10][0]==null){
						data[10][0]=name[13];
					}else if(data[11][0]==null){
						data[11][0]=name[13];
					}else if(data[12][0]==null){
						data[12][0]=name[13];
					}else if(data[13][0]==null){
						data[13][0]=name[13];
					}
				} 
			 
			 
			 
			 if(!(sou[0]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[0];
					}else if(data[1][1]==null){
						data[1][1]=sou[0];
					}else if(data[2][1]==null){
						data[2][1]=sou[0];
					}else if(data[3][1]==null){
						data[3][1]=sou[0];
					}else if(data[4][1]==null){
						data[4][1]=sou[0];
					}else if(data[5][1]==null){
						data[5][1]=sou[0];
					}else if(data[6][1]==null){
						data[6][1]=sou[0];
					}else if(data[7][1]==null){
						data[7][1]=sou[0];
					}else if(data[8][1]==null){
						data[8][1]=sou[0];
					}else if(data[9][1]==null){
						data[9][1]=sou[0];
					}else if(data[10][1]==null){
						data[10][1]=sou[0];
					}else if(data[11][1]==null){
						data[11][1]=sou[0];
					}else if(data[12][1]==null){
						data[12][1]=sou[0];
					}else if(data[13][1]==null){
						data[13][1]=sou[0];
					}
				}
			 
			 
			 
			 if(!(sou[1]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[1];
					}else if(data[1][1]==null){
						data[1][1]=sou[1];
					}else if(data[2][1]==null){
						data[2][1]=sou[1];
					}else if(data[3][1]==null){
						data[3][1]=sou[1];
					}else if(data[4][1]==null){
						data[4][1]=sou[1];
					}else if(data[5][1]==null){
						data[5][1]=sou[1];
					}else if(data[6][1]==null){
						data[6][1]=sou[1];
					}else if(data[7][1]==null){
						data[7][1]=sou[1];
					}else if(data[8][1]==null){
						data[8][1]=sou[1];
					}else if(data[9][1]==null){
						data[9][1]=sou[1];
					}else if(data[10][1]==null){
						data[10][1]=sou[1];
					}else if(data[11][1]==null){
						data[11][1]=sou[1];
					}else if(data[12][1]==null){
						data[12][1]=sou[1];
					}else if(data[13][1]==null){
						data[13][1]=sou[1];
					}
				}
			 
			 
			 if(!(sou[2]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[2];
					}else if(data[1][1]==null){
						data[1][1]=sou[2];
					}else if(data[2][1]==null){
						data[2][1]=sou[2];
					}else if(data[3][1]==null){
						data[3][1]=sou[2];
					}else if(data[4][1]==null){
						data[4][1]=sou[2];
					}else if(data[5][1]==null){
						data[5][1]=sou[2];
					}else if(data[6][1]==null){
						data[6][1]=sou[2];
					}else if(data[7][1]==null){
						data[7][1]=sou[2];
					}else if(data[8][1]==null){
						data[8][1]=sou[2];
					}else if(data[9][1]==null){
						data[9][1]=sou[2];
					}else if(data[10][1]==null){
						data[10][1]=sou[2];
					}else if(data[11][1]==null){
						data[11][1]=sou[2];
					}else if(data[12][1]==null){
						data[12][1]=sou[2];
					}else if(data[13][1]==null){
						data[13][1]=sou[2];
					}
				}
			 
			 
			 if(!(sou[3]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[3];
					}else if(data[1][1]==null){
						data[1][1]=sou[3];
					}else if(data[2][1]==null){
						data[2][1]=sou[3];
					}else if(data[3][1]==null){
						data[3][1]=sou[3];
					}else if(data[4][1]==null){
						data[4][1]=sou[3];
					}else if(data[5][1]==null){
						data[5][1]=sou[3];
					}else if(data[6][1]==null){
						data[6][1]=sou[3];
					}else if(data[7][1]==null){
						data[7][1]=sou[3];
					}else if(data[8][1]==null){
						data[8][1]=sou[3];
					}else if(data[9][1]==null){
						data[9][1]=sou[3];
					}else if(data[10][1]==null){
						data[10][1]=sou[3];
					}else if(data[11][1]==null){
						data[11][1]=sou[3];
					}else if(data[12][1]==null){
						data[12][1]=sou[3];
					}else if(data[13][1]==null){
						data[13][1]=sou[3];
					}
				}
				
				
				if(!(sou[4]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[4];
					}else if(data[1][1]==null){
						data[1][1]=sou[4];
					}else if(data[2][1]==null){
						data[2][1]=sou[4];
					}else if(data[3][1]==null){
						data[3][1]=sou[4];
					}else if(data[4][1]==null){
						data[4][1]=sou[4];
					}else if(data[5][1]==null){
						data[5][1]=sou[4];
					}else if(data[6][1]==null){
						data[6][1]=sou[4];
					}else if(data[7][1]==null){
						data[7][1]=sou[4];
					}else if(data[8][1]==null){
						data[8][1]=sou[4];
					}else if(data[9][1]==null){
						data[9][1]=sou[4];
					}else if(data[10][1]==null){
						data[10][1]=sou[4];
					}else if(data[11][1]==null){
						data[11][1]=sou[4];
					}else if(data[12][1]==null){
						data[12][1]=sou[4];
					}else if(data[13][1]==null){
						data[13][1]=sou[4];
					}
				}
				
				if(!(sou[5]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[5];
					}else if(data[1][1]==null){
						data[1][1]=sou[5];
					}else if(data[2][1]==null){
						data[2][1]=sou[5];
					}else if(data[3][1]==null){
						data[3][1]=sou[5];
					}else if(data[4][1]==null){
						data[4][1]=sou[5];
					}else if(data[5][1]==null){
						data[5][1]=sou[5];
					}else if(data[6][1]==null){
						data[6][1]=sou[5];
					}else if(data[7][1]==null){
						data[7][1]=sou[5];
					}else if(data[8][1]==null){
						data[8][1]=sou[5];
					}else if(data[9][1]==null){
						data[9][1]=sou[5];
					}else if(data[10][1]==null){
						data[10][1]=sou[5];
					}else if(data[11][1]==null){
						data[11][1]=sou[5];
					}else if(data[12][1]==null){
						data[12][1]=sou[5];
					}else if(data[13][1]==null){
						data[13][1]=sou[5];
					}
				}
				
				if(!(sou[6]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[6];
					}else if(data[1][1]==null){
						data[1][1]=sou[6];
					}else if(data[2][1]==null){
						data[2][1]=sou[6];
					}else if(data[3][1]==null){
						data[3][1]=sou[6];
					}else if(data[4][1]==null){
						data[4][1]=sou[6];
					}else if(data[5][1]==null){
						data[5][1]=sou[6];
					}else if(data[6][1]==null){
						data[6][1]=sou[6];
					}else if(data[7][1]==null){
						data[7][1]=sou[6];
					}else if(data[8][1]==null){
						data[8][1]=sou[6];
					}else if(data[9][1]==null){
						data[9][1]=sou[6];
					}else if(data[10][1]==null){
						data[10][1]=sou[6];
					}else if(data[11][1]==null){
						data[11][1]=sou[6];
					}else if(data[12][1]==null){
						data[12][1]=sou[6];
					}else if(data[13][1]==null){
						data[13][1]=sou[6];
					}
				}
				
				if(!(sou[7]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[7];
					}else if(data[1][1]==null){
						data[1][1]=sou[7];
					}else if(data[2][1]==null){
						data[2][1]=sou[7];
					}else if(data[3][1]==null){
						data[3][1]=sou[7];
					}else if(data[4][1]==null){
						data[4][1]=sou[7];
					}else if(data[5][1]==null){
						data[5][1]=sou[7];
					}else if(data[6][1]==null){
						data[6][1]=sou[7];
					}else if(data[7][1]==null){
						data[7][1]=sou[7];
					}else if(data[8][1]==null){
						data[8][1]=sou[7];
					}else if(data[9][1]==null){
						data[9][1]=sou[7];
					}else if(data[10][1]==null){
						data[10][1]=sou[7];
					}else if(data[11][1]==null){
						data[11][1]=sou[7];
					}else if(data[12][1]==null){
						data[12][1]=sou[7];
					}else if(data[13][1]==null){
						data[13][1]=sou[7];
					}
				}
				if(!(sou[8]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[8];
					}else if(data[1][1]==null){
						data[1][1]=sou[8];
					}else if(data[2][1]==null){
						data[2][1]=sou[8];
					}else if(data[3][1]==null){
						data[3][1]=sou[8];
					}else if(data[4][1]==null){
						data[4][1]=sou[8];
					}else if(data[5][1]==null){
						data[5][1]=sou[8];
					}else if(data[6][1]==null){
						data[6][1]=sou[8];
					}else if(data[7][1]==null){
						data[7][1]=sou[8];
					}else if(data[8][1]==null){
						data[8][1]=sou[8];
					}else if(data[9][1]==null){
						data[9][1]=sou[8];
					}else if(data[10][1]==null){
						data[10][1]=sou[8];
					}else if(data[11][1]==null){
						data[11][1]=sou[8];
					}else if(data[12][1]==null){
						data[12][1]=sou[8];
					}else if(data[13][1]==null){
						data[13][1]=sou[8];
					}
				}
				
				if(!(sou[9]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[9];
					}else if(data[1][1]==null){
						data[1][1]=sou[9];
					}else if(data[2][1]==null){
						data[2][1]=sou[9];
					}else if(data[3][1]==null){
						data[3][1]=sou[9];
					}else if(data[4][1]==null){
						data[4][1]=sou[9];
					}else if(data[5][1]==null){
						data[5][1]=sou[9];
					}else if(data[6][1]==null){
						data[6][1]=sou[9];
					}else if(data[7][1]==null){
						data[7][1]=sou[9];
					}else if(data[8][1]==null){
						data[8][1]=sou[9];
					}else if(data[9][1]==null){
						data[9][1]=sou[9];
					}else if(data[10][1]==null){
						data[10][1]=sou[9];
					}else if(data[11][1]==null){
						data[11][1]=sou[9];
					}else if(data[12][1]==null){
						data[12][1]=sou[9];
					}else if(data[13][1]==null){
						data[13][1]=sou[9];
					}
				}
				
				if(!(sou[10]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[10];
					}else if(data[1][1]==null){
						data[1][1]=sou[10];
					}else if(data[2][1]==null){
						data[2][1]=sou[10];
					}else if(data[3][1]==null){
						data[3][1]=sou[10];
					}else if(data[4][1]==null){
						data[4][1]=sou[10];
					}else if(data[5][1]==null){
						data[5][1]=sou[10];
					}else if(data[6][1]==null){
						data[6][1]=sou[10];
					}else if(data[7][1]==null){
						data[7][1]=sou[10];
					}else if(data[8][1]==null){
						data[8][1]=sou[10];
					}else if(data[9][1]==null){
						data[9][1]=sou[10];
					}else if(data[10][1]==null){
						data[10][1]=sou[10];
					}else if(data[11][1]==null){
						data[11][1]=sou[10];
					}else if(data[12][1]==null){
						data[12][1]=sou[10];
					}else if(data[13][1]==null){
						data[13][1]=sou[10];
					}
				}
				
				if(!(sou[11]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[11];
					}else if(data[1][1]==null){
						data[1][1]=sou[11];
					}else if(data[2][1]==null){
						data[2][1]=sou[11];
					}else if(data[3][1]==null){
						data[3][1]=sou[11];
					}else if(data[4][1]==null){
						data[4][1]=sou[11];
					}else if(data[5][1]==null){
						data[5][1]=sou[11];
					}else if(data[6][1]==null){
						data[6][1]=sou[11];
					}else if(data[7][1]==null){
						data[7][1]=sou[11];
					}else if(data[8][1]==null){
						data[8][1]=sou[11];
					}else if(data[9][1]==null){
						data[9][1]=sou[11];
					}else if(data[10][1]==null){
						data[10][1]=sou[11];
					}else if(data[11][1]==null){
						data[11][1]=sou[11];
					}else if(data[12][1]==null){
						data[12][1]=sou[11];
					}else if(data[13][1]==null){
						data[13][1]=sou[11];
					}
				}
				if(!(sou[12]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[12];
					}else if(data[1][1]==null){
						data[1][1]=sou[12];
					}else if(data[2][1]==null){
						data[2][1]=sou[12];
					}else if(data[3][1]==null){
						data[3][1]=sou[12];
					}else if(data[4][1]==null){
						data[4][1]=sou[12];
					}else if(data[5][1]==null){
						data[5][1]=sou[12];
					}else if(data[6][1]==null){
						data[6][1]=sou[12];
					}else if(data[7][1]==null){
						data[7][1]=sou[12];
					}else if(data[8][1]==null){
						data[8][1]=sou[12];
					}else if(data[9][1]==null){
						data[9][1]=sou[12];
					}else if(data[10][1]==null){
						data[10][1]=sou[12];
					}else if(data[11][1]==null){
						data[11][1]=sou[12];
					}else if(data[12][1]==null){
						data[12][1]=sou[12];
					}else if(data[13][1]==null){
						data[13][1]=sou[12];
					}
				}
				if(!(sou[13]==0.0)){
					if(data[0][1]==null){
						data[0][1]=sou[13];
					}else if(data[1][1]==null){
						data[1][1]=sou[13];
					}else if(data[2][1]==null){
						data[2][1]=sou[13];
					}else if(data[3][1]==null){
						data[3][1]=sou[13];
					}else if(data[4][1]==null){
						data[4][1]=sou[13];
					}else if(data[5][1]==null){
						data[5][1]=sou[13];
					}else if(data[6][1]==null){
						data[6][1]=sou[13];
					}else if(data[7][1]==null){
						data[7][1]=sou[13];
					}else if(data[8][1]==null){
						data[8][1]=sou[13];
					}else if(data[9][1]==null){
						data[9][1]=sou[13];
					}else if(data[10][1]==null){
						data[10][1]=sou[13];
					}else if(data[11][1]==null){
						data[11][1]=sou[13];
					}else if(data[12][1]==null){
						data[12][1]=sou[13];
					}else if(data[13][1]==null){
						data[13][1]=sou[13];
					}
				}
		
					if(pane.isVisible()==true){
					pane.setVisible(false);
					}
				 	Object[] clomnName = {"公司名稱","評比分數"};
					//初始化TableModel，使用數據data，列名clomnName
					model = new DefaultTableModel(data, clomnName);
					
					//使用上面的model作??數初始化JTabel
					table = new JTable(model);
					//初始化JScrollPane
					pane = new JScrollPane();
					//將table添加到JScrollPane上 這裏使用下面的第一種方法不能添加
					//使用第一個先獲得JViewPort對象，然後再添加
					//pane.add(table);
					pane.getViewport().add(table);
					pane.setBounds(630, 12, 300, 247);
					pane.setVisible(true);
					panels[5].add(pane);

				
					
	
		}
	 public void csv(){
			
		    try {
		    		
			      OutputStream os = new FileOutputStream(new File(".//TWAMpd//htdocs//conversion//input.csv"));      
			      OutputStreamWriter osw = new OutputStreamWriter(os, "UTF8");
			      BufferedWriter bw = new BufferedWriter(osw);

			      // 載入Excel文件      
			      WorkbookSettings ws = new WorkbookSettings();
			      ws.setLocale(new Locale("zn", "ZN"));
			      Workbook wk = Workbook.getWorkbook(new File(".//TWAMpd//htdocs//conversion//Id.xls"), ws);
			      
			      // 從工作簿(workbook)取得每頁(sheets) 
			      for (int sheet = 0; sheet < wk.getNumberOfSheets(); sheet++) {
			        Sheet s = wk.getSheet(sheet);
//			        bw.write("\uFEFF");
//			        bw.write(s.getName());
//			       bw.newLine();

			        Cell[] row = null;

			        // 從每頁(sheet)取得每個區塊(Cell)
			        for (int i = 0; i < s.getRows(); i++) {
			          row = s.getRow(i);

			          if (row.length > 0) {
//			        	  bw.write("\uFEFF");
			            bw.write(row[0].getContents());
			            for (int j = 1; j < row.length; j++) {
//			            	bw.write("\uFEFF");
			              bw.write(',');
//			              bw.write("\uFEFF");
			              bw.write(row[j].getContents());
			            }
			          }
			          bw.newLine();
			        }
			      }
			      bw.flush();
			      bw.close();
			    
			    } catch (Exception e) {
			      System.err.println(e.toString());
			      //e.printStackTrace();      
			    }
		    
		    
		    
		    String code = loadPage("http://127.0.0.1/conversion/d3.php");
		    
		   
		   
	        System.out.println(code);

			 if(!(data[0][0]==null)){
				 try {
					// System.out.println(data[0][0]);
				     String url =  "http://127.0.0.1/bubble/bubble.html";           
				     Runtime.getRuntime().exec("cmd /c start " + url);
				 }catch (IOException e)
				     {
				     }
				 }
		    
		}
	 
	 public void bcsv(){
			
		    try {
		    		
			      OutputStream os = new FileOutputStream(new File(".//TWAMpd//htdocs//conversion//bput.csv"));      
			      OutputStreamWriter osw = new OutputStreamWriter(os, "UTF8");
			      BufferedWriter bw = new BufferedWriter(osw);

			      // 載入Excel文件      
			      WorkbookSettings ws = new WorkbookSettings();
			      ws.setLocale(new Locale("zn", "ZN"));
			      Workbook wk = Workbook.getWorkbook(new File(".//TWAMpd//htdocs//conversion//bar.xls"), ws);
			      
			      // 從工作簿(workbook)取得每頁(sheets) 
			      for (int sheet = 0; sheet < wk.getNumberOfSheets(); sheet++) {
			        Sheet s = wk.getSheet(sheet);
//			        bw.write("\uFEFF");
//			        bw.write(s.getName());
//			       bw.newLine();

			        Cell[] row = null;

			        // 從每頁(sheet)取得每個區塊(Cell)
			        for (int i = 0; i < s.getRows(); i++) {
			          row = s.getRow(i);

			          if (row.length > 0) {
//			        	  bw.write("\uFEFF");
			            bw.write(row[0].getContents());
			            for (int j = 1; j < row.length; j++) {
//			            	bw.write("\uFEFF");
			              bw.write(',');
//			              bw.write("\uFEFF");
			              bw.write(row[j].getContents());
			            }
			          }
			          bw.newLine();
			        }
			      }
			      bw.flush();
			      bw.close();
			    
			    } catch (Exception e) {
			      System.err.println(e.toString());
			      //e.printStackTrace();      
			    }
		    
		    
		    
		    String code = bloadPage("http://127.0.0.1/conversion/bd3.php");
		    
		   
		   
	        System.out.println(code);
	        

			 if(!(data[0][0]==null)){
				 try {
					// System.out.println(data[0][0]);
				     String url =  "http://127.0.0.1/bar/bar-hierarchy.html";           
				     Runtime.getRuntime().exec("cmd /c start " + url);
				 }catch (IOException e)
				     {
				     }
			 }
					    
		}
	 
	 public static String loadPage(String url) {
	        try {
	            URL u = new URL(url);
	            //開啟URL的連線
	            URLConnection uc = u.openConnection();
	            //設定User-Agent 假裝是瀏覽器
	            uc.setRequestProperty("User-Agent",
	                    "Mozilla/5.0 (Windows; U; Windows NT 6.0; "
	                            + "zh-TW; rv:1.8.1.12) Gecko/20080201 "
	                            + "Firefox/2.0.0.12");
	            InputStream in = new BufferedInputStream(uc.getInputStream());

	            byte[] buf = new byte[4096];
	            StringBuilder sb = new StringBuilder();

	            int i = -1;
	            while ((i = in.read(buf)) != -1) {
	                String str = new String(buf, 0, i, "utf8");
	                sb.append(str);
	                
	    		    
	            }

	            in.close();
	      /*      
	            try {
   				bt = new BufferedWriter(new FileWriter(".\\TWAMPd\\htdocs\\d3.json"));
   				 bt.write(sb.toString());
   				 bt.close();
   			} catch (IOException e1) {
   				e1.printStackTrace();
   			}
	            
	        */    
	            try { 
	            	String FileContent = ""; // 文件很长的话建议使用StringBuffer 
	                FileOutputStream fos = new FileOutputStream(".\\TWAMPd\\htdocs\\conversion\\d3.json"); 
	                OutputStreamWriter osw = new OutputStreamWriter(fos, "UTF-8"); 
	                osw.write(sb.toString()); 
	                osw.flush(); 
	            } catch (Exception e) { 
	               // e.printStackTrace(); 
	            }
	            
	            return sb.toString();
	        } catch (Exception e) {
	          //  e.printStackTrace();
	            return "";
	        }
	    }
	 public static String bloadPage(String url) {
	        try {
	            URL u = new URL(url);
	            //開啟URL的連線
	            URLConnection uc = u.openConnection();
	            //設定User-Agent 假裝是瀏覽器
	            uc.setRequestProperty("User-Agent",
	                    "Mozilla/5.0 (Windows; U; Windows NT 6.0; "
	                            + "zh-TW; rv:1.8.1.12) Gecko/20080201 "
	                            + "Firefox/2.0.0.12");
	            InputStream in = new BufferedInputStream(uc.getInputStream());

	            byte[] buf = new byte[4096];
	            StringBuilder sb = new StringBuilder();

	            int i = -1;
	            while ((i = in.read(buf)) != -1) {
	                String str = new String(buf, 0, i, "utf8");
	                sb.append(str);
	                
	    		    
	            }

	            in.close();
	      /*      
	            try {
				bt = new BufferedWriter(new FileWriter(".\\TWAMPd\\htdocs\\d3.json"));
				 bt.write(sb.toString());
				 bt.close();
			} catch (IOException e1) {
				e1.printStackTrace();
			}
	            
	        */    
	            try { 
	            	String FileContent = ""; // 文件很长的话建议使用StringBuffer 
	                FileOutputStream fos = new FileOutputStream(".\\TWAMPd\\htdocs\\conversion\\bd3.json"); 
	                OutputStreamWriter osw = new OutputStreamWriter(fos, "UTF-8"); 
	                osw.write(sb.toString()); 
	                osw.flush(); 
	            } catch (Exception e) { 
	               // e.printStackTrace(); 
	            }
	            
	            return sb.toString();
	        } catch (Exception e) {
	          //  e.printStackTrace();
	            return "";
	        }
	    }

	
	
//----------------------------End  Appr function-----------------------------------
	
}

